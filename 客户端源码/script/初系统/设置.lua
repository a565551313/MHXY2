--======================================================================--
-- @作者: GGE研究群: 342119466
-- @创建时间:   2018-03-03 02:34:19
-- @Last Modified time: 2025-05-14 01:14:25
--======================================================================--
local 场景类_系统设置 = class()
local tp
function 场景类_系统设置:初始化(根)
	self.ID = 32
	self.x = 275
	self.y = 97
	self.xx = 0
	self.yy = 0
	self.注释 = "系统设置"
	self.可视 = false
	self.鼠标 = false
	self.焦点 = false
	self.可移动 = true
	tp = 根
	self.窗口时间 = 0
end

function 场景类_系统设置:打开()
	if self.可视 then
		self.分类 = nil
		self.可视 = false
		self.资源组 = nil
		资源 = nil
		按钮 = nil
		自适应 = nil
		小型选项栏 = nil
		滑块 = nil
		return
	else
		table.insert(tp.窗口_,self)
		self.分类 = 1
		tp.系统设置 = {
			声音设置 = {140,140,true,true},
		}
		local 资源 = tp.资源
		local 按钮 = tp._按钮
		local 自适应 = tp._自适应
		local 小型选项栏 = tp._小型选项栏
		local 滑块 = tp._滑块
		self.资源组 = {
			[1] = 自适应.创建(0,1,455,427,3,9),
			[2] = 自适应.创建(1,1,451,18,1,3,nil,18),
			[3] = 自适应.创建(5,1,306,319,3,9),
			--[4] = 自适应.创建(72,1,165,23,1,3,nil,18), --背景
			[4] = 资源:载入('房屋图标.wdf',"网易WDF动画",0x00000438),
			[5] = 按钮.创建(自适应.创建(18,4,16,16,4,1),0,0,4,true,true), --关闭
			[6] = 按钮.创建(自适应.创建(12,4,72,20,1,1),0,0,4,true,true,"系统设置"),
			[7] = 按钮.创建(自适应.创建(12,4,72,20,1,1),0,0,4,true,true,"音频设置"),
			[8] = 按钮.创建(自适应.创建(12,4,72,20,1,1),0,0,4,true,true,"画面偏好"),
			[9] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --音乐按钮
			[10] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --音效按钮
			[11] = 滑块.创建(资源:载入(tp.滑块资源,"网易WDF动画",0x8D4BBC26),1,160,16,1), --音量滑块
			[12] = 滑块.创建(资源:载入(tp.滑块资源,"网易WDF动画",0x8D4BBC26),1,160,16,1), --音效滑块
			[14] = 按钮.创建(自适应.创建(12,4,72,20,1,3),0,0,4,true,true,"退出游戏"),
			[15] = 按钮.创建(自适应.创建(12,4,72,20,1,3),0,0,4,true,true,"脱离黑屏"),
			[16] = 按钮.创建(自适应.创建(12,4,72,20,1,3),0,0,4,true,true,"脱离战斗"),
			--[17] = 按钮.创建(自适应.创建(21,4,18,19,4,3),0,0,4,true,true), --下拉
			[17] = 按钮.创建(资源:载入('房屋图标.wdf',"网易WDF动画",0x10000092),0,0,4,true,true),
			[18] = 小型选项栏.创建(自适应.创建(105,1,80,110,3,9),self.游戏窗口设置),--下拉选项
			--[19] = 自适应.创建(3,1,90,22,1,3),
			[19] = 自适应.创建(106,1,96,22,1,3),
			--[20] = 按钮.创建(自适应.创建(21,4,18,19,4,3),0,0,4,true,true), --下拉
			[20] = 按钮.创建(资源:载入('房屋图标.wdf',"网易WDF动画",0x10000092),0,0,4,true,true),
			[21] = 小型选项栏.创建(自适应.创建(105,1,80,110,3,9),"底图效果"),--下拉选项
			[22] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --屏蔽玩家
			[23] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --屏蔽摊位
			[24] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --屏蔽特效
			[25] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --连点模式
			[26] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --变身造型
			[27] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --自动战斗
			[28] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --系统信息
			[29] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --活动信息
			--[30] = 按钮.创建(自适应.创建(21,4,18,19,4,3),0,0,4,true,true), --下拉
			[30] = 按钮.创建(资源:载入('房屋图标.wdf',"网易WDF动画",0x10000092),0,0,4,true,true),
			[31] = 小型选项栏.创建(自适应.创建(105,1,80,110,3,9),"字体选择"),--下拉选项
			[32] = 自适应.创建(2,1,230,100,3,9),
			[33] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --给予开关
			[34] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --锦衣显示开关
			[35] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true),---自动遇怪
			[36] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --光环足迹显示开关
			[37] = 按钮.创建(自适应.创建(12,4,72,20,1,1),0,0,4,true,true,"仙玉商城"), --光环足迹显示开关
			[38] = 按钮.创建(资源:载入(tp.打勾框,"网易WDF动画",0x00000009),0,0,1,true,true), --光环足迹显示开关
		}
		for i=9,10 do
			self.资源组[i].允许再次点击 = true
		end
		self.资源组3={
				[1] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --分辨率
				[2] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --分辨率
				[3] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --分辨率
				[4] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --分辨率
				[5] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --分辨率
				[6] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --音效按钮
				[7] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --音效按钮
				[8] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --音效按钮
				[9] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --音乐按钮
				[10] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --音效按钮
				[11] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --音效按钮
				[12] = 按钮.创建(自适应.创建(30,4,26,26,4,1),0,0,5,true,true), --音效按钮
		}
		self.资源组[22]:置打勾框(玩家显示开关)
		self.资源组[23]:置打勾框(玩家摊位显示开关)
		self.资源组[24]:置打勾框(tp.场景特效)
		self.资源组[25]:置打勾框(连点模式)
		self.资源组[26]:置打勾框(not 变身显示)
		self.资源组[27]:置打勾框(tp.战斗显示蓝条)
		self.资源组[28]:置打勾框(屏蔽系统消息)
		self.资源组[29]:置打勾框(屏蔽活动消息)
		if tp.队伍 and tp.队伍[1] then
			self.资源组[33]:置打勾框(tp.队伍[1].接受给予)
		end
		self.资源组[34]:置打勾框(屏蔽锦衣效果)
		self.资源组[35]:置打勾框(全局自动走路开关)
		self.资源组[36]:置打勾框(屏蔽光环足迹效果)
		self.资源组[38]:置打勾框(坐骑显示)
		self.资源组[11]:置起始点(self.资源组[11]:取百分比转换(游戏音量,0,140))
		self.资源组[12]:置起始点(self.资源组[12]:取百分比转换(游戏音效,0,140))
	    tp.运行时间 = tp.运行时间 + 1
	  	self.窗口时间 = tp.运行时间
	    self.可视 = true

	end
end

function 场景类_系统设置:显示(dt,x,y)
	self.焦点 = false
	self.资源组[5]:更新(x,y)
	self.资源组[6]:更新(x,y,self.分类 ~= 1)
	self.资源组[7]:更新(x,y,self.分类 ~= 2)
	self.资源组[8]:更新(x,y,self.分类 ~= 3)
	self.资源组[14]:更新(x,y)
	self.资源组[15]:更新(x,y)
	self.资源组[16]:更新(x,y)
	self.资源组[20]:更新(x,y)
	self.资源组[22]:更新(x,y)
	self.资源组[23]:更新(x,y)
	self.资源组[24]:更新(x,y)
	self.资源组[25]:更新(x,y)
	self.资源组[26]:更新(x,y)
	self.资源组[27]:更新(x,y)
	self.资源组[28]:更新(x,y)
	self.资源组[29]:更新(x,y)
	self.资源组[33]:更新(x,y)
	self.资源组[34]:更新(x,y)
	self.资源组[35]:更新(x,y)
	self.资源组[36]:更新(x,y)
	self.资源组[37]:更新(x,y)
	self.资源组[38]:更新(x,y)
	if 引擎.是否全屏 then
		self.游戏窗口设置 = "全屏窗口"
	else
		self.游戏窗口设置 = 全局游戏宽度.."*"..全局游戏高度
	end

	if self.资源组[6]:事件判断() then
		self.分类 = 1
  	elseif self.资源组[5]:事件判断() then
		self:打开()
		return
	elseif self.资源组[7]:事件判断() then
		self.分类 = 2
		self.资源组[11]:置起始点(self.资源组[11]:取百分比转换(游戏音量,0,140))
		self.资源组[12]:置起始点(self.资源组[12]:取百分比转换(游戏音效,0,140))
	elseif self.资源组[8]:事件判断() then
		 self.分类 = 3

	elseif self.资源组[14]:事件判断() then--退出
		请求服务(5)
		os.exit()
	elseif self.资源组[15]:事件判断() then--脱离黑屏
		请求服务(5.4)	
	elseif self.资源组[16]:事件判断() then--脱离战斗
		请求服务(5.5)
	elseif self.资源组[37]:事件判断() and not tp.战斗中 then--仙玉商城
    	if tp.窗口.仙玉商城类.可视 then
			    tp.窗口.仙玉商城类:打开()
			else
				请求服务(29)
			end

	end

	self.资源组[1]:显示(self.x,self.y)
	self.资源组[2]:显示(self.x+2,self.y+2)
	self.资源组[3]:显示(self.x+137,self.y+32)
	tp.窗口标题背景_[4]:显示(self.x+self.资源组[1].宽度/2-60,self.y+2)
	tp.字体表.描边字体:置字间距(3)
	tp.字体表.描边字体:显示(self.x+self.资源组[1].宽度/2-30,self.y+2,"系统设置")
	tp.字体表.描边字体:置字间距(0)
	self.资源组[5]:显示(self.x+434,self.y+2)
	self.资源组[6]:显示(self.x+21,self.y+40,true,nil,nil,self.分类 == 1,2)
	self.资源组[7]:显示(self.x+21,self.y+80,true,nil,nil,self.分类 == 2,2)
	self.资源组[8]:显示(self.x+21,self.y+120,true,nil,nil,self.分类 == 3,2)
	self.资源组[37]:显示(self.x+21,self.y+160)
	tp.竖排花纹背景_:置区域(0,0,13,393)
	tp.竖排花纹背景_:显示(self.x+111,self.y+27)
	self.资源组[14]:显示(self.x+130,self.y+360,true)
	self.资源组[15]:显示(self.x+220,self.y+360,true)
	self.资源组[16]:显示(self.x+310,self.y+360,true)
	if self.分类==1 then
		self.资源组[19]:显示(self.x+300,self.y+62)
		tp.字体表.普通字体:置颜色(白色)
		tp.字体表.普通字体:显示(self.x+305,self.y+65,"选择底图")
		tp.字体表.普通字体:置颜色(黑色)
		tp.字体表.普通字体:显示(self.x+200,self.y+65,"聊天框背景")
		tp.字体表.普通字体:显示(self.x+155,self.y+126,"显示玩家(F9)")
		tp.字体表.普通字体:显示(self.x+155,self.y+159,"开启动态特效")
		tp.字体表.普通字体:显示(self.x+155,self.y+192,"屏蔽变身造型")
		tp.字体表.普通字体:显示(self.x+155,self.y+225,"屏蔽传闻消息")
		tp.字体表.普通字体:显示(self.x+155,self.y+258,"给予接受开关")
		tp.字体表.普通字体:显示(self.x+300,self.y+126,"屏蔽摊位(F11)")
		tp.字体表.普通字体:显示(self.x+300,self.y+159,"连点模式")
		tp.字体表.普通字体:显示(self.x+300,self.y+192,"战斗显示蓝条")
		tp.字体表.普通字体:显示(self.x+300,self.y+225,"屏蔽活动消息")
		tp.字体表.普通字体:显示(self.x+300,self.y+258,"屏蔽锦衣效果")
		tp.字体表.普通字体:显示(self.x+155,self.y+291,"自 动 遇 怪")
		tp.字体表.普通字体:显示(self.x+300,self.y+291,"屏蔽光环足迹")
		tp.字体表.普通字体:显示(self.x+155,self.y+324,"显 示 坐 骑")
		self.资源组[22]:显示(self.x+255,self.y+123)
		self.资源组[23]:显示(self.x+400,self.y+123)
		self.资源组[24]:显示(self.x+255,self.y+156)
		self.资源组[25]:显示(self.x+400,self.y+156)
		self.资源组[26]:显示(self.x+255,self.y+189)
		self.资源组[27]:显示(self.x+400,self.y+189)
		self.资源组[28]:显示(self.x+255,self.y+222)
		self.资源组[29]:显示(self.x+400,self.y+222)
		self.资源组[33]:显示(self.x+255,self.y+255)
		self.资源组[34]:显示(self.x+400,self.y+255)
		self.资源组[35]:显示(self.x+255,self.y+288)
		self.资源组[36]:显示(self.x+400,self.y+288)
		self.资源组[20]:显示(self.x+377,self.y+62)
		self.资源组[21]:显示(self.x+296,self.y+81,x,y,self.鼠标)
		self.资源组[38]:显示(self.x+255,self.y+321)




		if self.资源组[21]:事件判断() then
			-- local 底图 = self.资源组[21].弹出事件
			-- self.资源组[21].弹出事件 = nil
			-- local 底图资源 = 0x1BDDA833
			-- if 底图 == "底图1" then
			-- 	tp.底图 = 1
			-- 	底图资源 = 0x1BDDA833
			-- 	资源包 = "登陆资源.wdf"
			-- end
			-- 写配置("./config.ini","mhxy","底图",tp.底图)
			-- tp.外部聊天框 = tp.资源:载入(资源包,"网易WDF动画",底图资源)
			-- tp.外部聊天框:置区域(0,0,360,1000)
			-- tp.常规提示:打开("#Y切换底图成功！")

			if 底图 ~= self.资源组[21].弹出事件 then
					local 底图 = self.资源组[21].弹出事件
				self.资源组[21].弹出事件 = nil
				local 底图资源 = 0x1BDDA833
				if 底图 == "绿色青草" then
					tp.底图 = 1
					底图资源 = 0x1BDDA833
					资源包 = "登陆资源.wdf"
				elseif 底图 == "灰色苹果" then
					tp.底图 = 2
					底图资源 = 0x10000081
					资源包 = "房屋图标.wdf"
				elseif 底图 == "深灰花纹" then
					tp.底图 = 3
					底图资源 = 0x10000082
					资源包 = "房屋图标.wdf"
				elseif 底图 == "浅蓝花纹" then
					tp.底图 = 4
					底图资源 = 0x10000083
					资源包 = "房屋图标.wdf"
				elseif 底图 == "深蓝花纹" then
					tp.底图 = 5
					底图资源 = 0x10000084
					资源包 = "房屋图标.wdf"
				elseif 底图 == "城砖花纹" then
					tp.底图 = 6
					底图资源 = 0x10000085
					资源包 = "房屋图标.wdf"
				elseif 底图 == "灰色泡泡" then
					tp.底图 = 7
					底图资源 = 0x10000086
					资源包 = "房屋图标.wdf"
				end
				写配置("./config.ini","mhxy","底图",tp.底图)
				tp.外部聊天框 = tp.资源:载入(资源包,"网易WDF动画",底图资源)
				tp.外部聊天框:置区域(0,0,360,1000)
				tp.常规提示:打开("#Y切换底图成功！")
			end



		end

		if self.资源组[20]:事件判断() then
			-- local tbt = {"底图1","底图1","底图1","底图1","底图1","底图1","底图1","底图1","底图1","底图1"}--"640*480","800*600","1024*768","1280*720","1280*768","1280*800","全屏窗口"
			-- self.资源组[21]:打开(tbt)
			-- self.资源组[21]:置选中(self.游戏窗口设置)
			local tbt = {"绿色青草","灰色苹果","深灰花纹","浅蓝花纹","深蓝花纹","城砖花纹","灰色泡泡"}--"640*480","800*600","1024*768","1280*720","1280*768","1280*800","全屏窗口"
			self.资源组[21]:打开(tbt)
			self.资源组[21]:置选中(self.游戏窗口设置)

		elseif self.资源组[22]:事件判断() then
			if 玩家显示开关 then
				玩家显示开关 = false
				玩家加载开关 = false
				for i,v in pairs(tp.场景.玩家) do
					tp.场景.玩家[i]:置人物模型()
				end
				tp.常规提示:打开("#Y/玩家动画已经屏蔽,再次按下重新加载玩家动画.....")
			else
				玩家加载开关=true
				玩家显示开关=true
				for i,v in pairs(tp.场景.玩家) do
					tp.场景.玩家[i]:置人物模型()
				end
				tp.常规提示:打开("#Y/玩家动画已经重新加载,请稍后.....")
			end
			self.资源组[22]:置打勾框(玩家显示开关)
		elseif self.资源组[23]:事件判断() then
			if 玩家摊位显示开关 then
			    玩家摊位显示开关=false
			    tp.常规提示:打开("#Y/摊位显示已关闭")
			else
				玩家摊位显示开关=true
				tp.常规提示:打开("#Y/摊位显示已开启")
			end
			self.资源组[23]:置打勾框(玩家摊位显示开关)
		elseif self.资源组[24]:事件判断() then
			if tp.场景特效 then
				tp.场景特效 = false
				写配置("./config.ini","mhxy","场景特效",tp.场景特效)
				tp.场景.地图.传送tx = nil
			--	tp.常规提示:打开("#Y场景特效没啥看头,还占内存就不开放了")
			else
				tp.场景特效 = true
				写配置("./config.ini","mhxy","场景特效",tp.场景特效)
			--	tp.常规提示:打开("#Y场景特效没啥看头,还占内存就不开放了")
			end
			self.资源组[24]:置打勾框(tp.场景特效)
		elseif self.资源组[25]:事件判断() then
			if 连点模式 then
				连点模式=false
				--tp.常规提示:打开("#Y你关闭了连点模式和关闭了#G法术简化加速")
				tp.常规提示:打开("#Y你关闭了连点模式")
			else
				连点模式=true
				--tp.常规提示:打开("#Y你开启了连点模式\n#Y长按鼠标3秒后可持续给人物或召唤兽分配属性点\n#G同时法术简化加速模式开启")
				tp.常规提示:打开("#Y你开启了连点模式\n#Y长按鼠标3秒后可持续给人物或召唤兽分配属性点")
			end
			self.资源组[25]:置打勾框(连点模式)
		elseif self.资源组[26]:事件判断() then
			if 变身显示 then
				变身显示 = false
			else
				变身显示 = true
			end
			for i,v in pairs(tp.场景.玩家) do
				tp.场景.玩家[i]:置人物模型()
			end
			tp.场景.人物:置模型()
			tp.常规提示:打开("#Y/玩家动画正在重新加载,请稍后.....")
			写配置("./config.ini","mhxy","变身显示",变身显示)
			self.资源组[26]:置打勾框(not 变身显示)
		elseif self.资源组[27]:事件判断() then
			if tp.战斗显示蓝条 then
				tp.战斗显示蓝条 = false
				tp.常规提示:打开("#Y你关闭了战斗显示蓝条，下场战斗中生效")
			else
				tp.战斗显示蓝条 = true
				tp.常规提示:打开("#Y你开启了战斗显示蓝条，下场战斗中生效")
			end
			写配置("./config.ini","mhxy","战斗显示蓝条",tp.战斗显示蓝条)
			self.资源组[27]:置打勾框(tp.战斗显示蓝条)
		elseif self.资源组[28]:事件判断() then
			if 屏蔽系统消息 then
				屏蔽系统消息 = false
			else
				屏蔽系统消息 = true
			end
			tp.常规提示:打开("#Y/设置成功.....")
			self.资源组[28]:置打勾框(屏蔽系统消息)
		elseif self.资源组[29]:事件判断() then
			if 屏蔽活动消息 then
				屏蔽活动消息 = false
			else
				屏蔽活动消息 = true
			end
			tp.常规提示:打开("#Y/设置成功.....")
			self.资源组[29]:置打勾框(屏蔽活动消息)
		elseif self.资源组[33]:事件判断() then
			请求服务(118)
		elseif self.资源组[34]:事件判断() then
			if 屏蔽锦衣效果 then
				屏蔽锦衣效果 = false
				tp.常规提示:打开("#Y锦衣屏蔽关闭,重穿锦衣生效")
			else
				屏蔽锦衣效果 = true
				tp.常规提示:打开("#Y锦衣屏蔽开启,卸下锦衣生效")
			end
			f函数.写配置(程序目录.."config.ini","mhxy","锦衣效果",屏蔽锦衣效果)
			self.资源组[34]:置打勾框(屏蔽锦衣效果)



        elseif self.资源组[35]:事件判断() then
				if 全局自动走路开关 == true then
		        	全局自动走路开关 = false
		        	tp.常规提示:打开("#Y/自动挂机已关闭!在按住Ctrl + Z 开启自动遇怪.....")
		        else
		        	if tp.场景.场景最低等级 == nil then
		        		全局自动走路开关 = false
		        		tp.常规提示:打开("#Y/自动挂机开启失败!当前场景不属于野外区.....")
		        	else
		        		全局自动走路开关 = true
		        		tp.常规提示:打开("#Y/自动挂机已开启!在按住Ctrl + Z 关闭自动遇怪.....")
		        	end
		        end
				self.资源组[35]:置打勾框(全局自动走路开关)
                请求服务(15)
       elseif self.资源组[36]:事件判断() then
			if 屏蔽光环足迹效果 then
				屏蔽光环足迹效果 = false
				tp.常规提示:打开("#Y光环足迹屏蔽关闭,重穿光环足迹生效")
			else
				屏蔽光环足迹效果 = true
				tp.常规提示:打开("#Y光环足迹屏蔽开启,卸下光环足迹生效")
			end
			f函数.写配置(程序目录.."config.ini","mhxy","光环足迹",屏蔽光环足迹效果)
			self.资源组[36]:置打勾框(屏蔽光环足迹效果)
		elseif self.资源组[38]:事件判断() then
			if 坐骑显示 then
				坐骑显示 = false
				tp.常规提示:打开("#Y坐骑显示屏蔽开启,重新乘骑坐骑剩下")
			else
				坐骑显示 = true
				tp.常规提示:打开("#Y坐骑显示屏蔽关闭,重新乘骑坐骑剩下")
			end
			f函数.写配置(程序目录.."config.ini","mhxy","坐骑显示",坐骑显示)
			self.资源组[38]:置打勾框(坐骑显示)
		end
	elseif self.分类 == 2 then
		self.资源组[9]:更新(x,y,tp.音乐开启 )
		self.资源组[10]:更新(x,y,tp.系统设置.声音设置[4] ~= true)
		tp.字体表.普通字体:置颜色(-16777216)
		tp.字体表.普通字体:显示(self.x+165,self.y+70,"音频")
		tp.字体表.普通字体:显示(self.x+195,self.y+101,"游戏音乐")
		tp.字体表.普通字体:显示(self.x+195,self.y+141,"游戏音效")
		self.资源组[9]:显示(self.x+166,self.y+94,true,nil,nil,游戏音量 > 0,4)
		self.资源组[10]:显示(self.x+166,self.y+136,true,nil,nil,游戏音效>0,4)
		for i=1,2 do
			self.资源组[4]:显示(self.x+257,self.y+56+i*40)
		end
		self.资源组[11]:显示(self.x+258,self.y+98,x,y,self.鼠标)
		self.资源组[12]:显示(self.x+258,self.y+138,x,y,self.鼠标)
		if self.资源组[11].接触 then
			游戏音量 = math.ceil(140*self.资源组[11]:取百分比())
			tp.音乐:置音量(游戏音量)
			self.焦点 = true
			f函数.写配置(程序目录.."./config.ini","mhxy","音量",游戏音量)
			if 游戏音量 > 0 and not tp.音乐开启 then
				tp.音乐开启 = true
				写配置("./config.ini","mhxy","音乐播放",tp.音乐开启)
				tp.音乐:播放()
			elseif 游戏音量 <= 0 and tp.音乐开启 then
				tp.音乐:停止()
				tp.音乐开启 = false
				写配置("./config.ini","mhxy","音乐播放",tp.音乐开启)
			end
		elseif self.资源组[12].接触 then
			游戏音效 = math.ceil(140*self.资源组[12]:取百分比())
			f函数.写配置(程序目录.."./config.ini","mhxy","音效",游戏音效)
			self.焦点 = true
		end
		if self.资源组[9]:事件判断() then
			tp.音乐开启 = not tp.音乐开启
		  	if not tp.音乐开启 then
				tp.音乐:停止()
				游戏音量 = 0
				系统参数.音量=游戏音量
				tp.音乐:置音量(0)
				self.资源组[11]:置起始点(self.资源组[11]:取百分比转换(游戏音量,0,140))
				写配置("./config.ini","mhxy","音乐播放",tp.音乐开启)
			else
				tp.音乐:播放()
				游戏音量 = 100
				系统参数.音量=游戏音量
				tp.音乐:置音量(游戏音量)
				self.资源组[11]:置起始点(self.资源组[11]:取百分比转换(游戏音量,0,140))
				写配置("./config.ini","mhxy","音乐播放",tp.音乐开启)
			end
			f函数.写配置(程序目录.."./config.ini","mhxy","音量",游戏音量)
		elseif self.资源组[10]:事件判断() then
			tp.音效开启 = not tp.音效开启
		  	if not tp.音效开启 then
		  		游戏音效=0
		  		self.资源组[12]:置起始点(self.资源组[12]:取百分比转换(游戏音效,0,140))
				写配置("./config.ini","mhxy","音效开启",tp.音效开启)
			else
				游戏音效=100
				self.资源组[12]:置起始点(self.资源组[12]:取百分比转换(游戏音效,0,140))
				写配置("./config.ini","mhxy","音效开启",tp.音效开启)
			end
			f函数.写配置(程序目录.."./config.ini","mhxy","音效",游戏音效)
		end
	elseif self.分类 == 3 then
		tp.字体表.普通字体:置颜色(-16777216)
		tp.字体表.普通字体:显示(self.x+165,self.y+70,"画面分辨率")
		tp.字体表.普通字体:显示(self.x+192,self.y+101,"800*600")
		tp.字体表.普通字体:显示(self.x+270,self.y+101,"1024*768")
		tp.字体表.普通字体:显示(self.x+360,self.y+101,"1280*720")
		tp.字体表.普通字体:显示(self.x+190,self.y+131,"1280*768")
		tp.字体表.普通字体:显示(self.x+280,self.y+131,"1280*800")
		self.资源组[17]:更新(x,y)
		self.资源组[30]:更新(x,y)

		self.资源组3[1]:更新(x,y,self.游戏窗口设置~="800*600")
		self.资源组3[2]:更新(x,y,self.游戏窗口设置~="1024*768")
		self.资源组3[3]:更新(x,y,self.游戏窗口设置~="1280*720")
		self.资源组3[4]:更新(x,y,self.游戏窗口设置~="1280*768")
		self.资源组3[5]:更新(x,y,self.游戏窗口设置~="1280*800")

		self.资源组3[1]:显示(self.x+166,self.y+94,true,nil,nil,self.游戏窗口设置=="800*600",4)
		self.资源组3[2]:显示(self.x+246,self.y+94,true,nil,nil,self.游戏窗口设置=="1024*768",4)
		self.资源组3[3]:显示(self.x+336,self.y+94,true,nil,nil,self.游戏窗口设置=="1280*720",4)
		self.资源组3[4]:显示(self.x+166,self.y+126,true,nil,nil,self.游戏窗口设置=="1280*768",4)
		self.资源组3[5]:显示(self.x+256,self.y+126,true,nil,nil,self.游戏窗口设置=="1280*800",4)

		tp.字体表.普通字体:显示(self.x+165,self.y+161,"画面风格")
		self.资源组[19]:显示(self.x+245,self.y+161)
		self.资源组[19]:显示(self.x+245,self.y+191)

		self.资源组[32]:显示(self.x+165,self.y+221)
--		tp.字体表.描边字体:显示(self.x+170,self.y+230,"原神这么好玩,不玩才怪")

		self.资源组[17]:显示(self.x+325,self.y+161)

		self.资源组[18]:显示(self.x+245,self.y+182,x,y,self.鼠标)


		tp.字体表.普通字体:显示(self.x+255,self.y+163,self.临时界面)

		if self.资源组[17]:事件判断() then
			local tbt = {"暂无界面"}
			self.资源组[18]:打开(tbt)
			self.资源组[18]:置选中(self.游戏窗口设置)
		end
		if self.资源组[18]:事件判断() then
			if self.临时界面 ~= self.资源组[18].弹出事件 then
				self.临时界面 =self.资源组[18].弹出事件
				local fc = tp._自适应.创建()
				if self.临时界面 == "经典" then
					界面风格 = 1
					fc:加载(tp)
				end
			end
			self.资源组[18].弹出事件 = nil
		end
		if self.资源组3[1]:事件判断() then
			引擎.置宽高(800,600)
			全局游戏宽度 = 800
			全局游戏高度 = 600
			withs = 全局游戏宽度
			hegts = 全局游戏高度
			with = 全局游戏宽度/2
			hegt = 全局游戏高度/2
			写配置("./config.ini","mhxy","宽度",全局游戏宽度)
			写配置("./config.ini","mhxy","高度",全局游戏高度)
		elseif self.资源组3[2]:事件判断() then
			引擎.置宽高(1024,768)
			全局游戏宽度 = 1024
			全局游戏高度 = 768
			withs = 全局游戏宽度
			hegts = 全局游戏高度
			with = 全局游戏宽度/2
			hegt = 全局游戏高度/2
			写配置("./config.ini","mhxy","宽度",全局游戏宽度)
			写配置("./config.ini","mhxy","高度",全局游戏高度)
		elseif self.资源组3[3]:事件判断() then
			引擎.置宽高(1280,720)
			全局游戏宽度 = 1280
			全局游戏高度 = 720
			withs = 全局游戏宽度
			hegts = 全局游戏高度
			with = 全局游戏宽度/2
			hegt = 全局游戏高度/2
			写配置("./config.ini","mhxy","宽度",全局游戏宽度)
			写配置("./config.ini","mhxy","高度",全局游戏高度)
		elseif self.资源组3[4]:事件判断() then
			引擎.置宽高(1280,768)
			全局游戏宽度 = 1280
			全局游戏高度 = 768
			withs = 全局游戏宽度
			hegts = 全局游戏高度
			with = 全局游戏宽度/2
			hegt = 全局游戏高度/2
			写配置("./config.ini","mhxy","宽度",全局游戏宽度)
			写配置("./config.ini","mhxy","高度",全局游戏高度)
		elseif self.资源组3[5]:事件判断() then
			引擎.置宽高(1280,800)
			全局游戏宽度 = 1280
			全局游戏高度 = 800
			withs = 全局游戏宽度
			hegts = 全局游戏高度
			with = 全局游戏宽度/2
			hegt = 全局游戏高度/2
			写配置("./config.ini","mhxy","宽度",全局游戏宽度)
			写配置("./config.ini","mhxy","高度",全局游戏高度)
		end

		tp.字体表.普通字体:置颜色(-16777216)
		tp.字体表.普通字体:显示(self.x+165,self.y+191,"字体设置")

		self.资源组[30]:显示(self.x+325,self.y+191)
		--self.资源组[31]:显示(self.x+250,self.y+211,x,y,self.鼠标)
		self.资源组[31]:显示(self.x+245,self.y+212,x,y,self.鼠标)
		tp.字体表.普通字体:显示(self.x+255,self.y+193,self.临时字体)



		if self.资源组[30]:事件判断() then
			local tbt = {"华康少女体"}--"640*480","800*600","1024*768","1280*720","1280*768","1280*800","全屏窗口"
			self.资源组[31]:打开(tbt)
			self.资源组[31]:置选中(self.游戏窗口设置)
		end

		if self.资源组[31]:事件判断() then
			if self.临时字体 ~= self.资源组[31].弹出事件 then
				self.临时字体 =self.资源组[31].弹出事件
				if self.临时字体 == "华康少女体" then
					界面字体 = 1
					tp.字体表.人物字体=require("gge文字类")("wdf/font/hkyt.ttf",16,false,true,false)
					tp.字体表.人物字体:置描边颜色(-16777216)
					tp.字体表.人物字体:置颜色(4294967295)
				end
				写配置("./config.ini","mhxy","界面字体",界面字体)
			end
			self.资源组[31].弹出事件 = nil
		end
	end
end


function 场景类_系统设置:检查点(x,y)
	if self.资源组~=nil and  self.资源组[1]:是否选中(x,y)  then
		return true
	end
end

function 场景类_系统设置:初始移动(x,y)
	tp.运行时间 = tp.运行时间 + 1
	if not 引擎.消息栏焦点 then
  		self.窗口时间 = tp.运行时间
 	end
	if not self.焦点 then
		tp.移动窗口 = true
	end
	if self.鼠标 and  not self.焦点 then
		self.xx = x - self.x
		self.yy = y - self.y
	end
end

function 场景类_系统设置:开始移动(x,y)
	if self.鼠标 then
		self.x = x - self.xx
		self.y = y - self.yy
	end
end

return 场景类_系统设置