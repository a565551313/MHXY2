


-- local 例子=[[
--   技能例子={
--             类型 = "物伤",
--             门派 = "门派限制", ---通用的不要加这个参数
--             -----防止误加技能(非下列技能无加参数)
--             被动 = 1           ---不加载技能
--             敌方 = 1           ---判断给敌方使用的增益技能
--             灵宝 = 1           ---判断是否灵宝技能
--             法宝 = 1           ---判断是否法宝技能
--             宝宝 = 1           ---判断宠物法宝
--             角色 = 1           ---判断角色法宝
--             特技 = 1           ---判断是否特技
--             奇经八脉 = 1       ---判断是否奇经八脉技能
--             奇经特效 = 1       ---判断是否奇经八特效技能
--             无效类型           ------真对复活技能不能生效的单位类型
--             -----防止误加技能(非上列技能无加参数)

--             目标 = function(self,编号,目标)
--                   local 返回 = 目标
--                   return 返回
--             end,
--             ----------------必填项目,无特殊要求直接返回



--             冷却 = function(self,编号)
--                   local 开始,使用 = 0,0
--                   return {开始=开始,使用=使用}
--             end,
--             ----------------冷却设定,可忽略



--             连击处理 = function(self,编号,等级,返回) -------技能连击处理
--                       if 条件成立 then
--                           返回.次数 = 1
--                           返回.比列 = 1
--                           返回.比列 = 0.5
--                       end
--             end,
--             --返回(参数) 次数=0,比列=1 ---比列是本次使用伤害比 次数是使用几次连击
--             -----------返回次数连击次数,比例伤害比例(物理无效,不触发连击不要返回值)

--             加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理


--             end,
--             -----------初始化加载法宝的数据

--             次数 = function(self,编号,等级)
--                   local 次数 = 1
--                   return 次数
--             end,
--             ----------------群体物伤技能需求,大循环次数,先走消耗,人数和目标,前置在小循环之前(每次大循环重新调用函数,其他类型无效)



--             人数 = function(self,编号,等级,境界) ---技能人数
--                     local 数量 = 1
--                      if 数量>7 then 数量 = 7 end
--                     return 数量
--             end,
--             ----境界(参数)法宝 境界对应境界,灵宝等级对应境界,境界对应消耗
--             ----------------技能人数,连击次数等(大部分无效),可忽略



--             消耗 = function(self,编号,数量) --技能消耗
--                    return self:魔法消耗(编号,50,1,"技能例子")
--             end,
--             ----------------普攻,状态,群体物伤可忽略,其他类型必填



--             特效 = function(类型) ---技能人数
--                   return "技能例子"
--             end,
--             ----------------改变打击动画特效动画显示,可忽略



--             添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号

--             end,
--             --状态(参数)={类型=1,回合=0,其他的人物(基础,五维,灵饰等)属性}
--             ----------------添加状态是需求,只有添加状态没有技能使用时 类型填入"状态",其他可忽略,接受状态参数(状态.回合 状态.类型 状态.伤害等)
--             --其他可填说明(有或不填)
--             --------状态.等级  改变目标获得状态后的等级 改变成改项参数
--             --------状态.境界  改变目标获得状态后的境界 改变成改项参数
--             --------状态.编号  改变目标获得状态后的编号 改变成改项参数
--             --------状态.??  目标获得状态后添加的未知参数
--             --------状态.??  table类型 循环添加或改变目标获得状态的健等值
--             --------状态.不可添加 ----取消本次状态添加




--             解除状态 = function(self,编号,目标,名称,数据)

--             end,
--             --数据(参数)--流程=流程,挨打=挨打,编号=取编号(添加状态的编号)
--             --名称(参数)--解除状态的名称
--             ----其他可填说明
--             -------数据.不可解除 ---不会解除该状态

--             ----------------群体解除状态时触发函数,可忽略

--             技能流程 = function(self,编号,目标,境界)  ---------循环开始前

--             end,
--             ----境界(参数)法宝 境界对应境界,灵宝等级对应境界,境界对应消耗

--             前置流程 = function(self,编号,等级,前置,类型,境界)  ---------循环开始前
--                         if 类型 =="伤害" then
--                         end
--             end,
--             --前置固定接受
--             ----境界(参数)法宝 境界对应境界,灵宝等级对应境界,境界对应消耗
--             ------前置.目标,前置.目标数,前置.目标组,前置.重复攻击
--             ------前置.流程(一般为最后战斗流程,有可能为0)
--             ------前置.结尾 使用技能结束扣除该项数额的气血(一般为0,横扫等需要,治疗中某些技能会扣除本身气血)
--             --其他可填说明(有或不填)
--             ------前置.名称     --某些技能需要改变流程中技能释放名称和效果
--             ------前置.中途返回 --物理流程循环中需要中间返回在去的时候使用

--             ------前置.先手动画 --动手之前播放一次动画后发动其他攻击,有这项客户端会先发动一次对目标的动画
--             ------前置.全屏动画 --改变技能层全屏动画,物理技能会预先播放动画,原205序号需要
--             ------前置.重复攻击 --所有循环流程重复打击或封印恢复目标单位--循环次数为"前置.目标数" 必须重新定义该项目数额(群体物伤该项目无效,普通攻击默认开启)
--             ------前置.技能提示 --改变技能提示显示 默认释放技能会提示,普通攻击默认不提示
--             ------前置.添加状态 --table类型 名称,等级,3个参数,非多项,必填一项,境界和回合参数选填(如果给非编号本人添加,目标需标明具体编号,其他情况目标可忽略,普攻类无效,不要添加限制行动状态)
--             ----------------------(表中值为字典或table类型,值为table类型(内表值必须为字典类型)参数类同), 封印技能无效

--             ------前置.取消状态   --string类型 直接取消目标该项目的状态,(物伤类无效)
--             ------------------------table类型(非目标情况下使用,目标~=编号,其余解除状态名)

--             ------前置.结束流程   ---直接终止本次技能所有释放
--             ------前置.分身攻击   ---群体物理分身多人攻击,不写这项除溅射外人物会跑到屏幕中间施法

--             ----------------无需求可忽略
--             基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环

--                        if 类型=="伤害" then
--                        end


--             end,
--             ----------------必填项目,循环开始时首先调用,某些不计算结果可忽略
--             -------------------------------基础计算函数用法--------------------------------------
--             --基础(参数) = {初始系数=1,叠加系数=0,初始伤害=0,防御系数=1,忽视防御=0, ---初始计算
--             --                暴击系数=1,暴击增加=0,暴伤系数=1,暴伤增加=0,            ---暴击计算
--             --                结果系数=1,结果伤害=0}
--             --境界(参数)法宝 境界对应境界,灵宝等级对应境界,境界对应消耗                               ---最终计算
--             --数据(参数) ={次数=循环次数,总数=目标数,流程=当前流程,挨打=挨打序号}
--             --伤害计算方式说明(物伤,法伤,固伤)
--             -------对方防御 = math.floor(对方防御 * 基础.防御系数 - 基础.忽视防御) (防御,法防)
--             -------攻击伤害 = math.floor(攻击伤害 * 基础.初始系数 + 基础.初始伤害 + self.参战单位[编号].穿刺等级)(伤害,法伤)

--             --封印技能变更说明
--             ------初始系数 ---玩家封印命中系数        ------初始伤害 ---增加玩家封印命中等级
--             ------忽视防御 ---减少目标抵抗封印等级    ------防御系数 ---目标抵抗封印系数
--             ------成功几率 = 30 + math.floor ((玩家封印等级 * 初始系数 + 初始伤害)/60 -(目标抗封等级 * 防御系数 + 忽视防御)/60)
--             ------结果系数 ---封印成功几率系数        ------结果伤害 ---封印成功几率
--             ------成功几率 * 结果系数  +结果伤害
--             --治疗技能变更说明
--             ------初始伤害 为0不进行治疗恢复流程      ------初始系数
--             ---------计算方式:((玩家治疗能力+初始伤害)*初始系数+目标恢复效果)*法攻修加成 *最终系数(结果系数+暴击系数)+结果伤害(结果伤害+爆伤增加)
--             --增益减益类变更说明
--             --------恢复气血伤势等同治疗类
--             --------基础.无需状态 流程没设计需要添加状态的情况需设置该项,否则会自动添加状态
--             --------------------------------返回.初始系数,返回.叠加系数 等
--             --其他可填说明(有或不填)
--             --------基础.不可反震  --物伤不触发反震
--             --------基础.直接反震  --物伤忽视几率直接反震 有该项"不可反震","不可反击","直接反击"无效
--             --------基础.不可反击  --物伤不触发反击
--             --------基础.直接反击  --物伤忽视几率直接反击 有该项"不可反击"无效
--             --------基础.不可保护  --物伤不触发保护
--             --------基础.不可减免  --法伤不触发减免(罗汉金钟 太极等)
--             --------基础.直接减免  --法伤忽视几率直接减免  有该项"不可减免"无效
--             --------基础.减免系数  --法伤触发减免伤害系数*多少--0.5*
--             --------基础.减免增加  --法伤触发减免后伤害增加多少 和减免系数冲突
--             --------基础.不可神佑  --受伤不触发神佑效果
--             --------基础.直接神佑  --受伤忽视几率直接神佑  有该项"不可神佑"无效
--             --------基础.不可封印  --封印技能直接不封印也不触发封印失败
--             --------基础.直接封印  --封印技能忽视几率直接封印  有该项"不可封印"无效 会触发封印失败
--             --------基础.添加状态  --table类型 名称,等级,3个参数,非多项,必填一项,境界和回合参数选填(如果给编号本人添加,目标=编号,其他情况目标可忽略)
--             ----------------------(表中值为字典或table类型,值为table类型(内表值必须为字典类型)参数类同), 封印技能无效

--             --------基础.取消状态   --string类型 直接取消目标该项目的状态,
--             ------------------------table类型(非目标情况下使用,目标=编号,其余解除状态名)

--             --------基础.固定结果  --最终伤害或治疗改变成该项输入的数额
--             --------基础.造成伤势  --table类型 参数{数额=0,比例=1} ,计算方式:(本次总伤 + 数额)*比例,(表中值为字典类型)
--             ------------------------伤害计算中造成伤势,恢复计算中恢复伤势("类型"参数,1为扣除 2为恢复,可不填,法伤固伤默认扣除,治疗,增益默认恢复.减益默认扣除)
--             --------基础.扣除魔法  --结束本次伤害或恢复后对目标扣除 本次伤害乘改项 的魔法值(判定有效进行扣除,无计算结果类无效)
--             --------基础.增加魔法  --结束本次伤害或恢复后对目标增加该项数额的魔法(判定有效进行增加)
--             --------基础.减少气血  --结束本次伤害或恢复后对目标减少该项数额的气血)
--             --------基础.法术吸血  --固伤,法伤有吸血动作填入本次伤害系数的吸血量,其他技能不生效
--             -------------------------------------------------------------------------------------------




--             封印成功 = function(self,编号,目标,等级,数据,返回)
--             end,
--             --------返回.添加状态  --table类型 名称,等级,3个参数,非多项,必填一项,境界和回合参数选填(如果给编号本人添加,目标=编号,其他情况目标可忽略)
--             ----------------------(表中值为字典或table类型,值为table类型(内表值必须为字典类型)参数类同), 封印技能无效

--             --------返回.取消状态   --string类型 直接取消目标该项目的状态,
--             ------------------------table类型(非目标情况下使用,目标=编号,其余解除状态名)



--             封印失败 = function(self,编号,目标,等级,数据,返回)
--             end,
--             --------返回.添加状态  --table类型 名称,等级,3个参数,非多项,必填一项,境界和回合参数选填(如果给编号本人添加,目标=编号,其他情况目标可忽略)
--             ----------------------(表中值为字典或table类型,值为table类型(内表值必须为字典类型)参数类同), 封印技能无效

--             --------返回.取消状态   --string类型 直接取消目标该项目的状态,
--             ------------------------table类型(非目标情况下使用,目标=编号,其余解除状态名)

--             ------------封印成功和失败时触发,只有封印类技能生效




--             死亡处理 = function(self,编号,目标)
--                         local 驱鬼 = 0
--                         return 驱鬼
--             end,



--             ------------技能驱鬼可以返回1,有死亡处理调用,可忽略
--             循环结束 = function(self,编号,目标,伤害,等级,数据,类型)-----循环尾部
--                         if 类型 == "伤害" then
--                         end
--             end,
--               --数据(参数) ={次数=循环次数,总数=目标数,流程=当前流程,挨打=挨打序号}
--             --------数据.添加状态  --table类型 名称,等级,3个参数,非多项,必填一项,境界和回合参数选填(如果给编号本人添加,目标=编号,其他情况目标可忽略)
--             ----------------------(表中值为字典或table类型,值为table类型(内表值必须为字典类型)参数类同), 封印技能无效

--             --------数据.取消状态   --string类型 直接取消目标该项目的状态,
--             ------------------------table类型(非目标情况下使用,目标=编号,其余解除状态名)
--             -----------循环结束时调用,可忽略

--             群体结尾 = function(self,编号,次数,等级,前置,返回)-----群体物攻循环末尾
--                         if 类型 == "伤害" then
--                         end
--             end,
--             ------前置.目标,前置.目标数,前置.目标组,前置.重复攻击
--             ---可添加参数
--             --------返回.添加状态  --table类型 名称,等级,3个参数,非多项,必填一项,境界和回合参数选填(如果给编号本人添加,目标=编号,其他情况目标可忽略)
--             ----------------------(表中值为字典或table类型,值为table类型(内表值必须为字典类型)参数类同), 封印技能无效

--             --------返回.取消状态   --string类型 直接取消目标该项目的状态,
--             ------------------------table类型(非目标情况下使用,目标=编号,其余解除状态名)
--             -----------循环结束时调用,可忽略


--             结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
--                       if 类型=="伤害" then
--                       end
--             end,
--             -- 返回(参数) ={}  返回.添加状态 = xxxx  返回.取消状态 = xxx
--             ------返回.添加状态  table类型 名称,等级,3个参数,非多项,必填一项,境界和回合参数选填(如果给非编号本人添加,目标需标明具体编号,其他情况目标可忽略)
--             ----------------------(表中值为字典或table类型,值为table类型(内表值必须为字典类型)参数类同), 封印技能无效

--             ------返回.取消状态  --string类型 直接取消目标该项目的状态,
--             ------------------------table类型(非目标情况下使用,目标~=编号,其余解除状态名)





--             -----------其他类型循环结束后只调用一次,群体物理是内循环结束调用一次,可忽略
--             最终结束 = function(self,编号,流程,返回,类型) -------循环结束后
--                       if 类型=="伤害" then
--                       end
--             end,
--             -- 流程(参数) 最后一次攻击流程序号
--             -- 返回(参数) ={}  返回.添加状态 = xxxx  返回.取消状态 = xxx
--             ------返回.添加状态  table类型 名称,等级,3个参数,非多项,必填一项,境界和回合参数选填(如果给非编号本人添加,目标需标明具体编号,其他情况目标可忽略)
--             ----------------------(表中值为字典或table类型,值为table类型(内表值必须为字典类型)参数类同), 封印技能无效

--             ------返回.取消状态   --string类型 直接取消目标该项目的状态,
--             ------------------------table类型(非目标情况下使用,目标~=编号,其余解除状态名)


--             -----------群体物理大循环全部结束后使用(其他类型无效),可忽略




--         },---技能例子

--         --奇经八脉套装触发几率                          套装触发几率
--         --奇经八脉取装备追加法术                        装备追加法术
--         --奇经八脉经脉异常解除                          解除所有经脉异常
--         --取封印状态技能                                self.技能数据.封印
--         --取异常状态法术                                self.技能数据.异常
--         --取封印状态1                                   取友封印数量
--         --取法宝异常法术                                self.技能数据.法宝异常
--         --取对方可偷取增益技能1                         重复函数已移除  随机对方增益状态
--         --奇经八脉增益技能驱散                          移除相应内容写道技能数据的 解除状态 函数中
--         --取对方可偷取增益技能                          随机对方增益状态
--         --取玩家经脉增益                                随机取消经脉增益
--         --取玩家增益技能数量                            取增益数量
--         --取玩家异常状态数量                            取异常数量
--         --:取多个友方目标                            --取友方目标组

-- ]]







战斗技能 ={
-------------------------物伤技能
  横扫千军={ ---物伤例子
            类型 = "物伤",
            门派 = "大唐官府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   if self.参战单位[编号].奇经八脉.神凝 then
                          return true
                    elseif self.参战单位[编号].类型=="角色" and self.参战单位[编号].气血<self.参战单位[编号].最大气血*0.5 then
                          self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用横扫千军")
                          return false
                    end
                  return  true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合 = 2
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.目标数=3
                        前置.重复攻击=true
                        if not self.参战单位[编号].奇经八脉.神凝 and self.参战单位[编号].类型=="角色"  then
                              前置.结尾=math.floor(self.参战单位[编号].最大气血*0.1)
                        end
                        if self.参战单位[编号].奇经八脉.无敌 then
                            前置.目标数=4
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 0.85 + 0.0031*等级^2/等级 + 数据.次数 * 0.15
                        if self.参战单位[编号].奇经八脉.无敌 then
                            基础.初始系数  = 基础.初始系数  - 0.1
                        end
                        if self.参战单位[编号].奇经八脉.勇念 then
                            基础.防御系数 = 基础.防御系数 - 0.15
                        end
                        if self.参战单位[编号].气血>=self.参战单位[编号].最大气血*0.9 and self.参战单位[编号].奇经八脉.突刺 then
                            基础.结果系数 = 基础.结果系数 + 0.05
                        end
            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.孤勇 and self:取是否单独门派(编号) and self.参战单位[目标].类型~="角色" then
                            self.参战单位[编号].奇经八脉孤勇 = 1
                      end
                      return 0
            end,
            循环结束 = function(self,编号,目标,伤害,等级,数据,类型)-----循环尾部
                    if self.参战单位[编号].剑意>=11 and 类型=="伤害" then
                        local 额外 = {目标=目标,人数=3}
                        self:物理同时多个攻击(编号,nil,等级,额外)
                    end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        返回.添加状态={}
                        if not self.参战单位[编号].奇经八脉.神凝  then
                                if self.参战单位[编号].神器技能~=nil and self.参战单位[编号].神器技能.名称=="藏锋敛锐" and 取随机数()<=40 then
                                     if self.参战单位[编号].神器技能.等级==1 then
                                         返回.添加状态[1]={名称="护盾",等级=math.floor(前置.结尾*0.5)}
                                     else
                                         返回.添加状态[1]={名称="护盾",等级=math.floor(前置.结尾)}
                                     end
                                end
                        end
                        local  连破几率 = 10
                        if self.参战单位[编号].奇经八脉亢强~=nil then
                            连破几率 = 连破几率 + self.参战单位[编号].奇经八脉亢强
                            self.参战单位[编号].奇经八脉亢强=nil
                        end
                        if self.参战单位[编号].奇经八脉乘胜~=nil then
                            连破几率 = 连破几率 + self.参战单位[编号].奇经八脉乘胜
                            self.参战单位[编号].奇经八脉乘胜=nil
                        end
                        if self.参战单位[编号].奇经八脉孤勇~=nil then
                            连破几率 = 连破几率 + 250
                            self.参战单位[编号].奇经八脉孤勇 = nil
                        end
                        if self.参战单位[编号].奇经八脉.熟练 and self:取是否单独门派(编号) then
                            连破几率 = 连破几率 + 170
                        end
                        if self.参战单位[编号].奇经八脉.勇进 and not self.参战单位[编号].奇经八脉勇进 and self:取玩家战斗()then
                            self.参战单位[编号].奇经八脉勇进 = 1
                            连破几率 = 连破几率 + 1000
                        end
                        if self.参战单位[编号].门派=="大唐官府" and self.参战单位[编号].神话词条 and self.参战单位[编号].神话词条.连破六合 and 取随机数()<=self.参战单位[编号].神话词条.连破六合*15 then
                        elseif self.参战单位[编号].奇经特效.连破  and 取随机数(1,1000)<=连破几率 then
                        else
                               返回.添加状态[2]={名称="横扫千军"}
                        end
                        if  self.参战单位[编号].奇经八脉.风刃 and 取随机数()<=50 then
                              返回.添加状态[3]={名称="风魂",等级=10}
                        end
                        if self.参战单位[编号].奇经八脉.破军  then
                                self.参战单位[编号].剑意 = self.参战单位[编号].剑意 + 1
                        end
            end,
        },---横扫千军--完成
  破釜沉舟={
            类型 = "物伤",
            门派 = "大唐官府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = 4
                    if self.参战单位[编号].奇经八脉.历战 then
                       数量 = 数量 +取随机数(1,4)
                    end
                    if self.参战单位[编号].奇经八脉.执剑 and self:取是否单独门派(编号) and  not self.参战单位[编号].奇经八脉执剑加成 then
                       数量 = 数量 +3
                       self.参战单位[编号].奇经八脉执剑加成 = 1
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   if self.参战单位[编号].奇经八脉.神凝 then
                          return true
                    elseif self.参战单位[编号].类型=="角色" and self.参战单位[编号].气血<self.参战单位[编号].最大气血*0.5 then
                          self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用横扫千军")
                          return false
                    end
                  return  true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合 = 2
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.全屏动画= 1
                        if not self.参战单位[编号].奇经八脉.神凝 and self.参战单位[编号].类型=="角色"  then
                              前置.结尾=math.floor(self.参战单位[编号].最大气血*0.1)
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0034 * 等级^2/等级 - 数据.总数 * 0.025

            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        返回.添加状态={}
                        返回.添加状态[1]={目标=编号}
                        if self.参战单位[编号].奇经八脉.风刃 and 取随机数()<=50 then
                           返回.取消状态 = "风魂"
                           返回.添加状态[2]={名称="风魂",等级=10}
                        end
            end,
        },---破釜沉舟--完成
  翩鸿一击={
            类型 = "物伤",
            门派 = "大唐官府",
            奇经特效 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                 return self:魔法消耗(编号,50,1,"翩鸿一击")
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=6}
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)   ---名称 目标 编号
                        状态.回合=2
                        状态.速度=math.floor(self.参战单位[目标].速度*0.15)
                        状态.类型=2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0031 * 等级^2/等级
                        if self.参战单位[编号].奇经八脉.目空  then
                           基础.防御系数 = 基础.防御系数 - 0.1
                        end
                        if self.参战单位[编号].奇经八脉.翩鸿  then
                              基础.结果系数 = 基础.结果系数 + 0.35
                              local 状态=self:随机对方增益状态(目标)
                              if 状态 then
                                  基础.取消状态=状态
                              else
                                  self:随机取消经脉增益(目标)
                              end
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        返回.添加状态={名称="翩鸿一击"}
            end,
        },---翩鸿一击--完成
  长驱直入={
            类型 = "物伤",
            门派 = "大唐官府",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                 return self:魔法消耗(编号,50,1,"长驱直入")
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=6}
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.不可保护 = 1
                        基础.结果系数 = 1.1
                        基础.初始系数 = 1 + 0.0031 * 等级^2/等级
                        if 取随机数()<=60 then
                            基础.添加状态={名称="重创"}
                        end
            end,
        },---长驱直入--完成
  满天花雨={
            类型 = "物伤",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                 return self:魔法消耗(编号,45,1,"满天花雨")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0023 * 等级^2/等级
                        if self.参战单位[编号].漫天层数 then
                            if self.参战单位[编号].漫天层数==1 then
                                基础.结果系数 = 1.1
                            elseif self.参战单位[编号].漫天层数==2 then
                                  基础.结果系数 = 1.15
                            else
                                  基础.结果系数 = 1.2
                            end
                        end
                        local 中毒几率 = 30
                        if self.参战单位[编号].奇经八脉.杏花 then
                            中毒几率 = 中毒几率 + 4
                        end
                        if self.参战单位[编号].奇经八脉.独尊 or self.参战单位[编号].奇经八脉.重明 then
                            中毒几率 = 中毒几率 - 4
                        end
                        if  取随机数(1,100)<=中毒几率 then
                            基础.添加状态={名称="暗器毒",等级=等级*2}
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if not self.参战单位[编号].漫天层数 then
                           self.参战单位[编号].漫天层数=0
                        end
                        self.参战单位[编号].漫天层数=self.参战单位[编号].漫天层数+1
                        if self.参战单位[编号].漫天层数>3 then
                           self.参战单位[编号].漫天层数=3
                        end
            end,
        },---满天花雨--完成
  嫣然曼舞={
            类型 = "物伤",
            门派 = "女儿村",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                 return self:魔法消耗(编号,50,数量,"嫣然曼舞")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                  if self.参战单位[编号].乐韵 then
                    self.参战单位[编号].乐韵 = self.参战单位[编号].乐韵 + 1
                 end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         self.参战单位[目标].不加愤怒 = 1
                         self:愤怒消耗(目标,8,"嫣然曼舞")
                         基础.初始系数 = 1 + 0.0023 * 等级^2/等级
            end,
        },---嫣然曼舞--完成
  惊鸿起舞={
            类型 = "物伤",
            门派 = "女儿村",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>4 then 数量 = 4 end
                    if self.参战单位[编号].法术状态.夺目 then
                       数量=数量 + 1
                    end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                 return self:魔法消耗(编号,30,数量,"惊鸿起舞")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                if self.参战单位[编号].乐韵 and self.参战单位[编号].乐韵>0 then
                    self.参战单位[编号].乐韵 = self.参战单位[编号].乐韵 - 1
                    self.参战单位[编号].乐韵加成 = 1
                    if self.参战单位[编号].奇经八脉.夺目 then
                        前置.添加状态={名称="夺目"}
                    end
                end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                    基础.初始系数 = 0.8 + 0.002 * 等级^2/等级
                    if 数据.次数==1 then
                       if self.参战单位[目标].类型 =="角色" then
                           基础.结果系数 = 基础.结果系数  + 0.5
                       else
                           基础.结果系数 = 基础.结果系数  + 0.1
                       end
                    end

            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.跃动 then
                         self.参战单位[编号].奇经八脉跃动=1
                      end
                      return 0
            end,
        },---惊鸿起舞--完成
  风回旋舞={
            类型 = "物伤",
            门派 = "女儿村",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                 return self:魔法消耗(编号,50,数量,"风回旋舞")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                 if self.参战单位[编号].乐韵 then
                    self.参战单位[编号].乐韵 = self.参战单位[编号].乐韵 + 1
                 end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0023 * 等级^2/等级
            end,
        },---风回旋舞--完成
  映日妙舞={
            类型 = "物伤",
            门派 = "女儿村",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>4 then 数量 = 4 end
                    if self.参战单位[编号].法术状态.夺目 then
                       数量=数量 + 1
                    end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                 return self:魔法消耗(编号,30,数量,"映日妙舞")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                if self.参战单位[编号].乐韵 and self.参战单位[编号].乐韵>0 then
                    self.参战单位[编号].乐韵 = self.参战单位[编号].乐韵 - 1
                    self.参战单位[编号].乐韵加成 = 1
                    if self.参战单位[编号].奇经八脉.夺目 then
                        前置.添加状态={名称="夺目"}
                    end
                end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 0.8 + 0.002 * 等级^2/等级
                        self.参战单位[目标].映日妙舞减伤 = 编号

            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.跃动 then
                         self.参战单位[编号].奇经八脉跃动=1
                      end
                      return 0
            end,
        },---映日妙舞--完成
  余韵索心={
            类型 = "物伤",
            门派 = "女儿村",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  if self.参战单位[编号].奇经八脉.即兴 and self.回合数<=4 then
                  else
                       if self.回合数%2 == 0 and not self.参战单位[编号].奇经八脉.夺目 and not self.参战单位[编号].奇经八脉.即兴 then ---请
                          self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/该舞步只能在奇数回合使用")
                         return false
                       end
                       if self.回合数%2 == 0 and  self.参战单位[编号].奇经八脉.夺目~=nil and not self.参战单位[编号].法术状态.夺目 and not self.参战单位[编号].法术状态.返场  then
                           self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/该舞步只能在奇数回合使用")
                          return false
                       end
                  end
                  return self:魔法消耗(编号,100,数量,"余韵索心")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                      基础.初始系数 = 2.2 + 0.0013 * 等级^2/等级
                      if self.参战单位[编号].奇经八脉.天籁 then
                          基础.初始系数 = 2.6 + 0.0013 * 等级^2/等级
                      end

            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.跃动 then
                         self.参战单位[编号].奇经八脉跃动=1
                      end
                      return 0
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        返回.添加状态={}
                        if self.参战单位[编号].法术状态.夺目~=nil then
                            返回.添加状态[1]={名称="返场"}
                            返回.取消状态="夺目"
                        end
                        if not self.参战单位[编号].法术状态.返场 then
                            返回.添加状态[2]={名称="横扫千军"}

                        end
            end,
        },---余韵索心--完成
  轻歌飘舞={
            类型 = "物伤",
            门派 = "女儿村",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"轻歌飘舞")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                       if self.参战单位[编号].乐韵 then
                          self.参战单位[编号].乐韵 = self.参战单位[编号].乐韵 + 1
                       end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0023 * 等级^2/等级
                        if self.参战单位[编号].奇经八脉.独舞 and self.参战单位[目标].类型 == "角色" then
                            基础.结果系数 = 基础.结果系数 +0.15
                        end

            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                      for i=1,#self.参战单位 do
                          if self.参战单位[编号].队伍 ==  self.参战单位[i].队伍 then
                             self.参战单位[i].轻歌飘舞加成 = 1
                              if self.参战单位[编号].奇经八脉.幽美 then
                                 self.参战单位[i].轻歌飘舞加成 = 2
                              end
                          end
                      end
            end,
        },---轻歌飘舞--完成
  翩跃飞舞={
            类型 = "物伤",
            门派 = "女儿村",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"翩跃飞舞")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>4 then 数量 = 4 end
                    if self.参战单位[编号].法术状态.夺目  then
                     数量=数量+1
                    end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                if self.参战单位[编号].乐韵 and self.参战单位[编号].乐韵>0 then
                    self.参战单位[编号].乐韵 = self.参战单位[编号].乐韵 - 1
                    self.参战单位[编号].乐韵加成 = 1
                    if self.参战单位[编号].奇经八脉.夺目 then
                        前置.添加状态={名称="夺目"}
                    end
                end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       基础.初始系数 = 0.8 + 0.002 * 等级^2/等级
                       if self.参战单位[编号].奇经八脉.翻飞 then
                          基础.结果系数 = 基础.结果系数 +数据.次数*0.1
                       else
                          基础.结果系数 = 基础.结果系数 +数据.次数*0.05
                       end
                       if self.参战单位[编号].奇经八脉.纷舞 and self.参战单位[目标].类型~="角色" then
                          基础.结果系数 = 基础.结果系数 +0.2
                       end
            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.跃动 then
                         self.参战单位[编号].奇经八脉跃动=1
                      end
                      return 0
            end
        },---翩跃飞舞--完成
  鸿渐于陆={
            类型 = "物伤",
            门派 = "女儿村",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=4}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,100,数量,"鸿渐于陆")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0031 * 等级^2/等级
                        基础.初始伤害 = math.floor(self.参战单位[编号].武器伤害 * 1.3)
                        基础.添加状态={名称="暗器毒",等级=等级*2}
            end,
        },---鸿渐于陆--完成
  血影蚀心={
            类型 = "物伤",
            门派 = "阴曹地府",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"血影蚀心")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0026 * 等级^2/等级
                        基础.添加状态={名称="尸腐毒"}
                        if self.参战单位[编号].奇经八脉.阴翳 then
                            基础.结果系数=基础.结果系数+0.05
                        end
            end,
        },---血影蚀心--完成
  百鬼噬魂={
            类型 = "物伤",
            门派 = "阴曹地府",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,35,数量,"百鬼噬魂")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>4 then 数量 = 4 end
                    return 数量
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0023 * 等级^2/等级
                        if 取随机数()<=10 then
                            基础.添加状态={名称="尸腐毒"}
                        end
                        if self.参战单位[编号].奇经八脉.阴翳 then
                            基础.结果系数=基础.结果系数+0.1
                        end
            end,
        },---百鬼噬魂--完成
  生杀予夺={
            类型 = "物伤",
            门派 = "阴曹地府",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    local 返回 = {开始=18,使用=36}
                    if self:取是否单独门派(编号) then
                            local 数量 = 0
                            for i=1,#self.参战单位 do
                                if self.参战单位[i] and self.参战单位[i].队伍 ~=self.参战单位[编号].队伍 and  self.参战单位[i].法术状态.尸腐毒 then
                                    数量 = 数量 + 1
                                end
                            end
                            返回.使用 = 返回.使用 - 数量*2
                    end
                    return 返回
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,100,数量,"生杀予夺")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 2.3 + 0.0034 * 等级^2/等级
                        if self.参战单位[目标].法术状态.毒 or self.参战单位[目标].法术状态.尸腐毒 or self.参战单位[目标].法术状态.暗器毒 then
                            基础.暴伤系数=基础.暴伤系数+0.6
                        end
            end,

        },---生杀予夺--完成
  无赦咒令={
            类型 = "物伤",
            门派 = "阴曹地府",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"无赦咒令")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1.1
                        基础.取消状态={}
                        local 状态 = self:随机对方增益状态(目标)
                        if 状态 then
                            table.insert(基础.取消状态,状态)
                        else
                            self:随机取消经脉增益(目标)
                        end
                        if self.参战单位[目标].法术状态.毒 or self.参战单位[目标].法术状态.尸腐毒 then
                            local 状态 = self:随机对方增益状态(目标)
                            if 状态 then
                                table.insert(基础.取消状态,状态)
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
            end,
        },---无赦咒令--完成
  百爪狂杀={
            类型 = "物伤",
            门派 = "阴曹地府",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,35,数量,"百爪狂杀")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量=math.floor(等级/30)+2
                    if 数量>=4 then 数量=4 end
                    return 数量
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0029 * 等级^2/等级 - 数据.总数 * 0.025
                        if self.参战单位[编号].奇经八脉.夜之王者  then
                            基础.结果系数=基础.结果系数+0.14
                            if 昼夜参数==1  then
                                基础.暴击系数 = 基础.暴击系数 + 0.1
                            end
                        end
                        if self.参战单位[编号].武器必中 then
                            if self.参战单位[目标].类型 == "角色" then
                               基础.结果系数=基础.结果系数+0.1
                            else
                               基础.结果系数=基础.结果系数+0.03
                            end
                        end
                        if self.参战单位[编号].噬毒百爪加成~=nil then
                            基础.结果系数 = 基础.结果系数 + 0.6
                        end
                        if self.参战单位[编号].奇经八脉.百炼 then
                            基础.结果伤害 = 基础.结果伤害+玩家数据[self.参战单位[编号].玩家id].经脉:武器伤害处理(20)
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        self.参战单位[编号].噬毒百爪加成 = nil
            end,
        },---百爪狂杀--完成
  六道无量={
            类型 = "物伤",
            门派 = "阴曹地府",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,40,数量,"六道无量")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态) ---名称 目标 编号
                      状态.防御 =math.floor(self.参战单位[目标].等级 * 1.6+70)
                      状态.回合 = 3
                      状态.类型=1
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                         if 前置.目标组 and 前置.目标组[1] then
                            local 临时 = {}
                            for i=1,#self.参战单位 do
                                if i ~= 前置.目标组[1] and  self.参战单位[i] and self.参战单位[i].队伍 ~= self.参战单位[编号].队伍 and self.参战单位[i].法术状态.尸腐毒 then
                                    table.insert(临时,i)
                                end
                            end
                            前置.目标组[2]=临时[取随机数(1,#临时)]
                            前置.目标数 = 2
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0026 * 等级^2/等级
                        if self.参战单位[编号].噬毒六道加成~=nil then
                            基础.结果系数 = 基础.结果系数 + 0.6
                        end
                        if self.参战单位[目标].类型 == "角色" then
                            基础.添加状态={}
                            基础.添加状态[1]={目标=目标}
                            基础.添加状态[2]={目标=编号}
                        end
                        if self.参战单位[编号].奇经八脉阎罗~=nil then
                            基础.结果系数= 基础.结果系数 + 0.2
                        end
                        if self.参战单位[编号].奇经八脉.六道 then
                            基础.结果伤害= 基础.结果伤害+ 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("六道轮回")*4
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                       self.参战单位[编号].噬毒六道加成 = nil
                       self.参战单位[编号].奇经八脉阎罗 = nil
            end,
        },---六道无量--完成
  象形={
            类型 = "物伤",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,80,数量,"象形")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态) ---名称 目标 编号
                      状态.回合 = 2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.添加状态={名称="象形"}
                        基础.初始系数 = 1 + 0.0034 * 等级^2/等级
                        基础.防御系数 = 基础.防御系数 - 0.1
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后

                        返回.添加状态={名称="鹰击"}
                        返回.取消状态={}
                        local 取消变身 = true
                        if self.参战单位[编号].奇经八脉.怒象 and self.参战单位[编号].气血<= self.参战单位[编号].最大气血*0.3 and 取随机数()<=70 then
                            取消变身 = false
                            if self.参战单位[编号].法术状态.变身 then
                                self.参战单位[编号].法术状态.变身.回合 = self.参战单位[编号].法术状态.变身.回合 + 2
                            end
                        end
                        if self.参战单位[编号].奇经八脉.象踏 and self.参战单位[编号].法术状态.狂怒 then
                            取消变身 = false
                            table.insert(返回.取消状态,"狂怒")
                        end
                        if 取消变身 then
                            table.insert(返回.取消状态,"变身")
                        end
            end
        },---象形--完成
  鹰击={
            类型 = "物伤",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"鹰击")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量=math.floor(等级/35)+2
                    if 数量>=7 then 数量=7 end
                    if self.参战单位[编号].法术状态.背水 then
                        数量 =数量 + 1
                    end
                    if self.参战单位[编号].奇经八脉.狂乱 and  self.参战单位[编号].法术状态.狂怒 and 取随机数()<=40 then
                        数量 =数量 + 1
                    end
                    return 数量
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态) ---名称 目标 编号
                        状态.回合 = 2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.初始系数 = 1 + 0.0039 * 等级^2/等级 - 数据.总数 * 0.025
                         基础.防御系数 = 基础.防御系数 - 0.15
                         if self.参战单位[编号].奇经八脉死地 then
                                基础.初始伤害 = 基础.初始伤害 + 200
                         end
                         if self.参战单位[编号].奇经八脉.鹰啸 then
                                基础.结果系数 = 基础.结果系数 + 0.05
                         end
                         if self.参战单位[编号].奇经八脉.肝胆 then
                           if not self.参战单位[编号].召唤兽 or (self.参战单位[编号].召唤兽 and not self.参战单位[self.参战单位[编号].召唤兽])
                              or (self.参战单位[编号].召唤兽  and self.参战单位[self.参战单位[编号].召唤兽]
                              and  self.参战单位[self.参战单位[编号].召唤兽].气血<=0) then
                                基础.结果系数 = 基础.结果系数 + 0.15
                            end
                         end
                         if self.参战单位[编号].奇经八脉.九天 and self:取是否单独门派(编号) then
                                基础.结果系数 = 基础.结果系数 + 0.05
                         end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].门派=="狮驼岭" and self.参战单位[编号].神话词条 and self.参战单位[编号].神话词条.鹏程万里
                           and 取随机数()<=self.参战单位[编号].神话词条.鹏程万里*16 then
                        else
                            返回.添加状态={名称="鹰击"}
                        end
                        self.参战单位[编号].奇经八脉死地 = nil
            end,
        },---鹰击--完成
  狮搏={
            类型 = "物伤",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"狮搏")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0034 * 等级^2/等级
                        基础.防御系数 = 基础.防御系数 - 0.2
                        if self.参战单位[编号].奇经八脉.图腾 and self.参战单位[编号].召唤兽 and self.参战单位[self.参战单位[编号].召唤兽]
                          and self.参战单位[self.参战单位[编号].召唤兽].气血>0 then
                             基础.结果系数 = 基础.结果系数 + 0.05
                        end
                        if self.参战单位[编号].奇经八脉.钢牙 then
                            if self:取装备五行(编号,3)=="金" then
                               基础.结果系数 = 基础.结果系数 + 0.05
                            end
                            if self:取装备五行(编号,4)=="金" then
                               基础.结果系数 = 基础.结果系数 + 0.05
                            end
                        end
                        if self.参战单位[编号].奇经八脉.威压 and self.参战单位[目标].类型~="角色" then
                                基础.结果系数 = 基础.结果系数 + 0.2
                        end
                        if self.参战单位[编号].奇经八脉.威压 and self.参战单位[目标].类型~="角色" and 取随机数()<=30  then
                                基础.添加状态={名称="威慑",回合=2}
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].奇经八脉.狮噬 and 取随机数()<=35 then
                            返回.次数 = 1
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].经脉流派=="万兽之王"  then
                            self.参战单位[编号].狮魂 = self.参战单位[编号].狮魂 + 1
                            if self.参战单位[编号].奇经八脉.护盾 and self.参战单位[编号].召唤兽 and
                               self.参战单位[self.参战单位[编号].召唤兽] and self.参战单位[self.参战单位[编号].召唤兽].气血>0 then
                               local 护盾加成 = 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("狂兽诀") * 12
                                返回.添加状态={名称="护盾",目标=self.参战单位[编号].召唤兽,等级=math.floor(护盾加成)}
                            end
                        end
            end,
        },---狮搏--完成
  连环击={
            类型 = "物伤",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"连环击")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.目标数=math.floor(等级/35)+2
                        前置.重复攻击=true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0031 * 等级^2/等级 - 数据.次数 * 0.03
                        基础.防御系数 = 基础.防御系数 - 0.1
                        if self.参战单位[编号].奇经八脉.乱击 then
                            基础.初始伤害 =基础.初始伤害 + 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("狂兽决")
                            基础.结果系数 = 基础.结果系数 + 0.1
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                          返回.添加状态={名称="鹰击"}
                          local 取消变身 = true
                          if self.参战单位[编号].奇经八脉.乱击 and self.参战单位[编号].法术状态.变身 and self.参战单位[编号].法术状态.变身.回合>2 then
                                取消变身 = false
                                self.参战单位[编号].法术状态.变身.回合 = self.参战单位[编号].法术状态.变身.回合 - 2
                          end
                          if  self.参战单位[编号].奇经八脉.雄风 and self.参战单位[编号].法术状态.狂怒 then
                                取消变身 = false
                          end
                          if 取消变身 then
                                返回.取消状态="变身"
                          end
            end,
        },---连环击--完成
  幼狮之搏={
            类型 = "物伤",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"幼狮之搏")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0024 * 等级^2/等级
                        基础.防御系数 = 基础.防御系数 - 0.2
                        if self.参战单位[编号].主人 and self.参战单位[self.参战单位[编号].主人].狮魂>0 then
                            if self.参战单位[编号].奇经八脉.狮王 then
                                   基础.结果系数 = 基础.结果系数 + 0.25
                                else
                                    基础.结果系数 = 基础.结果系数 + 0.1
                                end
                        end
                     if  self.参战单位[编号].主人 and  self.参战单位[self.参战单位[编号].主人].奇经八脉.钢牙 then
                            if self:取装备五行(self.参战单位[编号].主人,3)=="金" then
                                基础.结果系数 = 基础.结果系数 + 0.05
                            end
                            if self:取装备五行(self.参战单位[编号].主人,4)=="金" then
                                基础.结果系数 = 基础.结果系数 + 0.05
                            end
                     end
            end,

            死亡处理 = function(self,编号,目标)
                        if self.参战单位[编号].主人 and self.参战单位[self.参战单位[编号].主人].奇经八脉.嗜血 and self.参战单位[目标].类型=="角色" then
                           self.参战单位[编号].奇经八脉嗜血 = 4
                        end
                      return 0
            end,
        },---幼狮之搏--完成
  鹰击长空={
            类型 = "物伤",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"鹰击长空")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量=math.floor(等级/30)+1
                    if 数量>=5 then 数量=5 end
                    return 数量
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.初始系数 = 1 + 0.0034 * 等级^2/等级 - 数据.总数*0.035
                         基础.防御系数 = 基础.防御系数 - 0.15
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        返回.添加状态={名称="鹰击"}
                        if self.参战单位[编号].主人 and self.参战单位[self.参战单位[编号].主人].奇经八脉.急救 then
                            self:增加气血(编号,math.floor(self.参战单位[编号].最大气血*0.05))
                        end
            end,
        },---鹰击长空--完成
  最佳搭档={
            类型 = "物伤",
            门派 = "狮驼岭",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=8}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   if not self.参战单位[编号].法术状态.变身 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前没有变身，无法使用最佳搭档")
                        return false
                   end
                   if self.参战单位[编号].狮魂<1 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前狮魂不足，无法使用最佳搭档")
                        return false
                   end
                   if self:魔法消耗(编号,50,数量,"最佳搭档")then
                        self.参战单位[编号].狮魂=self.参战单位[编号].狮魂-1
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的狮魂为#R/"..self.参战单位[编号].狮魂.."#Y/点")
                        return true
                   end

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.不可保护=1
                        基础.初始系数 = 1 + 0.0034 * 等级^2/等级
                        基础.防御系数 = 基础.防御系数 - 0.2
            end,
        },---最佳搭档--完成
  困兽之斗={
            类型 = "物伤",
            门派 = "狮驼岭",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=8}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                     if self.参战单位[编号].气血<self.参战单位[编号].最大气血*0.15 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用困兽之斗")
                        return false
                     end

                  return self:魔法消耗(编号,100,数量,"困兽之斗")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                       if self.参战单位[编号].法术状态.狂怒~=nil and 取随机数()<=50 then
                          前置.目标组[2]=前置.目标组[1]
                          前置.重复攻击=true
                          前置.目标数 = 2
                       end
                       前置.结尾=math.floor(self.参战单位[编号].气血*0.1)
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0034 * 等级^2/等级
                        基础.防御系数 = 基础.防御系数 - 0.2
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[前置.目标组[1]].气血<=0  then
                            返回.添加状态={名称="狂怒",回合=5}
                        end
            end,
        },---困兽之斗--完成
  绝命毒牙={
            类型 = "物伤",
            门派 = "盘丝洞",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    return {开始=5,使用=10}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"绝命毒牙")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       基础.初始系数 = 1 + 0.0034 * 等级^2/等级
                       基础.防御系数 = 基础.防御系数-0.5
                       if self.参战单位[目标].法术状态.天罗地网  then
                           基础.结果系数=基础.结果系数+self.参战单位[目标].法术状态.天罗地网.回合*0.5
                       end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                         返回.添加状态={名称="横扫千军"}
            end,
        },---绝命毒牙--完成
  牵魂蛛丝={
            类型 = "物伤",
            门派 = "盘丝洞",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=8}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return true
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        if 前置.目标组[1]~= 前置.目标 and self:取目标状态(编号,前置.目标,1) then
                            前置.目标组={前置.目标}
                            前置.添加状态={名称="天罗地网",目标=前置.目标}
                        else
                           前置.添加状态={名称="天罗地网",目标=前置.目标组[1]}
                           if #前置.目标组>1 then
                                for i=2,#前置.目标组 do
                                    前置.目标组[i]=nil
                                end
                           end
                       end
                       for k,v in pairs(self.参战单位) do
                          if v.队伍~=self.参战单位[编号].队伍 and v.法术状态.天罗地网 and v.法术状态.天罗地网.编号==编号 then
                            table.insert(前置.目标组, k)
                          end
                       end
                       前置.目标数 = #前置.目标组
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       基础.初始系数 = 1 + 0.0031 * 等级^2/等级

            end,
        },---牵魂蛛丝--完成
  千蛛噬魂={
            类型 = "物伤",
            门派 = "盘丝洞",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量 = 3 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"千蛛噬魂")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.初始系数 = 1 + 0.0031 * 等级^2/等级 - 数据.总数*0.025
                         if self.参战单位[编号].奇经八脉.狂击 then
                                基础.暴击系数 = 基础.暴击系数 + 0.1
                         end
                         if self.参战单位[目标].法术状态.天罗地网~=nil and self.参战单位[目标].法术状态.天罗地网.编号 == 编号 then
                            基础.结果系数=基础.结果系数 + 0.1
                         end
                         if self.参战单位[编号].奇经八脉.天网 and 取随机数()<=15 then
                            if self.参战单位[目标].法术状态.天罗地网 then
                                self.参战单位[目标].法术状态.天罗地网.回合 = 5
                            else
                                 基础.添加状态={名称="天罗地网"}
                            end
                         end
                         if self.参战单位[编号].奇经八脉.千蛛 and self.参战单位[目标].类型~="角色" then
                                基础.结果系数=基础.结果系数 + 0.3
                         end
            end,
        },---千蛛噬魂
  蛛丝缠绕={
            类型 = "物伤",
            门派 = "盘丝洞",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"蛛丝缠绕")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0026 * 等级^2/等级
                        基础.添加状态={名称="天罗地网",回合=4}
                        if self.参战单位[编号].奇经八脉.引诛 and self.参战单位[目标].类型=="角色" then
                            基础.结果系数=基础.结果系数+0.06
                        end
                        if self.参战单位[编号].奇经八脉.罗刹 and 取随机数()<=30 then
                             基础.添加状态.回合=5
                        end

            end,
        },---蛛丝缠绕
  天雷斩={
            类型 = "物伤",
            门派 = "天宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"天雷斩")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量=math.floor(等级/40)+2
                    if self.参战单位[编号].类型 == "bb" then
                       return 3
                    end
                    if self:取玩家战斗() then 数量=1 end
                    if self.参战单位[编号].门派=="天宫" and  self.参战单位[编号].神话词条.霹霹电芒
                        and 取随机数()<=self.参战单位[编号].神话词条.霹霹电芒*15 then
                        数量 = 数量 + self.参战单位[编号].神话词条.霹霹电芒
                    end
                    return 数量
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0025 * 等级^2/等级 - 数据.总数*0.025
                        if self:取玩家战斗()==false then
                            基础.结果系数=1.05
                        end
                        基础.初始伤害=基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        if self.参战单位[编号].符石技能.天雷地火 then
                            基础.初始伤害=math.floor(基础.初始伤害+self.参战单位[编号].符石技能.天雷地火)
                        end
                        if self.参战单位[编号].奇经八脉.疾雷 and self.参战单位[目标].玩家id==0 then
                            基础.初始伤害 = math.floor(基础.初始伤害+0.6*(self.参战单位[编号].敏捷-self.参战单位[编号].等级))
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].门派=="天宫"  and self.参战单位[编号].神话词条.天神下凡
                            and 取随机数()<=self.参战单位[编号].神话词条.天神下凡*15 then
                            返回.次数 = 1
                        end
            end,
        },---天雷斩
  枫影二刃={
            类型 = "物伤",
            门派 = "九黎城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"枫影二刃")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标数 =  2
                        前置.重复攻击 = true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       基础.结果系数 = 1  + 0.0015 * 等级^2/等级 - 数据.次数 * 0.1
                        if self.参战单位[编号].奇经八脉.枫魂 then
                              if self.参战单位[编号].法术状态.怒哮 then
                                  if self.参战单位[目标].类型~="角色" then
                                      基础.结果系数 = 基础.结果系数 + 0.2
                                  end
                              else
                                    基础.添加状态={名称="怒哮",目标=编号}
                              end
                        elseif 取随机数()<=35 and not self.参战单位[编号].法术状态.怒哮 then
                                基础.添加状态={名称="怒哮",目标=编号}
                        end
                        if self.参战单位[目标].玩家id==0 and self.参战单位[编号].奇经八脉.怒刃 then
                              基础.结果系数 = 基础.结果系数 + 0.25
                              if self.参战单位[编号].装备 and self.参战单位[编号].装备[4]
                                and string.find(self.参战单位[编号].装备[4].名称,"(坤)") then
                                 基础.结果系数=基础.结果系数 + 0.25
                              end

                        end
            end,
        },---枫影二刃
  一斧开天={
            类型 = "物伤",
            门派 = "九黎城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"一斧开天")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标数 =  2
                        前置.重复攻击 = true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.结果系数 = 1  + 0.0015 * 等级^2/等级 - 数据.次数 * 0.1
                        if self.参战单位[编号].奇经八脉.得势 then
                            基础.结果系数 = 基础.结果系数 + 0.15
                        end
                        if not self.参战单位[目标].法术状态.浮空 then
                            if self.参战单位[编号].奇经八脉.乘风 then
                                    基础.添加状态={名称="浮空"}
                            else
                                local 几率 = 45
                                if self.参战单位[编号].法术状态.怒哮 then
                                     几率 = 几率 + 30
                                     基础.取消状态={目标=编号,"怒哮"}
                                end
                                if self.参战单位[编号].奇经八脉.识破 then
                                     几率 = 几率 + 5
                                end
                                if 取随机数()<=几率 then
                                      基础.添加状态={名称="浮空"}
                                end
                            end
                        end
            end,
            循环结束 = function(self,编号,目标,伤害,等级,数据,类型)-----循环尾部
                            if self.参战单位[目标].气血>0 and not self.参战单位[目标].法术状态.浮空  then
                                if self.参战单位[编号].奇经八脉.震怒 then
                                        数据.添加状态={名称="怒哮",目标=编号}
                                elseif 取随机数()<=45 then
                                        数据.添加状态={名称="怒哮",目标=编号}
                                end
                            end
            end,
        },---一斧开天
  铁血生风={
            类型 = "物伤",
            门派 = "九黎城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"铁血生风")
            end,
            技能流程 = function(self,编号,目标)  ---------循环开始前
                        self:法术攻击处理(编号,{名称="铁血生风",目标=目标})
                        if self.参战单位[编号].奇经八脉.生风 and 取随机数()<=8 and self:取目标状态(编号,目标,1)
                            and self.参战单位[目标].法术状态.浮空  then
                            self.参战单位[编号].奇经八脉生风 = true
                        end
                        local 连续普通=function()
                                for i=1,取随机数(1,2) do
                                    if self:取目标状态(编号,目标,1) then
                                        self:普通攻击计算(编号,nil,0.6,self.参战单位[编号].等级,nil,{目标=目标})
                                    end
                                end
                        end
                        if self:取目标状态(编号,目标,1) and self.参战单位[目标].法术状态.浮空  then
                            连续普通()
                            while self.参战单位[编号].奇经八脉生风 and self:取目标状态(编号,目标,1) do
                                self:法术攻击处理(编号,{名称="铁血生风",目标=目标})
                                连续普通()
                                self.参战单位[编号].奇经八脉生风 =nil
                                if self.参战单位[编号].奇经八脉.生风 and 取随机数()<=8 then
                                    self.参战单位[编号].奇经八脉生风 = true
                                end
                            end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.结果系数 = 1  + 0.0015 * 等级^2/等级 - 数据.次数 * 0.1
            end,
        },---铁血生风
  风雷斩={
            类型 = "物伤",
            门派 = "天宫",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self.参战单位[编号].法术状态.雷怒霆激 then
                        local 数量 = math.floor(等级/30)+1
                        if 数量>3 then 数量 = 3 end
                        return 数量
                    end
                    return 1
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"风雷斩")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.结果系数=1.1
                        基础.初始系数 = 1 + 0.0028 * 等级^2/等级 - 数据.总数 * 0.025
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        if 数据.次数==1 and self.参战单位[编号].法术状态.霹雳弦惊 then
                            基础.结果伤害 = 基础.结果伤害 +self.参战单位[编号].等级
                        end
            end,
        },---风雷斩
  威仪九霄={
            类型 = "物伤",
            门派 = "天宫",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            冷却 = function(self,编号)
                    return {开始=3,使用=6}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,30,数量,"威仪九霄")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        基础.结果系数 = 0.15
                        基础.结果系数 = 基础.结果系数 + self.参战单位[编号].威仪九霄加成 * 0.03
                        self.参战单位[编号].威仪九霄加成 = 0
            end,
        },---威仪九霄
  烟雨剑法={
            类型 = "物伤",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗

                  return self:魔法消耗(编号,50,数量,"烟雨剑法")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标数 =  2
                        前置.重复攻击 = true
                        if self.参战单位[编号].奇经八脉起雨 and self.参战单位[编号].骤雨
                            and self.参战单位[编号].骤雨.回合>0 and self.参战单位[编号].骤雨.层数>=3 then
                           self.参战单位[编号].骤雨.层数 = 0
                           self.参战单位[编号].奇经八脉起雨 = nil
                           前置.目标数 = 前置.目标数 + 1
                        end
                        if self.参战单位[编号].门派=="五庄观" and self.参战单位[编号].神话词条 and self.参战单位[编号].神话词条.潇湘骤雨 and 取随机数()<=self.参战单位[编号].神话词条.潇湘骤雨*15 then
                            前置.目标数 = 前置.目标数 +  self.参战单位[编号].神话词条.潇湘骤雨
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.002 * 等级^2/等级 + 数据.次数 * 0.05
                        if self.参战单位[编号].符石技能.烟雨飘摇 then
                            基础.初始伤害 =math.floor(基础.初始伤害 + self.参战单位[编号].符石技能.烟雨飘摇)
                        end
                        if self.参战单位[编号].奇经八脉.雨杀
                           and self.参战单位[目标].类型~="角色"
                           and 数据.次数==2 then
                               基础.暴击系数 = 基础.暴击系数 + 0.2
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].骤雨~=nil then
                            self.参战单位[编号].骤雨.层数 = self.参战单位[编号].骤雨.层数 +1
                             if self.参战单位[编号].奇经八脉.滂沱 then
                                if self.参战单位[编号].骤雨.层数>=5 then
                                   self.参战单位[编号].骤雨.层数 = 5
                                end
                             else
                                if self.参战单位[编号].骤雨.层数>=3 then
                                  self.参战单位[编号].骤雨.层数 = 3
                                  if self.参战单位[编号].奇经八脉.起雨 then
                                     self.参战单位[编号].奇经八脉起雨 = 1
                                  end
                                end
                             end
                             if self.参战单位[编号].骤雨.回合 == 0 then
                                self.参战单位[编号].骤雨.回合 = 3
                             end
                        end
            end,
        },---烟雨剑法
  飘渺式={
            类型 = "物伤",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,30,数量,"飘渺式")
            end,
            人数 = function(self,编号,等级) ---技能人数
                        local 数量=math.floor(等级/30)+1
                        if self:取玩家战斗() then 数量=1 end
                        if self.参战单位[编号].门派=="五庄观" and self.参战单位[编号].神话词条
                           and self.参战单位[编号].神话词条.潇湘骤雨
                           and 取随机数()<=self.参战单位[编号].神话词条.潇湘骤雨*15 then
                             数量 = 数量 + self.参战单位[编号].神话词条.潇湘骤雨
                        end
                    return 数量
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0025 * 等级^2/等级 - 数据.总数 * 0.025
                        if self.参战单位[编号].符石技能.烟雨飘摇 then
                            基础.初始伤害 =math.floor(基础.初始伤害 + self.参战单位[编号].符石技能.烟雨飘摇)
                        end
            end,
        },---飘渺式
  天命剑法={
            类型 = "物伤",
            门派 = "五庄观",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    if self.参战单位[编号].气血<self.参战单位[编号].最大气血*0.7 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用天命剑法")
                        return false
                    end
                    return  true
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=4}
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                           前置.目标数=取随机数(3,7)
                        if self.参战单位[编号].门派=="五庄观" and self.参战单位[编号].神话词条 and self.参战单位[编号].神话词条.地仙老祖 and 取随机数()<= self.参战单位[编号].神话词条.地仙老祖*50 then
                            前置.目标数=取随机数(5,7)
                        end
                            前置.重复攻击=true
                        if self.参战单位[编号].类型=="角色" then
                            前置.结尾=math.floor(self.参战单位[编号].最大气血*0.02*前置.目标数)
                        end

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.初始系数 = 1 + 0.0028 * 等级^2/等级 - 数据.次数 * 0.03
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                          返回.添加状态={名称="横扫千军"}
            end,
        },---天命剑法
  敲金击玉={
            类型 = "物伤",
            门派 = "五庄观",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return  self:魔法消耗(编号,50,1,"敲金击玉")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                         if self.参战单位[编号].人参娃娃~= nil then
                            self.参战单位[编号].人参娃娃.回合 = 3
                            self.参战单位[编号].人参娃娃.层数 = self.参战单位[编号].人参娃娃.层数 +1
                            if self.参战单位[编号].人参娃娃.层数>=3 then
                               self.参战单位[编号].人参娃娃.层数 = 3
                            end
                         end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.002 * 等级^2/等级
                        if self.参战单位[编号].奇经八脉.还元 and self.参战单位[编号].人参娃娃 and self.参战单位[编号].人参娃娃.回合>0 and self.参战单位[编号].人参娃娃.层数>=3 then
                              基础.暴击增加 = 基础.暴击增加 + 6
                        end
                        if self.参战单位[编号].奇经八脉.归真 and self.参战单位[编号].人参娃娃 and self.参战单位[编号].人参娃娃.回合>0 and self.参战单位[编号].人参娃娃.层数>=3 then
                              基础.暴击系数 = 基础.暴击系数 + 0.05
                        end
                        if self.参战单位[编号].人参娃娃  then
                             if self.参战单位[编号].人参娃娃.回合>0 and self.参战单位[编号].人参娃娃.层数>0 then
                               if self.参战单位[编号].奇经八脉.道果 then
                                  基础.结果系数=基础.结果系数 + self.参战单位[编号].人参娃娃.层数 * 0.27
                               else
                                  基础.结果系数=基础.结果系数 + self.参战单位[编号].人参娃娃.层数 * 0.3
                               end
                             end
                             if self.参战单位[编号].奇经八脉.归真 and self.参战单位[编号].人参娃娃.层数>=3 then
                                基础.结果系数=基础.结果系数+0.25
                             end
                        end
                        if self.参战单位[编号].奇经八脉.木摧 then
                             基础.结果系数=基础.结果系数+0.05
                        end
                        if self.参战单位[编号].奇经八脉.刺果 and self.参战单位[目标].类型~="角色" then
                             基础.结果系数=基础.结果系数+0.21
                        end
            end,
        },---敲金击玉
  金击式={
            类型 = "物伤",
            门派 = "五庄观",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return  self:魔法消耗(编号,30,数量,"金击式")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量 = 3 end
                    return 数量
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0025 * 等级^2/等级 - 数据.总数 * 0.025
                        if self.参战单位[目标].类型 == "角色" then
                            基础.固定结果 = 1
                        end
            end,
        },---金击式
  剑意莲心={
            类型 = "物伤",
            门派 = "普陀山",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return  self:魔法消耗(编号,30,数量,"剑意莲心")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>6 then 数量 = 6 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        local 加成 = 0
                        for n,v in pairs(self.参战单位[编号].五行珠) do
                            if v >0 then
                                加成 = 加成 + 1

                            end
                        end
                        self.参战单位[编号].五行加成 = 加成
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                            基础.初始系数 = 1 + 0.0017 * 等级^2/等级 + self.参战单位[编号].五行加成*0.1
                            if self.参战单位[编号].奇经八脉.湛然 and self.参战单位[编号].五行加成>=5 then
                               基础.结果系数 = 基础.结果系数 + 0.06
                            end
                            if self.参战单位[编号].奇经八脉.莲华 then
                                基础.初始伤害 = 基础.初始伤害 + 150
                            end

            end,
            死亡处理 = function(self,编号,目标)
                        if self.参战单位[编号].奇经八脉.化用 and 取随机数()<=20 then
                            local 五行 = {"金","木","水","火","土"}
                            local 珠子 = 五行[取随机数(1,5)]
                            self.参战单位[编号].五行珠[珠子] = 1
                            if self.参战单位[编号].奇经八脉.顿悟 then
                                for n,v in pairs(self.参战单位[编号].五行珠) do
                                    if v >0 then
                                        self:增加愤怒(编号,1)
                                    end
                                end
                            end
                            if self.参战单位[编号].奇经八脉.无尽 then
                                self.参战单位[编号].伤害 = self.参战单位[编号].伤害 + 6
                             end
                        end
                        return 0
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        self.参战单位[编号].五行加成 = nil
                        self.参战单位[编号].五行珠 = {金=0,木=0,水=0,火=0,土=0}
                        if self.参战单位[编号].奇经八脉.莲音 and 取随机数()<=50 then
                            self.参战单位[编号].奇经八脉莲音 = 4
                        end
            end,
        },---剑意莲心
  裂石={
            类型 = "物伤",
            门派 = "凌波城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return  self:魔法消耗(编号,50,数量,"裂石")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        self:凌波添加战意(self.参战单位[编号],1)
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.002 * 等级^2/等级
                        基础.暴击增加 = 基础.暴击增加 + 20
                        if self.参战单位[编号].奇经特效.吞山 then
                          基础.暴击系数 = 基础.暴击系数 + 0.05
                        end
                        if self.参战单位[编号].奇经八脉.砥石 and 取随机数()<=50 then
                            基础.防御系数 = 基础.防御系数 - 0.1
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.拍岸 and 取随机数()<=40 then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
            end,
        },---裂石
  浪涌={
            类型 = "物伤",
            门派 = "凌波城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/40)+2
                    if 数量>=3 then 数量=3 end
                    if self.参战单位[编号].门派=="凌波城"
                       and self.参战单位[编号].神话词条.劈山救母
                       and 取随机数()<=self.参战单位[编号].神话词条.劈山救母*16 then
                            数量 = 数量 + self.参战单位[编号].神话词条.劈山救母
                      end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return  self:魔法消耗(编号,20,数量,"浪涌")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if not self.参战单位[编号].奇经八脉.战诀 then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0025 * 等级^2/等级 - 数据.总数 * 0.025
                        基础.暴击增加 = 基础.暴击增加 + 5
                        if self.参战单位[编号].奇经八脉.冰暴  and 取随机数()<=50  then
                            基础.暴击系数 = 基础.暴击系数 + 0.1
                        end
                        if self.参战单位[编号].奇经特效.饮海 then
                            基础.防御系数 = 基础.防御系数 - 0.05
                        end
                        if self.参战单位[编号].奇经八脉.战诀 then
                            基础.结果系数 = 基础.结果系数 + 0.1
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.拍岸 and 取随机数()<=40 then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
            end,
        },---浪涌
  惊涛怒={
            类型 = "物伤",
            门派 = "凌波城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                     return 3
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    if self.参战单位[编号].战意+self.参战单位[编号].超级战意<1 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的战意为#R/"..self.参战单位[编号].战意.."#Y/点，无法使用断岳势")
                        return false
                    end
                    return self:魔法消耗(编号,20,数量,"惊涛怒")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                       self:凌波消耗战意(self.参战单位[编号],1)
                       前置.先手动画 = 1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0027 * 等级^2/等级 - 数据.总数 * 0.025
                        基础.暴击增加 = 基础.暴击增加 + 5
                        if self.参战单位[编号].奇经八脉.冰暴  and 取随机数()<=50  then
                            基础.暴击系数 = 基础.暴击系数 + 0.1
                        end
                        if self.参战单位[编号].奇经特效.饮海 then
                            基础.防御系数 = 基础.防御系数 - 0.05
                        end
                        if self.参战单位[编号].法术状态.怒眼 then
                             if self.参战单位[编号].奇经八脉.怒眼 then
                                基础.结果系数=基础.结果系数 + 0.4
                             else
                                 基础.结果系数=基础.结果系数 + 0.1
                             end
                        end
                        if self.参战单位[编号].奇经八脉.再战 and self.参战单位[编号].奇经八脉再战 then
                            基础.结果系数=基础.结果系数 + 0.15*self.参战单位[编号].奇经八脉再战
                        end
            end,
            死亡处理 = function(self,编号,目标)
                        if self.参战单位[编号].奇经八脉.再战 then
                            if not self.参战单位[编号].奇经八脉再战 then
                              self.参战单位[编号].奇经八脉再战 = 0
                            end
                            self.参战单位[编号].奇经八脉再战 = self.参战单位[编号].奇经八脉再战 + 1
                        end
                        return 0
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.魂聚 then
                            self:增加愤怒(编号,10)
                        end
                        if self.参战单位[编号].奇经八脉.天泽 and self.参战单位[编号].战意<=0 and 取随机数()<=18 then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
            end,
        },---惊涛怒
  断岳势={---
            类型 = "物伤",
            门派 = "凌波城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    if self.参战单位[编号].战意+self.参战单位[编号].超级战意<1 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的战意为#R/"..self.参战单位[编号].战意.."#Y/点，无法使用断岳势")
                        return false
                    end
                    return self:魔法消耗(编号,50,数量,"断岳势")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        self:凌波消耗战意(self.参战单位[编号],1)
                        前置.目标数=2
                        前置.重复攻击=true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0022 * 等级^2/等级  - 数据.次数 * 0.02
                        基础.暴击增加 = 基础.暴击增加 + 10
                        if self.参战单位[编号].奇经特效.吞山 then
                          基础.暴击系数 = 基础.暴击系数 + 0.05
                        end
                        if self.参战单位[编号].奇经八脉.砥石 and 取随机数()<=50 then
                            基础.防御系数 = 基础.防御系数 - 0.1
                        end
                        if self.参战单位[编号].法术状态.怒眼 then
                             if self.参战单位[编号].奇经八脉.怒眼 then
                                基础.结果系数=基础.结果系数 + 0.4
                             else
                                 基础.结果系数=基础.结果系数 + 0.1
                             end
                        end
                        if self.参战单位[编号].奇经八脉.再战 and self.参战单位[编号].奇经八脉再战 then
                            基础.结果系数=基础.结果系数 + 0.15*self.参战单位[编号].奇经八脉再战
                        end
            end,
            死亡处理 = function(self,编号,目标)
                        if self.参战单位[编号].奇经八脉.再战 then
                            if not self.参战单位[编号].奇经八脉再战 then
                              self.参战单位[编号].奇经八脉再战 = 0
                            end
                            self.参战单位[编号].奇经八脉再战 = self.参战单位[编号].奇经八脉再战 + 1
                        end
                        return 0
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.魂聚 then
                            self:增加愤怒(编号,10)
                        end
                        if self.参战单位[编号].奇经八脉.天泽 and self.参战单位[编号].战意<=0 and 取随机数()<=18 then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
            end,
        },---断岳势
  天崩地裂={
            类型 = "物伤",
            门派 = "凌波城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    if self.参战单位[编号].战意+self.参战单位[编号].超级战意<3 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的战意为#R/"..self.参战单位[编号].战意.."#Y/点，无法使用断岳势")
                        return false
                    end
                    return self:魔法消耗(编号,50,数量,"天崩地裂")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        self:凌波消耗战意(self.参战单位[编号],3)
                        前置.目标数=3
                        前置.重复攻击=true
                        if self.参战单位[编号].天神怒斩 and self.参战单位[编号].天神怒斩 > 0 then
                             self.参战单位[编号].天神怒斩 = self.参战单位[编号].天神怒斩 -1
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0025 * 等级^2/等级 - 数据.次数 * 0.025
                        基础.暴击增加 = 基础.暴击增加 + 10
                        if self.参战单位[编号].奇经特效.吞山 then
                            基础.暴击系数 = 基础.暴击系数 + 0.05
                        end
                        if self.参战单位[编号].奇经八脉.无双   then
                            基础.暴击系数 = 基础.暴击系数 + 0.12
                        end
                        if self.参战单位[编号].奇经八脉.砥石 and 取随机数()<=50 then
                            基础.防御系数 = 基础.防御系数 - 0.1
                        end
                        if self.参战单位[编号].法术状态.怒眼 then
                             if self.参战单位[编号].奇经八脉.怒眼 then
                                基础.结果系数=基础.结果系数 + 0.4
                             else
                                 基础.结果系数=基础.结果系数 + 0.1
                             end
                        end
                        if self.参战单位[编号].奇经八脉.力战 then
                            基础.防御系数 = 基础.防御系数 - 0.12
                            基础.结果系数 = 基础.结果系数 + 0.12
                        end
                        if self.参战单位[编号].奇经八脉.混元 and  self.参战单位[编号].门派=="凌波城" then
                            self.参战单位[目标].奇经八脉凌波混元=1
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.魂聚 then
                            self:增加愤怒(编号,10)
                        end
                        if self.参战单位[编号].奇经八脉.天泽 and self.参战单位[编号].战意<=0 and 取随机数()<=18 then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
                        if self.参战单位[编号].奇经八脉.强袭  then
                          self.参战单位[编号].奇经八脉强袭 = 4
                        end
                        if self.参战单位[编号].奇经八脉.山破 and  取随机数() <= 取随机数(45,64)  then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
                        if self.参战单位[编号].奇经八脉.石摧 and 取随机数()<=32  then
                           self.参战单位[编号].超级战意 = self.参战单位[编号].超级战意 + 1
                           self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的超级战意为#R/"..self.参战单位[编号].超级战意.."#Y/点")
                        end
            end,
        },---天崩地裂
  翻江搅海={
            类型 = "物伤",
            门派 = "凌波城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/35)+2
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    if self.参战单位[编号].战意+self.参战单位[编号].超级战意<3 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的战意为#R/"..self.参战单位[编号].战意.."#Y/点，无法使用翻江搅海")
                        return false
                    end
                    return self:魔法消耗(编号,20,数量,"翻江搅海")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        self:凌波消耗战意(self.参战单位[编号],3)
                        前置.全屏动画 = 1
                        if self.参战单位[编号].天神怒斩 and self.参战单位[编号].天神怒斩 > 0 then
                            self.参战单位[编号].天神怒斩 = self.参战单位[编号].天神怒斩 -1
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0029 * 等级^2/等级  - 数据.总数 * 0.025
                        基础.暴击增加 = 基础.暴击增加 + 3
                        if self.参战单位[编号].奇经八脉.冰暴  and 取随机数()<=50  then
                            基础.暴击系数 = 基础.暴击系数 + 0.1
                        end
                        if self.参战单位[编号].奇经特效.饮海 then
                            基础.防御系数 = 基础.防御系数 - 0.05
                        end
                        if self.参战单位[编号].法术状态.怒眼 then
                             if self.参战单位[编号].奇经八脉.怒眼 then
                                基础.结果系数=基础.结果系数 + 0.4
                             else
                                 基础.结果系数=基础.结果系数 + 0.1
                             end
                        end
                        if self.参战单位[编号].奇经八脉.无双   then
                            基础.结果系数 = 基础.结果系数 + 0.12
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.魂聚 then
                            self:增加愤怒(编号,10)
                        end
                        if self.参战单位[编号].奇经八脉.天泽 and self.参战单位[编号].战意<=0 and 取随机数()<=18 then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
                        if self.参战单位[编号].奇经八脉.强袭  then
                          self.参战单位[编号].奇经八脉强袭 = 4
                        end
                        if self.参战单位[编号].奇经八脉.山破 and  取随机数() <= 取随机数(45,64)  then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
                        if self.参战单位[编号].奇经八脉.石摧 and 取随机数()<=32  then
                           self.参战单位[编号].超级战意 = self.参战单位[编号].超级战意 + 1
                           self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的超级战意为#R/"..self.参战单位[编号].超级战意.."#Y/点")
                        end
            end,
        },---翻江搅海
  天神怒斩={
            类型 = "物伤",
            门派 = "凌波城",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,

            冷却 = function(self,编号)
                    return {开始=5,使用=10}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                     return self:魔法消耗(编号,300,数量,"天神怒斩")
            end,

            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0031 * 等级^2/等级
                        if self.参战单位[编号].战意 == 1 then
                            基础.结果系数 = 基础.结果系数 + 0.5
                        else
                            基础.结果系数 = 基础.结果系数 + 0.25
                        end
                        if self.参战单位[编号].天神怒斩加成 then
                            基础.结果系数 = 基础.结果系数 + self.参战单位[编号].天神怒斩加成*0.25
                        end
                        if self.参战单位[编号].奇经八脉.混元 and  self.参战单位[编号].门派=="凌波城" then
                            self.参战单位[目标].奇经八脉凌波混元=1
                        end
                        local 状态=self:随机对方增益状态(目标)
                        if 状态 then
                            基础.取消状态=状态
                        else
                            self:随机取消经脉增益(目标)
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if not self.参战单位[编号].天神怒斩加成 then
                            self.参战单位[编号].天神怒斩加成 = 0
                        end
                        self.参战单位[编号].天神怒斩加成 =self.参战单位[编号].天神怒斩加成 +1
            end,
        },---天神怒斩
  死亡召唤={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                     return self:魔法消耗(编号,100,数量,"死亡召唤")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态) ---名称 目标 编号
                        状态.回合 = 5
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0013 * 等级^2/等级
                        if 取随机数()<=50 and not self.参战单位[目标].奇经八脉慈心 then
                            基础.添加状态={目标=目标}
                        end
            end,

        },---死亡召唤
  善恶有报={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                     return self:魔法消耗(编号,100,数量,"善恶有报")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0013 * 等级^2/等级
            end,
        },---善恶有报
  惊心一剑={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                     return self:魔法消耗(编号,100,数量,"惊心一剑")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0013 * 等级^2/等级
                        基础.扣除魔法=0.2
            end,
        },---惊心一剑
  壁垒击破={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                     return self:魔法消耗(编号,100,数量,"壁垒击破")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0013 * 等级^2/等级
                         if self.参战单位[目标].指令.类型=="防御" then
                                基础.结果系数=基础.结果系数 + 0.5
                         end
                         if self:取技能重复(self.参战单位[目标],"防御") then
                              基础.防御系数=基础.防御系数 - 0.4
                         elseif self:取技能重复(self.参战单位[目标],"高级防御") then
                              基础.防御系数=基础.防御系数 - 0.2
                         end
                         基础.防御系数=基础.防御系数 - 0.3
            end,
        },---壁垒击破
  超级壁垒击破={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                     return self:魔法消耗(编号,100,数量,"超级壁垒击破")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                         if self.参战单位[目标].指令.类型=="防御" then
                                基础.结果系数=基础.结果系数 + 1
                         end
                         if self:取技能重复(self.参战单位[目标],"防御") then
                              基础.防御系数=基础.防御系数 - 0.4
                         elseif self:取技能重复(self.参战单位[目标],"高级防御") then
                              基础.防御系数=基础.防御系数 - 0.2
                         end
                         基础.防御系数=基础.防御系数 - 0.4
            end,
        },---超级壁垒击破
  剑荡四方={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    if self.参战单位[编号].气血<self.参战单位[编号].最大气血 * 0.05 then
                        return false
                    end
                    return true
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量 = 3 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.结尾 = math.floor(self.参战单位[编号].气血*0.1)
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0017 * 等级^2/等级 - 数据.次数 * 0.02
            end,
        },---剑荡四方
  力劈华山={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,150,数量,"力劈华山")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.先手动画 = 1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0013 * 等级^2/等级
                        if self.参战单位[编号].伤害 - self.参战单位[目标].伤害 < 0 then
                           基础.结果系数=0.5
                        else
                           基础.结果系数=1.5
                        end
            end,
        },---力劈华山
  哼哼哈兮={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"哼哼哈兮")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标数=取随机数(1,5)
                        前置.重复攻击=true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0021 * 等级^2/等级 - 数据.总数 * 0.02
            end,
        },---哼哼哈兮
  水击三千={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"水击三千")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.初始系数 = 1.05 + 0.0013 * 等级^2/等级
                         基础.暴击系数 = 基础.暴击系数 + 1
            end,
        },---水击三千
  神来气旺={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>6 then 数量 = 6 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"神来气旺")
            end,

            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 取随机数(11,15)/10 + 0.002 * 等级^2/等级  - 数据.总数 * 0.02
            end,
        },---神来气旺
  夜舞倾城={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,100,数量,"夜舞倾城")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       基础.初始系数 = 1 + 0.002 * 等级^2/等级
                       基础.初始伤害 = 基础.初始伤害  + self.参战单位[编号].速度 + self.参战单位[编号].固定伤害
            end,
        },---夜舞倾城
  牛刀小试={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 2
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,5,数量,"牛刀小试")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 0.96 + 0.0015 * 等级^2/等级
            end,
        },---牛刀小试
-------------------群体物伤
  三荒尽灭={
            类型 = "群体物伤",
            门派 = "九黎城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,150,1,"三荒尽灭")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 境界 = self:取指定法宝(编号,"铸兵锤")
                    if 境界 and math.floor(境界*2.5)>=取随机数() and self:取指定法宝(编号,"铸兵锤",1)  then
                        return 4
                    end
                    return 3
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.结果系数 = 0.95 + 0.001 * 等级^2/等级
                        基础.不可反击 = 1
                        if self.参战单位[编号].奇经八脉.俾睨 then
                            基础.结果系数 = 基础.结果系数 + 0.1
                        end

            end,
            群体结尾 = function(self,编号,次数,等级,前置,返回)-----群体物攻循环末尾
                        if not self.参战单位[编号].多人浮空 then
                            self.参战单位[编号].多人浮空 = {}
                        end
                        local 几率 = 30
                        if self.参战单位[编号].法术状态.怒哮 then
                             几率=几率+30
                             返回.取消状态="怒哮"
                        end
                        if self.参战单位[编号].奇经八脉.识破 then
                            几率 = 几率 + 5
                        end
                        if 取随机数()<=几率 then
                            返回.添加状态={}
                            for i=1,前置.目标数 do
                                if self.参战单位[前置.目标组[i]] and self.参战单位[前置.目标组[i]].气血>0
                                    and not self.参战单位[前置.目标组[i]].法术状态.浮空 then
                                    table.insert(返回.添加状态,{名称="浮空",目标=前置.目标组[i]})
                                    table.insert(self.参战单位[编号].多人浮空,前置.目标组[i])
                                end
                            end
                         end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].多人浮空 then
                            self.战斗流程[前置.流程].多人状态={}
                            for k,v in pairs(self.参战单位[编号].多人浮空) do
                                if self.参战单位[v] and self.参战单位[v].气血>0  then
                                    table.insert(self.战斗流程[前置.流程].多人状态,{挨打方=v,特效="浮空",状态="浮空"})
                                end
                            end
                            self.参战单位[编号].多人浮空 = nil
                        end
            end,
        },---三荒尽灭
  力劈苍穹={
            类型 = "群体物伤",
            门派 = "九黎城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,1,"力劈苍穹")
            end,
            次数 = function(self,编号,等级)
                  return 取随机数(2,3)
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                       前置.目标组 = {}
                       if self.参战单位[编号].取消浮空 then
                            for k,v in ipairs(self.参战单位[编号].取消浮空) do
                                if self:取目标状态(编号,v,1) then
                                   table.insert(前置.目标组, v)
                                end
                            end
                        end
                        前置.目标数 = #前置.目标组
                        前置.分身攻击 = 1
                        if 前置.目标数<=0 then
                            前置.结束流程 = 1
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.结果系数 = 1.1 + 0.001 * 等级^2/等级 - 数据.总数 * 0.05
                        基础.不可反击 = 1
            end,
            最终结束 = function(self,编号,流程,返回,类型) -------循环结束后
                        if self.参战单位[编号].取消浮空 then
                            local 添加流程 ={流程 = 50,攻击方=编号,挨打方={}}
                            for k,v in pairs(self.参战单位[编号].取消浮空) do
                                if self.参战单位[v] then
                                     self:取消状态("浮空",v)
                                     table.insert(添加流程.挨打方,{挨打方=v,取消状态="浮空"})
                                end
                            end
                            table.insert(self.战斗流程,添加流程)
                            self.参战单位[编号].取消浮空 = nil
                        end
            end,
        },---力劈苍穹
  魔神之刃={
            类型 = "群体物伤",
            门派 = "九黎城",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,1,"魔神之刃")
            end,
            冷却 = function(self,编号)
                    return {开始=2,使用=8}
            end,
            次数 = function(self,编号,等级)
                  return 取随机数(2,3)
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                       前置.目标组 = {}
                       if self.参战单位[编号].取消浮空 then
                            for k,v in ipairs(self.参战单位[编号].取消浮空) do
                                if self:取目标状态(编号,v,1) then
                                   table.insert(前置.目标组, v)
                                end
                            end
                        end
                        前置.目标数 = #前置.目标组
                        前置.分身攻击 = 1
                        if 前置.目标数<=0 then
                            前置.结束流程 = 1
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.结果系数 = 1.2 + 0.001 * 等级^2/等级 - 数据.总数 * 0.05
                        基础.暴伤系数 = 基础.暴伤系数 + 1
                        基础.不可反击 = 1
            end,
            最终结束 = function(self,编号,流程,返回,类型) -------循环结束后
                         if self.参战单位[编号].取消浮空 then
                            local 添加流程 ={流程 = 50,攻击方=编号,挨打方={}}
                            for k,v in pairs(self.参战单位[编号].取消浮空) do
                                if self.参战单位[v] then
                                     self:取消状态("浮空",v)
                                     table.insert(添加流程.挨打方,{挨打方=v,取消状态="浮空"})
                                end
                            end
                            table.insert(self.战斗流程,添加流程)
                            self.参战单位[编号].取消浮空 = nil
                        end
            end,
        },---魔神之刃
-------------------法伤技能
  落雷符={
            类型 = "法伤",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/30)+1
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"落雷符")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].鬼魂 then
                              基础.初始系数=基础.初始系数+0.2
                        end
                        if self.参战单位[编号].符石技能.石破天惊 then
                            基础.初始伤害 =基础.初始伤害 + self.参战单位[编号].符石技能.石破天惊
                        end
                        if self.参战单位[编号].奇经八脉.雷动 and 数据.次数==1 then
                             基础.暴击系数 = 基础.暴击系数 + 0.15
                        end

            end,
            死亡处理 = function(self,编号,目标)
                      return 1
            end,
        },---落雷符--完成
  五雷咒={
            类型 = "法伤",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"五雷咒")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = 1
                    if self.参战单位[编号].奇经特效.奔雷 then
                       数量= 数量 + 1
                    end
                    if self.参战单位[编号].奇经八脉怒霆 and self.参战单位[编号].奇经八脉怒霆>=5 then
                        数量= 数量 + 3
                    end
                    if self.参战单位[编号].奇经八脉.炼魂 and self:取是否单独门派(编号) then
                         local 判断 =true
                         for i=1,#self.参战单位 do
                             if self.参战单位[i].类型=="角色" and self.参战单位[i].队伍~=self.参战单位[编号].队伍 and not self.参战单位[i].炼魂虚弱 then
                                判断 = false
                             end
                         end
                         if 判断 then
                            数量=数量 + 2
                         end
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[目标].鬼魂 then
                              基础.初始系数=基础.初始系数+0.3
                        end
                        if self.参战单位[编号].法术状态.钟馗论道 then
                           基础.结果系数 = 基础.结果系数 + 0.7
                        end

                        if self.参战单位[目标].类型=="bb" and self.参战单位[编号].奇经特效.悲恸  then
                            if self.参战单位[编号].奇经八脉.余悸 then
                                基础.结果系数 = 基础.结果系数 + 0.4
                            else
                                基础.结果系数 = 基础.结果系数 + 0.3
                            end
                        end
                        if self.参战单位[编号].奇经八脉.策电 then
                           基础.结果系数 = 基础.结果系数 + 0.05
                           if 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("霹雳咒")>=125 then
                              基础.结果系数 = 基础.结果系数 + 0.05
                           end
                        end
                        if self.参战单位[编号].奇经八脉.驱雷 then
                            基础.暴击增加 = 基础.暴击增加 + 3
                        end
                        if self.参战单位[编号].奇经八脉.鬼恸 then
                           if 数据.次数 == 2 then
                                基础.减免系数=0.2
                            else
                                基础.不可减免 = 1
                            end
                        end
            end,
            死亡处理 = function(self,编号,目标)
                      return 1
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.怒霆 then
                            if not self.参战单位[编号].奇经八脉怒霆 then
                                self.参战单位[编号].奇经八脉怒霆 = 0
                            end
                            self.参战单位[编号].奇经八脉怒霆 = self.参战单位[编号].奇经八脉怒霆 + 1
                            if self.参战单位[编号].奇经八脉怒霆 >= 6 then
                                self.参战单位[编号].奇经八脉怒霆 = nil
                            end
                        end
            end,

        },---五雷咒--完成
  五雷正法={
            类型 = "法伤",
            门派 = "方寸山",
            奇经特效 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = 1
                    if self.参战单位[编号].雷法.雷法震煞>0 then
                        数量 = 数量+ self.参战单位[编号].雷法.雷法震煞
                        self.参战单位[编号].雷法.雷法震煞 = 0
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,150,1,"五雷正法")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        if self.参战单位[编号].雷法.雷法坤伏>0  then
                             local 随机目标 = 前置.目标组[取随机数(1,#前置.目标组)]
                             self.参战单位[随机目标].雷法削弱 = {回合=3,加成=self.参战单位[编号].雷法.雷法坤伏}
                             self.参战单位[编号].雷法.雷法坤伏 = 0
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].鬼魂~=nil then
                          基础.初始系数=基础.初始系数+0.3
                        end
                        if self.参战单位[编号].奇经八脉.天箓 then
                             local 加持 = 0
                             for n, v in pairs(self.参战单位[编号].雷法) do
                                 if self.参战单位[编号].雷法[n]~=0 then
                                    加持=加持 + 1
                                 end
                             end
                             if 加持>=3 then
                                基础.结果系数=基础.结果系数+0.16
                             end
                        end
                        if self.参战单位[编号].雷法.雷法崩裂>0 and 数据.次数 == 1 then
                            基础.结果系数=基础.结果系数 + 0.32*self.参战单位[编号].雷法.雷法崩裂
                            self.参战单位[编号].雷法.雷法崩裂 = 0
                        end
                        if self.参战单位[编号].雷法.雷法翻天>0 and self.参战单位[目标].类型=="bb" then
                            基础.结果系数=基础.结果系数 + 0.35*self.参战单位[编号].雷法.雷法翻天
                        end
                        if self.参战单位[编号].雷法.雷法倒海>0 and  self.参战单位[目标].类型=="角色" then
                            基础.结果系数=基础.结果系数 + 0.08*self.参战单位[编号].雷法.雷法倒海
                        end
            end,
            死亡处理 = function(self,编号,目标)
                      return 1
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].雷法.雷法翻天>0 then
                          self.参战单位[编号].雷法.雷法翻天 = 0
                        end
                        if self.参战单位[编号].雷法.雷法倒海>0 then
                           self.参战单位[编号].雷法.雷法倒海=0
                        end
            end,
        },---五雷正法--完成
  雷法翻天={
            类型 = "法伤",
            门派 = "方寸山",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = 1
                    if self.参战单位[编号].雷法.雷法震煞>0 then
                        数量 = 数量 + self.参战单位[编号].雷法.雷法震煞
                        self.参战单位[编号].雷法.雷法震煞 = 0
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"雷法翻天")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        if  self.参战单位[编号].法术状态.五雷挪移 and self.参战单位[编号].雷法.雷法坤伏>0  then
                              local 目标 = 前置.目标组[取随机数(1,#前置.目标组)]
                              self.参战单位[目标].雷法削弱 = {回合=3,加成=self.参战单位[编号].雷法.雷法坤伏}
                        end
                        if self.参战单位[编号].符咒>0 then
                           self.参战单位[编号].雷法.雷法翻天=self.参战单位[编号].符咒
                           if self.参战单位[编号].奇经八脉.奇门 and  取随机数()<=50 then
                              self.参战单位[编号].雷法.雷法翻天= self.参战单位[编号].雷法.雷法翻天+1
                           end
                           if self.参战单位[编号].雷法.雷法翻天>=5 then
                              self.参战单位[编号].雷法.雷法翻天=5
                           end
                           if self.参战单位[编号].奇经八脉.符威 then
                               self:增加愤怒(编号,self.参战单位[编号].符咒)
                           end
                           self.参战单位[编号].符咒 = 0
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].鬼魂~=nil then
                            基础.初始系数=基础.初始系数+0.3
                        end
                        if self.参战单位[编号].法术状态.五雷挪移 then
                             if self.参战单位[编号].雷法.雷法崩裂>0 and 数据.次数 == 1 then
                                基础.结果系数=基础.结果系数 + 0.32*self.参战单位[编号].雷法.雷法崩裂
                             end
                             if self.参战单位[编号].雷法.雷法翻天>0 and  self.参战单位[目标].类型=="bb" then
                                基础.结果系数=基础.结果系数 + 0.35*self.参战单位[编号].雷法.雷法翻天
                             end
                             if self.参战单位[编号].雷法.雷法倒海>0 and  self.参战单位[目标].类型=="角色" then
                                基础.结果系数=基础.结果系数 + 0.08*self.参战单位[编号].雷法.雷法倒海
                             end
                        end
            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.神机 then
                          self.参战单位[编号].符咒 = self.参战单位[编号].符咒+1
                      end
                      return 1
            end,
        },---雷法翻天
  雷法倒海={
            类型 = "法伤",
            门派 = "方寸山",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = 1
                    if self.参战单位[编号].雷法.雷法震煞>0 then
                        数量 = 数量 + self.参战单位[编号].雷法.雷法震煞
                        self.参战单位[编号].雷法.雷法震煞 = 0
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"雷法倒海")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        if  self.参战单位[编号].法术状态.五雷挪移 and self.参战单位[编号].雷法.雷法坤伏>0  then
                              local 目标 = 前置.目标组[取随机数(1,#前置.目标组)]
                              self.参战单位[目标].雷法削弱 = {回合=3,加成=self.参战单位[编号].雷法.雷法坤伏}
                        end
                        if self.参战单位[编号].符咒>0 then
                           self.参战单位[编号].雷法.雷法倒海=self.参战单位[编号].符咒
                           if self.参战单位[编号].奇经八脉.奇门 and  取随机数()<=50 then
                              self.参战单位[编号].雷法.雷法倒海= self.参战单位[编号].雷法.雷法倒海+1
                           end
                           if self.参战单位[编号].雷法.雷法倒海>=5 then
                              self.参战单位[编号].雷法.雷法倒海=5
                           end
                           if self.参战单位[编号].奇经八脉.符威 then
                              self:增加愤怒(编号,self.参战单位[编号].符咒)
                           end
                           self.参战单位[编号].符咒 = 0
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].鬼魂~=nil then
                            基础.初始系数=基础.初始系数+0.3
                        end
                        if self.参战单位[编号].法术状态.五雷挪移 then
                             if self.参战单位[编号].雷法.雷法崩裂>0 and 数据.次数 == 1 then
                                基础.结果系数=基础.结果系数 + 0.32*self.参战单位[编号].雷法.雷法崩裂
                             end
                             if self.参战单位[编号].雷法.雷法翻天>0 and self.参战单位[目标].类型=="bb" then
                                基础.结果系数=基础.结果系数 + 0.35*self.参战单位[编号].雷法.雷法翻天
                             end
                             if self.参战单位[编号].雷法.雷法倒海>0 and self.参战单位[目标].类型=="角色" then
                                基础.结果系数=基础.结果系数 + 0.08*self.参战单位[编号].雷法.雷法倒海
                             end
                        end

            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.神机 then
                          self.参战单位[编号].符咒 = self.参战单位[编号].符咒+1
                      end
                      return 1
            end,
        },---雷法倒海
  雷法崩裂={
            类型 = "法伤",
            门派 = "方寸山",
            奇经特效 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = 1
                    if self.参战单位[编号].雷法.雷法震煞>0 then
                        数量 = 数量 + self.参战单位[编号].雷法.雷法震煞
                        self.参战单位[编号].雷法.雷法震煞 = 0
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"雷法崩裂")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        if  self.参战单位[编号].法术状态.五雷挪移 and self.参战单位[编号].雷法.雷法坤伏>0  then
                              local 目标 = 前置.目标组[取随机数(1,#前置.目标组)]
                              self.参战单位[目标].雷法削弱 = {回合=3,加成=self.参战单位[编号].雷法.雷法坤伏}
                        end
                        if self.参战单位[编号].符咒>0 then
                           self.参战单位[编号].雷法.雷法崩裂=self.参战单位[编号].符咒
                           if self.参战单位[编号].奇经八脉.奇门 and  取随机数()<=50 then
                              self.参战单位[编号].雷法.雷法崩裂= self.参战单位[编号].雷法.雷法崩裂+1
                           end
                           if self.参战单位[编号].雷法.雷法崩裂>=5 then
                              self.参战单位[编号].雷法.雷法崩裂=5
                           end
                           if self.参战单位[编号].奇经八脉.符威 then
                              self:增加愤怒(编号,self.参战单位[编号].符咒)
                           end
                           self.参战单位[编号].符咒 = 0
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].鬼魂~=nil then
                            基础.初始系数=基础.初始系数+0.3
                        end
                        if self.参战单位[编号].法术状态.五雷挪移 then
                             if self.参战单位[编号].雷法.雷法崩裂>0 and  数据.次数 == 1 then
                                基础.结果系数=基础.结果系数 + 0.32*self.参战单位[编号].雷法.雷法崩裂
                             end
                             if self.参战单位[编号].雷法.雷法翻天>0 and  self.参战单位[目标].类型=="bb" then
                                基础.结果系数=基础.结果系数 + 0.35*self.参战单位[编号].雷法.雷法翻天
                             end
                             if self.参战单位[编号].雷法.雷法倒海>0 and  self.参战单位[目标].类型=="角色" then
                                基础.结果系数=基础.结果系数 + 0.08*self.参战单位[编号].雷法.雷法倒海
                             end
                        end

            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.神机 then
                          self.参战单位[编号].符咒 = self.参战单位[编号].符咒+1
                      end
                      return 1
            end,
        },---雷法崩裂
  雷法震煞={
            类型 = "法伤",
            门派 = "方寸山",
            奇经特效 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = 1
                    if self.参战单位[编号].雷法.雷法震煞>0 then
                        数量 = 数量 + self.参战单位[编号].雷法.雷法震煞
                        self.参战单位[编号].雷法.雷法震煞 = 0
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"雷法震煞")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        if  self.参战单位[编号].法术状态.五雷挪移 and self.参战单位[编号].雷法.雷法坤伏>0  then
                              local 目标 = 前置.目标组[取随机数(1,#前置.目标组)]
                              self.参战单位[目标].雷法削弱 = {回合=3,加成=self.参战单位[编号].雷法.雷法坤伏}
                        end
                        if self.参战单位[编号].符咒>0 then
                           self.参战单位[编号].雷法.雷法震煞=self.参战单位[编号].符咒
                           if self.参战单位[编号].奇经八脉.奇门 and  取随机数()<=50 then
                              self.参战单位[编号].雷法.雷法震煞= self.参战单位[编号].雷法.雷法震煞+1
                           end
                           if self.参战单位[编号].雷法.雷法震煞>=5 then
                              self.参战单位[编号].雷法.雷法震煞=5
                           end
                           if self.参战单位[编号].奇经八脉.符威 then
                              self:增加愤怒(编号,self.参战单位[编号].符咒)
                           end
                           self.参战单位[编号].符咒 = 0
                        end
                        return 前置
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].鬼魂~=nil then
                            基础.初始系数=基础.初始系数+0.3
                        end
                        if self.参战单位[编号].法术状态.五雷挪移 then
                             if self.参战单位[编号].雷法.雷法崩裂>0 and  数据.次数 == 1 then
                                基础.结果系数=基础.结果系数 + 0.32*self.参战单位[编号].雷法.雷法崩裂
                             end
                             if self.参战单位[编号].雷法.雷法翻天>0 and  self.参战单位[目标].类型=="bb" then
                                基础.结果系数=基础.结果系数 + 0.35*self.参战单位[编号].雷法.雷法翻天
                             end
                             if self.参战单位[编号].雷法.雷法倒海>0 and  self.参战单位[目标].类型=="角色" then
                                基础.结果系数=基础.结果系数 + 0.08*self.参战单位[编号].雷法.雷法倒海
                             end
                        end
            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.神机 then
                          self.参战单位[编号].符咒 = self.参战单位[编号].符咒+1
                      end
                      return 1
            end,
        },---雷法震煞
  雷法坤伏={
            类型 = "法伤",
            门派 = "方寸山",
            奇经特效 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = 1
                    if self.参战单位[编号].雷法.雷法震煞>0 then
                        数量 = 数量 + self.参战单位[编号].雷法.雷法震煞
                        self.参战单位[编号].雷法.雷法震煞 = 0
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"雷法坤伏")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        if  self.参战单位[编号].法术状态.五雷挪移 and self.参战单位[编号].雷法.雷法坤伏>0  then
                              local 目标 = 前置.目标组[取随机数(1,#前置.目标组)]
                              self.参战单位[目标].雷法削弱 = {回合=3,加成=self.参战单位[编号].雷法.雷法坤伏}
                        end
                        if self.参战单位[编号].符咒>0 then
                           self.参战单位[编号].雷法.雷法坤伏=self.参战单位[编号].符咒
                           if self.参战单位[编号].奇经八脉.奇门 and  取随机数()<=50 then
                              self.参战单位[编号].雷法.雷法坤伏= self.参战单位[编号].雷法.雷法坤伏+1
                           end
                           if self.参战单位[编号].雷法.雷法坤伏>=5 then
                              self.参战单位[编号].雷法.雷法坤伏=5
                           end
                           if self.参战单位[编号].奇经八脉.符威 then
                              self:增加愤怒(编号,self.参战单位[编号].符咒)
                           end
                           self.参战单位[编号].符咒 = 0
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].鬼魂~=nil then
                            基础.初始系数=基础.初始系数+0.3
                        end
                        if self.参战单位[编号].法术状态.五雷挪移 then
                             if self.参战单位[编号].雷法.雷法崩裂>0 and  数据.次数 == 1 then
                                基础.结果系数=基础.结果系数 + 0.32*self.参战单位[编号].雷法.雷法崩裂
                             end
                             if self.参战单位[编号].雷法.雷法翻天>0 and  self.参战单位[目标].类型=="bb" then
                                基础.结果系数=基础.结果系数 + 0.35*self.参战单位[编号].雷法.雷法翻天
                             end
                             if self.参战单位[编号].雷法.雷法倒海>0 and  self.参战单位[目标].类型=="角色" then
                                基础.结果系数=基础.结果系数 + 0.08*self.参战单位[编号].雷法.雷法倒海
                             end
                        end
            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.神机 then
                          self.参战单位[编号].符咒 = self.参战单位[编号].符咒+1
                      end
                      return 1
            end,
        },---雷法坤伏
  黄泉之息={
            类型 = "法伤",
            门派 = "阴曹地府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"黄泉之息")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态) ---名称 目标 编号
                      状态.速度 = self.参战单位[目标].速度 * 0.1
                      状态.回合 =math.floor(等级/20)+2
                      if self.参战单位[编号].奇经八脉.黄泉 then
                         状态.速度=状态.速度*1.5
                      end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害  + math.floor(self.参战单位[编号].武器伤害*0.4)
                        基础.添加状态={名称="黄泉之息"}
                        if self.参战单位[编号].奇经八脉.泉暴 and self:取是否单独门派(编号) and not self.参战单位[编号].奇经八脉泉暴 then
                            基础.结果系数 = 基础.结果系数 + 3
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.泉暴 and self:取是否单独门派(编号) then
                            self.参战单位[编号].奇经八脉泉暴 = true
                        end
            end,
        },---黄泉之息
  飞砂走石={
            类型 = "法伤",
            门派 = "魔王寨",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗

                  return self:魔法消耗(编号,30,数量,"飞砂走石")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/40)+2
                      if self.参战单位[编号].门派=="魔王寨" and self.参战单位[编号].神话词条.魔王在世
                        and 取随机数()<=self.参战单位[编号].神话词条.魔王在世*8 then
                          数量 = 数量 + self.参战单位[编号].神话词条.魔王在世
                      end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.全屏动画=205
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.001 * 等级^2/等级
                        基础.暴击增加 = 基础.暴击增加+5
                        if self.参战单位[编号].奇经八脉.震怒 then
                          基础.结果伤害 = 基础.结果伤害 +40
                        end

                        if self.参战单位[编号].奇经八脉折服 and 取随机数()<=25 then
                            local 状态=self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态=状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
                        if self.参战单位[编号].奇经八脉.赤暖 and 取随机数()<=20 then
                            基础.法术吸血 = 0.1
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].门派=="魔王寨"  and self.参战单位[编号].神话词条.魔王在世
                          and 取随机数()<=self.参战单位[编号].神话词条.魔王在世*15 then
                            返回.次数 = 1
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                       if self.参战单位[编号].奇经特效.魔冥 then
                            if self.参战单位[编号].法术状态.魔冥 then
                                self.参战单位[编号].法术状态.魔冥.等级 = self.参战单位[编号].法术状态.魔冥.等级+1
                                if self.参战单位[编号].法术状态.魔冥.等级>=4 then
                                   self.参战单位[编号].法术状态.魔冥.等级 = 4
                                end
                            else
                                 返回.添加状态={名称="魔冥",等级=1}
                            end
                        end
                        if self.参战单位[编号].奇经八脉.燃魂 and 取随机数()<=50 and not self.参战单位[编号].奇经八脉燃魂 then
                           self.参战单位[编号].奇经八脉燃魂=3
                        end
                        if self.参战单位[编号].奇经八脉.魔焱 and 取随机数()<=50 and not self.参战单位[编号].奇经八脉烈焰 then
                           self.参战单位[编号].奇经八脉烈焰=5
                        end
                        if self.参战单位[编号].奇经八脉.升温 then
                           self.参战单位[编号].奇经八脉升温 =self.参战单位[编号].奇经八脉升温+1
                        end
                        if self.参战单位[编号].奇经八脉.咒言 then
                           if self.参战单位[编号].秘传三昧真火 then
                              self.参战单位[编号].秘传三昧真火 = self.参战单位[编号].秘传三昧真火 - 1
                           end
                           if self.参战单位[编号].秘传飞砂走石 then
                              self.参战单位[编号].秘传飞砂走石 = self.参战单位[编号].秘传飞砂走石 - 1
                           end
                        end
            end,
        },---飞砂走石
  秘传飞砂走石={
            类型 = "法伤",
            门派 = "魔王寨",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,60,数量,"秘传飞砂走石")
            end,
            冷却 = function(self,编号)
                    local 冷却 = {开始=4,使用=8}
                    if self.参战单位[编号].奇经八脉.固基 then
                        冷却.使用 = 7
                        冷却.开始 = 3
                    end
                    if self.参战单位[编号].奇经八脉.惊悟 and self.回合数>0 then
                        冷却.使用 = 冷却.使用 - math.floor(self.回合数/20)
                    end
                    return 冷却
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.全屏动画=205
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[编号].奇经八脉.摧山 then
                             基础.结果系数 = 基础.结果系数+0.12
                        end
                        if self.参战单位[编号].奇经八脉不忿 then
                             基础.结果系数 = 基础.结果系数+0.12
                        end

                        if self.参战单位[编号].奇经八脉.不灭 then
                             基础.结果系数 = 基础.结果系数+0.1
                        end
                        if self.参战单位[编号].奇经八脉.融骨  and 取随机数()<=25 then
                            local 状态=self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态=状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
                         if self.参战单位[编号].奇经八脉.焦土 then
                            if self:取装备五行(编号,3)=="土" then
                               基础.暴击系数 = 基础.暴击系数+0.5
                            end
                            if self:取装备五行(编号,4)=="土" then
                               基础.暴击系数 = 基础.暴击系数+0.5
                            end
                         end
                        if self.参战单位[目标].气血<self.参战单位[目标].最大气血 then
                            local 阵亡几率 = (1-self.参战单位[目标].气血/self.参战单位[目标].最大气血)*200
                            if self.参战单位[编号].奇经八脉.不灭 then
                                阵亡几率=阵亡几率+20
                            end
                            if 取随机数(1,1000)<=阵亡几率 then
                                基础.固定结果 = self.参战单位[目标].气血+1
                                基础.不可神佑 = 1
                            end
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        self.参战单位[编号].奇经八脉不忿 = nil
            end,
        },---秘传飞砂走石
  三昧真火={
            类型 = "法伤",
            门派 = "魔王寨",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,60,数量,"三昧真火")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        基础.暴击增加=基础.暴击增加 + 10
                        if self.参战单位[编号].法术状态.魔冥  then
                            基础.结果系数 = 基础.结果系数 + 0.03
                            if self.参战单位[编号].奇经八脉.咆哮 then
                                if self.参战单位[目标].类型 == "角色" then
                                    基础.结果系数 = 基础.结果系数 + 0.18
                                else
                                    基础.结果系数 = 基础.结果系数 + 0.04
                                end
                            end
                        end
                        if self.参战单位[编号].奇经八脉.真炎 then
                             基础.结果系数 = 基础.结果系数 + 0.15
                        end
                        if self.参战单位[编号].奇经八脉燃魂 then
                            基础.结果系数 = 基础.结果系数 + 0.5
                        end
                        if self.参战单位[编号].奇经八脉.邪火 then
                             基础.结果系数 = 基础.结果系数 + 0.04
                             if self.参战单位[目标].指令.执行 then
                                if self.参战单位[目标].玩家id==0 then
                                    基础.结果系数 = 基础.结果系数 + 2
                                else
                                    基础.结果系数 = 基础.结果系数 + 0.2
                                end
                             end
                        end
                        if self.参战单位[编号].奇经八脉折服  then
                            local 状态=self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态=状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                          if self.参战单位[编号].法术状态.魔冥 then
                               self.参战单位[编号].法术状态.魔冥.等级 = self.参战单位[编号].法术状态.魔冥.等级 - 1
                              if self.参战单位[编号].法术状态.魔冥.等级<=0 then
                                  返回.取消状态="魔冥"
                              end
                          end
                          if self.参战单位[编号].奇经八脉.咒言 then
                             if self.参战单位[编号].秘传三昧真火 then
                                 self.参战单位[编号].秘传三昧真火 = self.参战单位[编号].秘传三昧真火 - 1
                             end
                             if self.参战单位[编号].秘传飞砂走石 then
                                 self.参战单位[编号].秘传飞砂走石 = self.参战单位[编号].秘传飞砂走石 - 1
                             end
                          end
            end,
        },---三昧真火
  秘传三昧真火={
            类型 = "法伤",
            门派 = "魔王寨",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,60,数量,"秘传三昧真火")
            end,
            冷却 = function(self,编号)
                     local 冷却 = {开始=4,使用=8}
                    if self.参战单位[编号].奇经八脉.固基 then
                        冷却.使用 = 7
                        冷却.开始 = 3
                    end
                    if self.参战单位[编号].奇经八脉.惊悟 and self.回合数>0 then
                        冷却.使用 = 冷却.使用 - math.floor(self.回合数/20)
                    end
                    return 冷却
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[编号].奇经八脉.极炙 and 取随机数()<=25 then
                             基础.结果系数 = 基础.结果系数+0.5
                        end
                        if self.参战单位[编号].奇经八脉不忿 then
                             基础.结果系数 = 基础.结果系数+0.12
                        end

                         if self.参战单位[编号].奇经八脉.不灭 then
                             基础.结果系数 = 基础.结果系数+0.1
                        end
                        if self.参战单位[编号].奇经八脉.融骨 then
                            local 状态=self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态=状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
                         if self.参战单位[编号].奇经八脉.焦土 then
                            if self:取装备五行(编号,3)=="土" then
                               基础.暴击系数 = 基础.暴击系数+0.5
                            end
                            if self:取装备五行(编号,4)=="土" then
                               基础.暴击系数 = 基础.暴击系数+0.5
                            end
                         end
                        if self.参战单位[目标].气血<self.参战单位[目标].最大气血 then
                            local 阵亡几率 = (1-self.参战单位[目标].气血/self.参战单位[目标].最大气血)*200
                            if self.参战单位[编号].奇经八脉.不灭 then
                                阵亡几率=阵亡几率+20
                            end
                            if 取随机数(1,1000)<=阵亡几率 then
                                基础.固定结果 = self.参战单位[目标].气血+1
                                基础.不可神佑 = 1
                            end
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        self.参战单位[编号].奇经八脉不忿 = nil
            end,
        },---秘传三昧真火
  摇头摆尾={
            类型 = "法伤",
            门派 = "魔王寨",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"摇头摆尾")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            添加状态= function(self,目标,编号,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/20)+3
                      状态.等级=等级
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        if self.参战单位[编号].奇经八脉.连营 and 取随机数()<=30 then
                            self.参战单位[编号].奇经八脉连营=取随机数(1,3)
                        end
                        if 取随机数(1,100)<=70 then
                            前置.名称="摇头摆尾"
                            前置.全屏动画=205
                        else
                            前置.名称="三昧真火"
                            前置.目标数 = 1
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.初始系数 = 1 + 0.001 * 等级^2/等级
                         基础.暴击增加=基础.暴击增加 + 10
                      if  取随机数() <= 20 then
                            基础.添加状态={名称="摇头摆尾"}
                      end

            end,
        },---摇头摆尾
  魔焰滔天={
            类型 = "法伤",
            门派 = "魔王寨",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,60,数量,"魔焰滔天")
            end,
            冷却 = function(self,编号)
                    return {开始=3,使用=6}
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if 取随机数()<=30 then
                            基础.结果系数=0.65
                        else
                            基础.结果系数=2.4
                        end
                        if self.参战单位[编号].法术状态.魔冥  then
                            基础.结果系数 = 基础.结果系数 + 0.03
                            if self.参战单位[编号].奇经八脉.咆哮 then
                                if self.参战单位[目标].类型 == "角色" then
                                    基础.结果系数 = 基础.结果系数 + 0.18
                                else
                                    基础.结果系数 = 基础.结果系数 + 0.04
                                end
                            end
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                          if self.参战单位[编号].法术状态.魔冥 then
                               self.参战单位[编号].法术状态.魔冥.等级 = self.参战单位[编号].法术状态.魔冥.等级 - 1
                              if self.参战单位[编号].法术状态.魔冥.等级<=0 then
                                  返回.取消状态="魔冥"
                              end
                          end
            end,
        },---魔焰滔天
  唧唧歪歪={
            类型 = "法伤",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"唧唧歪歪")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/25)+1
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.001 * 等级^2/等级
                        if self.参战单位[编号].符石技能.福泽天下 then
                            基础.初始伤害= 基础.初始伤害 + self.参战单位[编号].符石技能.福泽天下
                        end
                        if self.参战单位[编号].奇经八脉.销武 then
                            基础.结果系数 = 基础.结果系数+self.参战单位[编号].等级*0.08/100
                            self.参战单位[编号].奇经八脉销武 = 1
                        end
                        if self.参战单位[编号].奇经八脉.授业 then
                            基础.结果伤害 =  基础.结果伤害+30
                        end
                        if self.参战单位[编号].奇经八脉.诵律 and self.参战单位[目标].类型~="角色" then
                            基础.结果伤害 =  基础.结果伤害+100
                        end
                        if self.参战单位[编号].奇经八脉诵经 then
                            基础.结果系数  = 基础.结果系数 + 0.16
                        end
                        if self.参战单位[编号].奇经八脉.持戒 and self.参战单位[编号].门派=="化生寺" and 数据.次数==1 then
                            基础.结果系数 = 基础.结果系数 + 0.1
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        返回.比列 = 0.5
                        if  self.参战单位[编号].奇经八脉.修习 and 取随机数()<=25 then
                            返回.次数 = 返回.次数  + 1
                        end
                        if self.参战单位[编号].法术状态.佛法无边 and self:取是否单独门派(编号)
                           and self.参战单位[编号].奇经八脉.无量 and 取随机数()<=35 then
                            返回.次数 = 返回.次数  + 1
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        self.参战单位[编号].奇经八脉诵经 = nil
                        if self.参战单位[编号].奇经八脉.解惑 and  self.参战单位[编号].谆谆教诲 then
                            self.参战单位[编号].谆谆教诲 = self.参战单位[编号].谆谆教诲 - 3
                            if self.参战单位[编号].谆谆教诲<=0 then
                                self.参战单位[编号].谆谆教诲 = nil
                            end
                        end
            end,
        },---唧唧歪歪
  谆谆教诲={
            类型 = "法伤",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    if self.参战单位[编号].愤怒<20 then
                         self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前愤怒不足，无法使用诸天看护")
                       return false
                    end
                    if self:魔法消耗(编号,45,数量,"谆谆教诲") then
                          self:愤怒消耗(编号,20,"谆谆教诲")
                          return true
                     else
                        return false
                    end
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=8}
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[编号].奇经八脉.销武 then
                            基础.结果系数 = 基础.结果系数+self.参战单位[编号].等级*0.08/100
                            self.参战单位[编号].奇经八脉销武 = 1
                        end
                        if self.参战单位[编号].奇经八脉.授业 then
                            基础.结果伤害 =  基础.结果伤害+30
                        end
                        if self.参战单位[编号].奇经八脉.诵经 then
                             self.参战单位[编号].奇经八脉诵经 = 1
                        end
            end,
            死亡处理 = function(self,编号,目标)
                       if self.参战单位[编号].奇经八脉.悟彻 then
                            self.参战单位[编号].奇经八脉悟彻=1
                       end
                       return 0
            end,
        },---谆谆教诲
  雷霆万钧={
            类型 = "法伤",
            门派 = "天宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = 3
                    if self.参战单位[编号].奇经八脉.藏招 then
                        数量 =数量 + 1
                    end
                    if self.参战单位[编号].奇经八脉怒电 then
                        数量 =数量 + 1
                    end
                    if 数量>7 then 数量 = 7 end
                    if self.参战单位[编号].门派=="天宫" and self.参战单位[编号].神话词条 and self.参战单位[编号].神话词条.霹霹电芒
                       and 取随机数()<=self.参战单位[编号].神话词条.霹霹电芒*15 then
                            数量 = 数量 + self.参战单位[编号].神话词条.霹霹电芒
                    end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,35,数量,"雷霆万钧")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[编号].符石技能.天雷地火 then
                          基础.初始伤害= 基础.初始伤害 + self.参战单位[编号].符石技能.天雷地火
                        end
                        if self.参战单位[目标].法术状态.电芒 then
                            if self.参战单位[编号].奇经八脉.惊曜 then
                                基础.结果系数=基础.结果系数+0.1
                            else
                                基础.结果系数=基础.结果系数+0.08
                            end
                        end
                        if self.参战单位[编号].奇经特效.电芒  then
                            基础.添加状态={名称="电芒"}
                        end
                        if self.参战单位[编号].奇经八脉.雷波 and 数据.次数==1 then
                            基础.结果系数=基础.结果系数+0.08
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].门派=="天宫" and self.参战单位[编号].神话词条.天神下凡
                            and 取随机数()<=self.参战单位[编号].神话词条.天神下凡*15 then
                          返回.次数=1
                        end
            end,
        },---雷霆万钧
  风雷韵动={
            类型 = "法伤",
            门派 = "天宫",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗

                  if self.参战单位[编号].愤怒<10 then
                      self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/该技能需10点愤怒才可释放")
                       return false
                  end
                  if self:魔法消耗(编号,60,1,"风雷韵动") then
                      self:愤怒消耗(编号,10,"风雷韵动")
                      return true
                  else
                      return false
                  end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                           基础.初始系数 = 1 + 0.0018 * 等级^2/等级
                            if self.参战单位[目标].法术状态.电芒 then
                                基础.结果系数=基础.结果系数 + 0.4
                           end
            end,
        },---风雷韵动-----
  雷霆汹涌={
            类型 = "法伤",
            门派 = "天宫",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,35,数量,"雷霆汹涌")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>6 then 数量 = 6 end
                    return 数量
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                          基础.初始系数 = 1 + 0.0018 * 等级^2/等级
            end,
        },---雷霆汹涌-----
  二龙戏珠={
            类型 = "法伤",
            门派 = "龙宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,70,数量,"二龙戏珠")
            end,
            冷却 = function(self,编号)
                   if self.参战单位[编号].奇经八脉.戏珠 then
                        return {开始=0,使用=8}
                   end
                   return {开始=0,使用=0}
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                          基础.初始系数 = 1 + 0.0018 * 等级^2/等级
                          if self.参战单位[编号].奇经八脉.云变 then
                            local 扣除数量 = self:取异常数量(目标) * 90
                            self.参战单位[目标].魔法 = self.参战单位[目标].魔法 - 扣除数量
                            if self.参战单位[目标].魔法<=0 then self.参战单位[目标].魔法=0 end
                          end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].奇经八脉戏珠 then
                            返回.比列 = 0.5
                            返回.次数 = 1
                        end
            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.戏珠 and self.参战单位[目标].类型~="角色" then
                            self.参战单位[编号].奇经八脉戏珠 = 1
                      end
                      return 0
            end,
        },---二龙戏珠-----
  龙卷雨击={
            类型 = "法伤",
            门派 = "龙宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,25,数量,"龙卷雨击")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量=math.floor(等级/25)+1
                    if 数量>=7 then 数量=7 end
                    if self.参战单位[编号].奇经八脉.龙魄 and 取随机数()<=20 then
                       数量 = 数量+3
                    end
                    if self.参战单位[编号].奇经八脉.龙钩 and self.参战单位[编号].法术状态.龙骇龙卷 and 取随机数()<=40 then
                       数量 = 数量+3
                    end
                    if self.参战单位[编号].奇经八脉.斩浪 and self:取是否单独门派(编号) and 取随机数()<=50 then
                       数量 = 数量+3
                    end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.全屏动画=1
                        if self.参战单位[编号].奇经八脉.骇浪 then
                          local 数量 = 0
                          for i=1,#self.参战单位 do
                               if self.参战单位[i] and self.参战单位[i].队伍~= self.参战单位[编号].队伍 then
                                数量= 数量 + 1
                               end
                          end
                          if 数量 == 7 then
                            self.参战单位[编号].奇经八脉骇浪 = 1
                          end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[编号].奇经八脉骇浪 then
                            if self.参战单位[目标].类型 == "角色" then
                               基础.暴击增加 = 基础.暴击增加 + 7
                            else
                               基础.暴击增加 = 基础.暴击增加 + 21
                            end
                        end
                        if self.参战单位[编号].法术状态.龙骇龙卷~=nil  then
                            if self.参战单位[编号].奇经八脉.雨魄 then
                               基础.结果系数=基础.结果系数 + 0.16
                            else
                               基础.结果系数=基础.结果系数 + 0.1
                            end
                        end
                        if self.参战单位[编号].奇经八脉.狂浪 and 取随机数()<=50 then
                            基础.结果伤害 = 基础.结果伤害 + 80
                        end
                        if self.参战单位[编号].潜龙在渊加成 then
                            基础.结果系数=基础.结果系数+self.参战单位[编号].潜龙在渊加成.龙卷雨击*2/100
                        end
                        if self.参战单位[编号].奇经八脉.逐浪 then
                              基础.减免增加 = math.floor(玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("破浪诀") * 0.8)
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].门派=="龙宫"  and self.参战单位[编号].神话词条.蛟龙出海
                            and 取随机数()<=self.参战单位[编号].神话词条.蛟龙出海*12 then
                             返回.次数 = 1
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].法术状态.龙骇龙卷 then
                            返回.取消状态="龙骇龙卷"
                        end
                        if self.参战单位[编号].奇经特效.龙骇 and not self.参战单位[编号].奇经八脉.唤雨 then
                              local 几率 = 25
                              if self.参战单位[编号].奇经八脉.傲岸  then
                                    几率 = 几率 * 1.6
                              end
                              if self.参战单位[编号].奇经八脉.云魂 and self.参战单位[编号].法术状态.龙魂  then
                                    几率 = 几率 * 2
                              end
                              if 取随机数()<=几率 then
                                    返回.添加状态={名称="龙骇龙腾"}
                              end
                        end
            end,
        },---龙卷雨击-----
  龙腾={
            类型 = "法伤",
            门派 = "龙宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"龙腾")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0018 * 等级^2/等级
                        if self.参战单位[编号].潜龙在渊加成 then
                            基础.结果系数=基础.结果系数+self.参战单位[编号].潜龙在渊加成.龙腾*2/100
                        end
                        if self.参战单位[编号].法术状态.龙骇龙腾  then
                            if self.参战单位[编号].奇经八脉.雨魄 then
                               基础.结果系数=基础.结果系数 + 0.32
                            else
                               基础.结果系数=基础.结果系数 + 0.2
                            end
                        end
                        if self.参战单位[编号].奇经八脉.波涛 and self.参战单位[目标].类型=="角色" then
                                基础.结果系数=基础.结果系数 + 0.1
                        end
                        if self.参战单位[编号].奇经八脉.惊鸿 and self.参战单位[编号].法术状态.龙骇龙腾 then
                              基础.减免系数 = 0.9
                        end
            end,
            循环结束 = function(self,编号,目标,伤害,等级,数据,类型)-----循环尾部
                        if self.参战单位[编号].奇经八脉.摧意  and 伤害 >= self.参战单位[目标].最大气血*0.08 then
                            self:减少魔法(目标,300)
                        end
                        if self.参战单位[编号].奇经八脉.清吟 and not self.参战单位[目标].奇经八脉清吟 then
                            local 百分比 = self.参战单位[目标].魔法/self.参战单位[目标].最大魔法*100
                            if 百分比<30  then
                               self.参战单位[目标].奇经八脉清吟 = 4
                            end
                         end

                         if self.参战单位[编号].奇经八脉.龙啸  and 取随机数()<=20 then
                                self.参战单位[目标].奇经八脉龙啸 = 4
                         end
                         if self.参战单位[编号].奇经八脉.沐雨  and self.参战单位[目标].魔法<=0 then
                            local 状态=self:随机对方增益状态(目标)
                              if 状态 then
                                  基础.取消状态=状态
                              else
                                  self:随机取消经脉增益(目标)
                              end
                         end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].法术状态.龙骇龙卷 then
                            返回.取消状态="龙骇龙腾"
                        end
                        if self.参战单位[编号].奇经特效.龙骇 and not self.参战单位[编号].奇经八脉.唤雨 then
                              local 几率 = 25
                              if self.参战单位[编号].奇经八脉.傲岸  then
                                    几率 = 几率 * 1.6
                              end
                              if self.参战单位[编号].奇经八脉.云魂 and self.参战单位[编号].法术状态.龙魂  then
                                    几率 = 几率 * 2
                              end
                              if 取随机数()<=几率 then
                                    返回.添加状态={名称="龙骇龙卷"}
                              end
                        end
            end,
        },---龙腾-----
  亢龙归海={
            类型 = "法伤",
            门派 = "龙宫",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                     return self:魔法消耗(编号,200,1,"亢龙归海")
            end,
            冷却 = function(self,编号)
                  return {开始=3,使用=6}
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标数=2
                        前置.重复攻击=true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0021 * 等级^2/等级

            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        返回.添加状态={名称="横扫千军"}
            end,
        },---亢龙归海-----
  落叶萧萧={
            类型 = "法伤",
            门派 = "神木林",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"落叶萧萧")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.全屏动画 = 1
                        if self.参战单位[编号].奇经八脉.追击 and self.参战单位[编号].风灵>0 then
                            self.参战单位[编号].奇经八脉追击 = 1
                            self:神木消耗风灵(self.参战单位[编号],1)
                            if self.参战单位[编号].奇经八脉.风魂 then
                              前置.添加状态 = {名称="护盾",等级=等级*2}
                            end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if  not self.参战单位[编号].奇经八脉追击
                            and self.参战单位[编号].奇经八脉.狂叶
                            and self.参战单位[编号].风灵<=0  then
                             基础.忽视防御 = 基础.忽视防御 + 90
                        end
                        if self.参战单位[编号].奇经八脉追击 then
                            基础.结果系数 = 基础.结果系数 + 0.3
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if 取随机数()<= 10 then
                             返回.次数=1
                             返回.比列=0.5
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                         self.参战单位[编号].奇经八脉追击 = nil
            end,
        },---落叶萧萧
 荆棘舞={
            类型 = "法伤",
            门派 = "神木林",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"落叶萧萧")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[编号].奇经八脉.蔓延 then
                           基础.结果系数 = 基础.结果系数+0.1
                           self.参战单位[编号].奇经八脉蔓延 = 4
                        end
                        if self.参战单位[编号].奇经八脉.破杀 then
                            基础.暴击系数 = 基础.暴击系数 + 0.2
                            基础.暴伤系数 = 基础.暴伤系数 + 0.2
                        end
                        if  self.参战单位[编号].风灵>0 and self.参战单位[编号].奇经特效.鞭挞 and not self.参战单位[编号].奇经八脉.苍埃 then
                            if self.参战单位[编号].奇经八脉.绞藤 then
                                local 几率 = self.参战单位[编号].风灵*10
                                if 几率>=50 then 几率 = 30 end
                                if 取随机数()<=几率 then
                                    基础.添加状态={名称="雾杀",境界=math.floor(等级*2+self.参战单位[编号].法伤*0.2)}
                                end
                            end
                            if self.参战单位[编号].风灵>=3 then
                                基础.结果系数=基础.结果系数 + 0.45
                            else
                                基础.结果系数=基础.结果系数 + self.参战单位[编号].风灵 * 0.15
                            end
                            if self.参战单位[编号].奇经八脉.劲草  then
                                if self.参战单位[编号].风灵>=3 then
                                    基础.结果系数=基础.结果系数 + 0.15
                                else
                                    基础.结果系数=基础.结果系数 + self.参战单位[编号].风灵 * 0.05
                                end
                            end
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].风灵>0 and self.参战单位[编号].奇经特效.鞭挞
                            and not self.参战单位[编号].奇经八脉.苍埃 then
                            local 消耗 = 0
                            if self.参战单位[编号].风灵<=3 then
                                消耗 = self.参战单位[编号].风灵
                            else
                                消耗 = 3
                            end
                            self:神木消耗风灵(self.参战单位[编号],消耗)
                            if self.参战单位[编号].奇经八脉.风魂 then
                                返回.添加状态={名称="护盾",等级=消耗*等级*2}
                            end

                        end
            end,
        },---荆棘舞
 尘土刃={
            类型 = "法伤",
            门派 = "神木林",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"尘土刃")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        if self.参战单位[编号].风灵>0 and self.参战单位[编号].奇经八脉.苍埃 then
                            self.参战单位[编号].奇经八脉苍埃 = 1
                            self:神木消耗风灵(self.参战单位[编号],1)
                            if self.参战单位[编号].奇经八脉.风魂 then
                              前置.添加状态 = {名称="护盾",等级=等级*2}
                            end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        基础.造成伤势={比列=0.5}
                        if self.参战单位[编号].奇经八脉.破杀 then
                            基础.暴击系数 = 基础.暴击系数 + 0.2
                            基础.暴伤系数 = 基础.暴伤系数 + 0.2
                        end
                        if self.参战单位[编号].奇经八脉苍埃 then
                             基础.造成伤势.比列 = 基础.造成伤势.比列 * 1.5
                        end
                        if self.参战单位[编号].奇经八脉.蔓延 then
                           基础.结果系数 = 基础.结果系数 + 0.1
                           self.参战单位[编号].奇经八脉蔓延 = 4
                        end
                        if self.参战单位[编号].奇经八脉.寄生 and self:取异常数量(目标)>1 and self.参战单位[编号].风灵>0 then
                            local 消耗 = 1
                            if self:取异常数量(目标)>=2 and self.参战单位[编号].风灵>=2 then
                                消耗 = 2
                            end
                            self:神木消耗风灵(self.参战单位[编号],消耗)
                            基础.结果系数 = 基础.结果系数 + 0.35*消耗
                            if self.参战单位[编号].奇经八脉.风魂 then
                                基础.添加状态 = {名称="护盾",目标=编号,等级=等级*2*消耗}
                            end
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                       self.参战单位[编号].奇经八脉苍埃 =nil
            end,
        },---尘土刃
  冰川怒={
            类型 = "法伤",
            门派 = "神木林",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,30,数量,"冰川怒")
            end,
            添加状态= function(self,目标,编号,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/20)+1
                      状态.等级=等级
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[编号].奇经八脉.破杀 then
                            基础.暴击系数 = 基础.暴击系数 + 0.2
                            基础.暴伤系数 = 基础.暴伤系数 + 0.2
                        end
                        基础.添加状态 ={}
                        local 几率 = 20
                        if self.参战单位[编号].奇经八脉.冰锥 and self.参战单位[目标].类型~="角色" and  self.参战单位[编号].风灵>0 then
                            几率 = 几率 * 1.4
                            基础.结果系数 = 基础.结果系数 + 0.3
                            self:神木消耗风灵(self.参战单位[编号],1)
                            local 状态 = self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态=状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                            if self.参战单位[编号].奇经八脉.风魂 then
                                table.insert(基础.添加状态 , {名称="护盾",目标=编号,等级=等级*2})
                            end
                        end
                        if 取随机数() <= 几率 then
                            table.insert(基础.添加状态,{名称="冰川怒"})
                        else
                            table.insert(基础.添加状态,{名称="冰川怒伤"})
                        end
                        if self.参战单位[编号].奇经八脉.蔓延 then
                           基础.结果系数 = 基础.结果系数 + 0.1
                           self.参战单位[编号].奇经八脉蔓延 = 4
                        end
            end,
        },---冰川怒
  血雨={
            类型 = "法伤",
            门派 = "神木林",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,150,数量,"血雨")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
            end,
        },---血雨-----
  蛊树迷瘴={
            类型 = "法伤",
            门派 = "神木林",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"蛊树迷瘴")

            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>5 then 数量 = 5 end
                    return 5
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].鬼魂 then
                             基础.初始系数=基础.初始系数+0.3
                        end
                        local 成功率 = 10
                        if self.参战单位[编号].法术状态.毒萃 then
                                成功率 = 100
                        end
                        基础.添加状态 = {}
                        if self.参战单位[编号].奇经八脉.伏毒 and self.参战单位[编号].风灵>0 then
                            成功率 = 成功率 + 5
                            self:神木消耗风灵(self.参战单位[编号],1)
                            if self.参战单位[编号].奇经八脉.风魂 then
                                table.insert(基础.添加状态, {名称="护盾",目标=编号,等级=等级*2})
                            end
                        end
                        if 取随机数()<=成功率 then
                            local 扣除气血=math.floor(等级*2+self.参战单位[编号].法伤*0.2)
                            table.insert(基础.添加状态, {名称="雾杀",境界=扣除气血})
                        end
            end,
        },---蛊树迷瘴-----
  风卷残云={
            类型 = "法伤",
            门派 = "神木林",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,100,数量,"风卷残云")

            end,
            冷却 = function(self,编号)
                    return {开始=3,使用=6}
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/35)+1
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                         前置.全屏动画=205

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[编号].风灵> 0 then
                            基础.结果系数=基础.结果系数+ 0.16*self.参战单位[编号].风灵
                        end
                        local 境界 = self:取指定法宝(编号,"月影",1)
                        if 境界 and  self.参战单位[编号].类型=="角色" then
                              基础.结果系数=基础.结果系数 +  0.12
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].风灵> 0 then
                            if self.参战单位[编号].奇经八脉.风魂 then
                                返回.添加状态={名称="护盾",目标=编号,等级=self.参战单位[编号].风灵*等级*2}
                            end
                            self:神木消耗风灵(self.参战单位[编号],self.参战单位[编号].风灵)
                        end
            end,
        },---风卷残云-----
  腾雷={
            类型 = "法伤",
            门派 = "凌波城",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,60,数量,"腾雷")
            end,
            添加状态= function(self,目标,编号,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=3
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        if self.参战单位[编号].奇经八脉.闪雷 and self.参战单位[编号].战意>0 then
                            self.参战单位[编号].奇经八脉闪雷 = self.参战单位[编号].战意
                            self.参战单位[编号].战意 = 0
                            self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的战意为#R/"..self.参战单位[编号].战意.."#Y/点")
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                            基础.初始系数 = 1 + 0.0018 * 等级^2/等级
                            if self.参战单位[编号].奇经八脉.闪雷 and self.参战单位[编号].奇经八脉闪雷 then
                                 基础.结果系数=基础.结果系数 + 0.4 * self.参战单位[编号].奇经八脉闪雷
                            end
                            if self:取是否封印(编号,目标,"腾雷",等级) then
                                基础.添加状态={编号=编号}
                            end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        self.参战单位[编号].奇经八脉闪雷 =nil
            end,
        },---风卷残云-----
  自爆={
            类型 = "法伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true

            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    return 10
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.结尾 = self.参战单位[编号].气血

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.结果伤害= math.floor(等级*5+self.参战单位[目标].气血*0.1)
            end,
        },---自爆-----
  水攻={
            类型 = "法伤",
            属性 = "水",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,数量,"水攻")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
                        基础.结果伤害 = math.floor(等级*0.5 +20)
                        if self.参战单位[编号].电魂闪 and 取随机数()<=self.参战单位[编号].电魂闪 then
                            local 状态 = self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态 = 状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
            end,
        },---水攻-----
  水漫金山={
            类型 = "法伤",
            属性 = "水",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"水漫金山")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量=3 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0008 * 等级^2/等级
            end,
        },---水漫金山-----
  超级水漫金山={
            类型 = "法伤",
            属性 = "水",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"超级水漫金山")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量=3 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.001 * 等级^2/等级
                        if 数据.次数==1 then
                            基础.结果系数=基础.结果系数 + 0.1
                            if 取随机数()<=25 then
                                self.参战单位[目标].超级弱点水=2
                            end
                        end
            end,
        },---超级水漫金山-----
  落岩={
            类型 = "法伤",
            属性 = "土",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,数量,"落岩")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
                        if self.参战单位[编号].电魂闪 and 取随机数()<=self.参战单位[编号].电魂闪 then
                            local 状态 = self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态 = 状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
            end,
        },---落岩-----
  泰山压顶={
            类型 = "法伤",
            属性 = "土",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"泰山压顶")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量=3 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0008 * 等级^2/等级
            end,
        },---泰山压顶-----
  超级泰山压顶={
            类型 = "法伤",
            属性 = "土",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"超级泰山压顶")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量=3 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.001 * 等级^2/等级
                        if 数据.次数==1 then
                            基础.结果系数=基础.结果系数 + 0.1
                            if 取随机数()<=25 then
                                self.参战单位[目标].超级弱点土=2
                            end
                        end

            end,
        },---超级泰山压顶-----
  雷击={
            类型 = "法伤",
            属性 = "雷",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,数量,"雷击")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
                        if self.参战单位[编号].主人 and self.参战单位[self.参战单位[编号].主人].奇经八脉.共鸣 then
                            基础.结果系数=基础.结果系数 + 0.12
                        end
                        if self.参战单位[编号].电魂闪 and 取随机数()<=self.参战单位[编号].电魂闪 then
                            local 状态 = self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态 = 状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
            end,
        },---雷击-----
  奔雷咒={
            类型 = "法伤",
            属性 = "雷",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"奔雷咒")

            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量=3 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0008 * 等级^2/等级
                        if self.参战单位[编号].主人 and self.参战单位[self.参战单位[编号].主人].奇经八脉.共鸣 then
                            基础.结果系数=基础.结果系数 + 0.12
                        end
            end,
        },---奔雷咒-----
  超级奔雷咒={
            类型 = "法伤",
            属性 = "雷",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"超级奔雷咒")

            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量=3 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.001 * 等级^2/等级
                        if self.参战单位[编号].主人 and self.参战单位[self.参战单位[编号].主人].奇经八脉.共鸣 then
                            基础.结果系数=基础.结果系数 + 0.12
                        end
                        if 数据.次数==1 then
                            基础.结果系数=基础.结果系数 + 0.1
                            if 取随机数()<=25 then
                                self.参战单位[目标].超级弱点雷=2
                            end
                        end
            end,
        },---超级奔雷咒-----

  烈火={
            类型 = "法伤",
            属性 = "火",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,数量,"烈火")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
                        if self.参战单位[编号].电魂闪 and 取随机数()<=self.参战单位[编号].电魂闪 then
                            local 状态 = self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态 = 状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
            end,
        },---雷击-----

  地狱烈火={
            类型 = "法伤",
            属性 = "火 ",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"地狱烈火")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量=3 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0008 * 等级^2/等级

            end,
        },---地狱烈火-----
  超级地狱烈火={
            类型 = "法伤",
            属性 = "火",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"超级地狱烈火")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量=3 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.001 * 等级^2/等级
                        if 数据.次数==1 then
                            基础.结果系数=基础.结果系数 + 0.1
                            if 取随机数()<=25 then
                                self.参战单位[目标].超级弱点火=2
                            end
                        end

            end,
        },---超级地狱烈火-----
  超级三昧真火={
            类型 = "法伤",
            属性 = "火",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,60,数量,"超级地狱烈火")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0009 * 等级^2/等级
            end,
        },---超级三昧真火-----
  上古灵符={
            类型 = "法伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,100,数量,"上古灵符")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        local 名称 ={"上古灵符(流沙)","上古灵符(怒雷)","上古灵符(心火)","上古灵符(冰冻)"}
                        前置.名称 = 名称[取随机数(1,4)]
            end,
        },---上古灵符-----
  ["上古灵符(流沙)"]={
            类型 = "法伤",
            属性 = "土",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
                        if self.参战单位[编号].电魂闪 and 取随机数()<=self.参战单位[编号].电魂闪 then
                            local 状态 = self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态 = 状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
            end,
        },---上古灵符-----
  ["上古灵符(怒雷)"]={
            类型 = "法伤",
            属性 = "雷",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
                        if self.参战单位[编号].电魂闪 and 取随机数()<=self.参战单位[编号].电魂闪 then
                            local 状态 = self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态 = 状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
            end,
        },---上古灵符-----
  ["上古灵符(心火)"]={
            类型 = "法伤",
            属性 = "火",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
                        if self.参战单位[编号].电魂闪 and 取随机数()<=self.参战单位[编号].电魂闪 then
                            local 状态 = self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态 = 状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
            end,
        },---上古灵符-----
  ["上古灵符(冰冻)"]={
            类型 = "法伤",
            属性 = "水",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
                        if self.参战单位[编号].电魂闪 and 取随机数()<=self.参战单位[编号].电魂闪 then
                            local 状态 = self:随机对方增益状态(目标)
                            if 状态 then
                                基础.取消状态 = 状态
                            else
                                self:随机取消经脉增益(目标)
                            end
                        end
            end,
         },---上古灵符-----
  八凶法阵={
            类型 = "法伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"八凶法阵")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/30)+2
                    if 数量>4 then 数量=4 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
            end,
        },---八凶法阵-----
  天降灵葫={
            类型 = "法伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"天降灵葫")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    return 取随机数(1,5)
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
            end,
        },---天降灵葫-----
  叱咤风云={
            类型 = "法伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"叱咤风云")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量=3 end
                    return 数量
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
                        基础.防御系数 = 基础.防御系数 - 0.1
            end,
        },---叱咤风云-----
  食指大动={
            类型 = "法伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"食指大动")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量=3 end
                    return 数量
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       基础.初始系数 = 1 + 0.0005 * 等级^2/等级
            end,
        },---食指大动-----
  流沙轻音={
            类型 = "法伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"流沙轻音")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    local 数量 = math.floor(等级/20)+1
                    if 数量>5 then 数量=5 end
                    return 数量
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
            end,
        },---流沙轻音-----
  扶摇万里={
            类型 = "法伤",
            属性 = "水",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,30,数量,"扶摇万里")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    return math.floor(等级/18)+1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0008 * 等级^2/等级
            end,
        },---扶摇万里-----
  月光={
            类型 = "法伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,100,数量,"月光")
            end,
            人数 = function(self,编号,等级,消耗) ---技能人数
                    return 取随机数(2,4)
            end,
            技能流程 = function(self,编号,目标)  ---------循环开始前
                        for i=1,取随机数(1,3) do
                            local 降低 = 1-i*3/10
                            self:技能使用处理(编号,"月光",self:取技能等级(编号,"月光"),{目标=目标},降低)
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0005 * 等级^2/等级
            end,

        },---月光-----
 观照万象={
            类型 = "法伤",
            冷却 = function(self,编号)
                  return {开始=0,使用=10}
            end,
            技能流程 = function(self,编号,目标)  ---------循环开始前
                        for k,v in pairs(self.参战单位[编号].主动技能) do
                            if v.名称~="观照万象" then
                                if 战斗技能[v.名称].冷却 then
                                      if self.参战单位[编号][v.名称] then
                                          self:添加提示(self.参战单位[编号].玩家id, self.参战单位[编号].编号, "#Y该技能当前处于冷却中还需："..self.参战单位[编号][v.名称].."回合后才可使用")
                                          return
                                      else
                                          local 冷却 = 战斗技能[v.名称].冷却(self,编号)
                                          if 战斗技能[v.名称].技能流程 then
                                              战斗技能[v.名称].技能流程(self,编号,目标)
                                          else
                                              self:法术攻击处理(编号,{名称=v.名称,目标=目标})
                                          end
                                          if 冷却 and 冷却.使用 > 0 then
                                              self.参战单位[编号][v.名称] = 冷却.使用
                                          end
                                          if (v.名称=="秘传飞砂走石" or v.名称=="秘传三昧真火") and  self.参战单位[编号].奇经八脉.旋阳 and 取随机数()<=50 then
                                              self.参战单位[编号][v.名称] = self.参战单位[编号][v.名称] - 2
                                          end
                                      end
                                  else
                                      self:法术攻击处理(编号,{名称=v.名称,目标=目标})
                                  end
                            end
                        end
            end,
        },---上古灵符-----
  ----------------------------固伤技能
  雨落寒沙={
            类型 = "固伤",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/25)+1
                    if self:取玩家战斗() then
                       return 2
                    elseif self.参战单位[编号].奇经八脉.百花 and 取随机数()<=9 then
                        数量 = 数量 + 3
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,20,数量,"雨落寒沙")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.全屏动画=205
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环

                        if self.参战单位[编号].奇经八脉.暗伤 and self.参战单位[目标].类型~="角色" then
                           基础.结果伤害 = 基础.结果伤害 + 玩家数据[self.参战单位[编号].玩家id].经脉:武器伤害处理(18)
                        end
                        if self.参战单位[编号].符石技能.凤舞九天 then
                           基础.结果伤害= 基础.结果伤害 + self.参战单位[编号].符石技能.凤舞九天
                        end
                        local 中毒概率=10
                         if self.参战单位[编号].奇经八脉.杏花 then
                          中毒概率 = 中毒概率 + 4
                         end
                         if self.参战单位[编号].奇经八脉.独尊 or self.参战单位[编号].奇经八脉.重明 then
                            中毒概率 = 中毒概率 - 4
                         end
                        if 取随机数()<=中毒概率 then
                           基础.添加状态={名称="暗器毒",等级=等级*2}
                        end
                        if self.参战单位[编号].奇经八脉.暗刃 and self.参战单位[目标].法术状态.暗器毒~=nil then
                           基础.结果系数 =基础.结果系数 + 0.18
                        end
            end,
        },---雨落寒沙
  子母神针={
            类型 = "固伤",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 2
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  if self.参战单位[编号].愤怒<30 then
                    self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/该技能需30点愤怒才可释放")
                    return false
                  end
                  if self:魔法消耗(编号,35,数量,"子母神针") then
                      self:愤怒消耗(编号,30,"子母神针")
                      return true
                  else
                      return false
                  end
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                     前置.全屏动画=205
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[编号].奇经八脉.暗伤 and self.参战单位[目标].类型~="角色" then
                            基础.结果伤害 = 基础.结果伤害 + 玩家数据[self.参战单位[编号].玩家id].经脉:武器伤害处理(18)
                        end
                        if self.参战单位[编号].符石技能.凤舞九天 then
                            基础.结果伤害= 基础.结果伤害 + self.参战单位[编号].符石技能.凤舞九天
                        end
                        local 中毒概率=10
                        if self.参战单位[编号].奇经八脉.杏花 then
                            中毒概率 = 中毒概率 + 4
                        end
                        if self.参战单位[编号].奇经八脉.独尊 or self.参战单位[编号].奇经八脉.重明 then
                            中毒概率 = 中毒概率 - 4
                        end
                        if 取随机数()<=中毒概率 then
                            基础.添加状态={名称="暗器毒",等级=等级*2}
                        end
                        if self.参战单位[编号].奇经八脉.暗刃 and self.参战单位[目标].法术状态.暗器毒~=nil then
                            基础.结果系数 =基础.结果系数 + 0.18
                        end
            end,

        },---子母神针
  阎罗令={
            类型 = "固伤",
            门派 = "阴曹地府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/25)+1
                    if self:取玩家战斗() then
                       return 2
                    elseif self.参战单位[编号].奇经八脉.百花 and 取随机数()<=9 then
                        数量 = 数量 + 3
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,20,数量,"阎罗令")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害=基础.初始伤害-等级
                        if self.参战单位[编号].门派 == "阴曹地府" and  self.参战单位[编号].类型=="角色" then
                           基础.初始伤害=基础.初始伤害+self.参战单位[编号].力量*0.2
                        end
                        if self.参战单位[编号].奇经八脉.夜行 and 昼夜参数==1 then
                           基础.初始伤害= 基础.初始伤害 + 50
                        end
                        if 昼夜参数==1 then -- 1代表天黑 2代表天亮
                           基础.初始伤害= 基础.初始伤害 + 等级*1.5
                        end
                        if self.参战单位[编号].符石技能.索命无常 then
                          基础.初始伤害= 基础.初始伤害 + self.参战单位[编号].符石技能.索命无常
                        end
                        if self.参战单位[编号].奇经八脉.阎罗 and self.参战单位[目标].类型~="角色" then
                           基础.初始伤害= 基础.初始伤害 + 玩家数据[self.参战单位[编号].玩家id].经脉:武器伤害处理(15)
                           self.参战单位[编号].奇经八脉阎罗 = 1
                        end
                        基础.造成伤势={比例=0.5}
            end,
        },---阎罗令
  判官令={
            类型 = "固伤",
            门派 = "阴曹地府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    if self.参战单位[编号].奇经八脉.咒令 then
                          return {开始=0,使用=4}
                    end
                    return {开始=0,使用=0}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,40,数量,"判官令")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害=基础.初始伤害+等级
                        if self.参战单位[编号].门派 == "阴曹地府" and  self.参战单位[编号].类型=="角色" then
                           基础.初始伤害=基础.初始伤害+self.参战单位[编号].力量*0.2
                        end
                        if 昼夜参数==1 then -- 1代表天黑 2代表天亮
                               基础.初始伤害= 基础.初始伤害 + 等级*1.5
                            end
                        if self.参战单位[编号].奇经八脉阎罗 then
                               基础.结果系数= 基础.结果系数 + 0.2
                        end
                        if self.参战单位[编号].奇经八脉.咒令 then
                               基础.结果系数= 基础.结果系数 + 0.5
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        self.参战单位[编号].奇经八脉阎罗=nil
            end,
        },---判官令---
  天罗地网={
            类型 = "固伤",
            门派 = "盘丝洞",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self:取玩家战斗() then  return 2 end
                    return math.floor(等级/40)+2
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"天罗地网")

            end,
            添加状态= function(self,目标,编号,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/20)+1
                      状态.速度=math.floor(self.参战单位[目标].速度*0.2)
                      if self.参战单位[编号].奇经八脉.迷瘴 then
                            状态.速度 =状态.速度 + math.floor(self.参战单位[目标].速度*0.05)
                            状态.伤害 = math.floor(等级*1.5)
                            状态.法伤 = math.floor(等级*1.5)
                      end
                      if self.参战单位[编号].奇经八脉.忘忧 then
                            状态.忘忧 = true
                      end
            end,
            解除状态 = function(self,编号,目标,名称,数据)
                        if 取随机数()<=50 and self.参战单位[数据.编号].奇经八脉.附骨
                            and (名称=="晶清决" or 名称=="玉清诀") then
                               数据.不可解除 = 1
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                            if self.参战单位[编号].奇经八脉.迷瘴 then
                                基础.初始系数=基础.初始系数+0.2
                            end
                            if self.参战单位[编号].奇经八脉.粘附 and self.参战单位[目标].类型~="角色" then
                                基础.初始伤害 = 基础.初始伤害 + 玩家数据[self.参战单位[编号].玩家id].经脉:武器伤害处理(18)
                            end
                            if self.参战单位[编号].门派 == "盘丝洞" and self.参战单位[编号].类型=="角色" then
                                基础.初始伤害= 基础.初始伤害 + self.参战单位[编号].敏捷*0.2
                            end
                            if self.参战单位[编号].符石技能.网罗乾坤 then
                                基础.初始伤害= 基础.初始伤害 +self.参战单位[编号].符石技能.网罗乾坤
                            end

                            if (self.参战单位[目标].玩家id==0 and self:取友封印数量(目标)>=服务端参数.自动晶清-1)
                               or self.参战单位[目标].法术状态.寡欲令 or self.参战单位[目标].法术状态.花护 then
                                return
                            end
                            local 当前 = DeepCopy(self.计算属性)
                            local 计算 = self:取基础封印计算(编号,目标,名称,等级,当前)
                            if self:取是否封印(编号,目标,名称,等级) and 取随机数(1,100)<= 计算 then
                                基础.添加状态={目标=目标}
                            end
            end,
        },---天罗地网---
  五雷轰顶={
            类型 = "固伤",
            门派 = "天宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,50,"五雷轰顶")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        local 基数 = 0.05
                        if 取随机数(1,100)<=30  then
                              基数 = 0.25
                              if self.参战单位[编号].经脉流派 =="镇妖神使"
                                 and self.参战单位[编号].奇经八脉.轰鸣
                                 and not self.参战单位[目标].奇经八脉轰鸣 then
                                  self.参战单位[目标].奇经八脉轰鸣 = 4
                              end
                              if self.参战单位[编号].奇经八脉.威吓 then
                                 基数=基数+0.08
                                 self.参战单位[目标].不加愤怒=1
                              end
                        end
                        基础.固定结果 = math.floor(self.参战单位[目标].气血 * 基数)
            end,
        },---五雷轰顶-----
  龙吟={
            类型 = "固伤",
            门派 = "龙宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,30,数量,"龙吟")
            end,

            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,

            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                     前置.全屏动画=1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.扣除魔法 = 1
            end,
        },---龙吟-----
  紧箍咒={
            类型 = "固伤",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"紧箍咒")
            end,
            人数 = function(self,编号,等级) ---技能人数
                        local 数量=1
                        local 境界 = self:取指定法宝(编号,"普渡")
                        if 境界 then
                            local 几率 = math.floor(境界*3)
                            if self.参战单位[编号].奇经八脉.普渡 then
                                几率 = 几率 - 10
                            end
                            if 取随机数()<=几率 and self:取指定法宝(编号,"普渡",1) then
                                if self.参战单位[编号].奇经八脉.普渡 then
                                     数量 = 数量 + 2
                                else
                                    数量 = 数量 + 1
                                end
                            end
                        end
                        if self.参战单位[编号].奇经八脉.赐咒 and 取随机数()<=56 then
                           local 判断 = true
                           for i=1,#self.参战单位 do
                             if self.参战单位[i]~=nil and self.参战单位[i].队伍~=self.参战单位[编号].队伍
                                and self.参战单位[i].法术状态.紧箍咒 then
                                判断 = false
                             end
                           end
                           if 判断 then
                              数量 = 数量 + 1
                           end
                        end
                    return 数量
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=math.floor(等级/20)+3
                        状态.等级=境界
                        if self.参战单位[编号].奇经八脉.默诵 then
                            状态.回合=状态.回合 + 3
                            状态.默诵 =true
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.结果伤害=等级+20+(self.参战单位[编号].法伤*0.1)
                         if self.参战单位[编号].奇经八脉.默诵 then
                            基础.结果伤害 = 基础.结果伤害 + 1 + self.参战单位[编号].固定伤害
                            self.参战单位[目标].不加愤怒 = 1
                        end
                        基础.造成伤势={比例=1}
            end,
            死亡处理 = function(self,编号,目标)
                      if self.参战单位[编号].奇经八脉.无怖 and 取随机数()<=35 then
                            self.参战单位[编号].固定伤害 = self.参战单位[编号].固定伤害 + 40
                      end
                      return 0
            end,
            循环结束 = function(self,编号,目标,伤害,等级,数据,类型)-----循环尾部
                        数据.添加状态={目标=目标,境界=伤害}
            end,
        },---紧箍咒-----
  日光华={
            类型 = "固伤",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"日光华")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self:取玩家战斗() then
                        return 1
                    end
                    return math.floor(等级/40)+2
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if self.参战单位[编号].奇经特效.五行珠 then
                             self.参战单位[编号].五行珠.金 = 1
                             local 境界 = self:取指定法宝(编号,"普渡")
                             if 境界 and self.参战单位[编号].奇经八脉.智念 and 取随机数()<= self:取指定法宝(编号,"普渡",1)*2 then
                                local 五行 = {"木","水","火","土"}
                                local 珠子 = 五行[取随机数(1,4)]
                                self.参战单位[编号].五行珠[珠子] = 1
                             end
                             if self.参战单位[编号].奇经八脉.顿悟 then
                                  local  五行加成 = 0
                                  for n,v in pairs(self.参战单位[编号].五行珠) do
                                       if self.参战单位[编号].五行珠[n] >0 then
                                          五行加成 = 五行加成 + 1
                                       end
                                  end
                                  self:增加愤怒(编号,五行加成)
                            end
                            if self.参战单位[编号].奇经八脉.无尽 then
                                self.参战单位[编号].伤害 = self.参战单位[编号].伤害 + 6
                            end
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].奇经八脉.缘起 and self:取是否单独门派(编号) then
                            local 判断 = 0
                            for k,v in pairs(self.参战单位) do
                                if v.队伍~=self.参战单位[编号].队伍 and v.法术状态.紧箍咒 then
                                    判断 = 判断+8
                                end
                            end
                            if 取随机数()<=判断 then
                                返回.次数 = 1
                            end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[编号].奇经八脉.法咒 then
                            local 几率 = 15
                            if 数据.次数 == 1 and self.参战单位[编号].法术状态.莲心剑意 then
                                几率 = 40
                            end
                            if 取随机数()<=几率 then
                                基础.结果系数 = 基础.结果系数+0.5
                            end
                        end
                        local 境界 = self:取指定法宝(编号,"金刚杵",1)
                         if 境界 and self.参战单位[编号].门派 == "普陀山"
                            and self.参战单位[编号].类型=="角色" then
                            基础.结果系数= 基础.结果系数 + 境界*0.025
                         end
                         if self.参战单位[编号].神器技能 and self.参战单位[编号].神器技能.名称=="璇华" then
                                基础.结果系数= 基础.结果系数+self.参战单位[编号].神器技能.等级*0.1
                         end
                        if self:取五行克制("金",self.参战单位[目标].防御五行)  then
                            基础.结果系数= 基础.结果系数+0.5
                        end
                        if self.参战单位[编号].符石技能.行云流水 then
                            基础.结果伤害= 基础.结果伤害 +self.参战单位[编号].符石技能.行云流水
                        end
                        if self.参战单位[编号].奇经八脉.秘术 then
                            self.参战单位[目标].奇经八脉秘术前置 = 1
                        end
            end,
        },---日光华-----
  靛沧海={
            类型 = "固伤",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"靛沧海")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self:取玩家战斗() then
                        return 1
                    end
                    return math.floor(等级/40)+2
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if  self.参战单位[编号].奇经特效.五行珠 then
                             self.参战单位[编号].五行珠.水 = 1
                             local 境界 = self:取指定法宝(编号,"普渡")
                             if 境界 and self.参战单位[编号].奇经八脉.智念 and 取随机数()<= self:取指定法宝(编号,"普渡",1)*2 then
                                   local 五行 = {"木","金","火","土"}
                                   local 珠子 = 五行[取随机数(1,4)]
                                   self.参战单位[编号].五行珠[珠子] = 1
                             end
                             if self.参战单位[编号].奇经八脉.顿悟 then
                                  local  五行加成 = 0
                                  for n,v in pairs(self.参战单位[编号].五行珠) do
                                       if self.参战单位[编号].五行珠[n] >0 then
                                          五行加成 = 五行加成 + 1
                                       end
                                  end
                                  self:增加愤怒(编号,五行加成)
                            end
                            if self.参战单位[编号].奇经八脉.无尽 then
                                self.参战单位[编号].伤害 = self.参战单位[编号].伤害 + 6
                            end
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].奇经八脉.缘起 and self:取是否单独门派(编号) then
                            local 判断 = 0
                            for k,v in pairs(self.参战单位) do
                                if v.队伍~=self.参战单位[编号].队伍 and v.法术状态.紧箍咒 then
                                    判断 = 判断+8
                                end
                            end
                            if 取随机数()<=判断 then
                                返回.次数 = 1
                            end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[编号].奇经八脉.法咒 then
                            local 几率 = 15
                            if 数据.次数 == 1 and self.参战单位[编号].法术状态.莲心剑意 then
                                几率 = 40
                            end
                            if 取随机数()<=几率 then
                                基础.结果系数 = 基础.结果系数+0.5
                            end
                        end
                        local 境界 = self:取指定法宝(编号,"金刚杵",1)
                        if 境界 and self.参战单位[编号].门派 == "普陀山"
                            and self.参战单位[编号].类型=="角色" then
                            基础.结果系数= 基础.结果系数 + 境界*0.025
                        end
                        if self.参战单位[编号].神器技能 and self.参战单位[编号].神器技能.名称=="璇华" then
                                基础.结果系数= 基础.结果系数+self.参战单位[编号].神器技能.等级*0.1
                        end
                        if self:取五行克制("水",self.参战单位[目标].防御五行)  then
                             基础.结果系数=基础.结果系数+0.5
                        end
                        if self.参战单位[编号].符石技能.行云流水 then
                            基础.结果伤害= 基础.结果伤害 +self.参战单位[编号].符石技能.行云流水
                        end
                        if self.参战单位[编号].奇经八脉.秘术 then
                            self.参战单位[目标].奇经八脉秘术前置 = 1
                        end
            end,
        },---靛沧海-----
  巨岩破={
            类型 = "固伤",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"巨岩破")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self:取玩家战斗() then
                        return 1
                    end
                    return math.floor(等级/40)+2
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if  self.参战单位[编号].奇经特效.五行珠 then
                             self.参战单位[编号].五行珠.土 = 1
                             local 境界 = self:取指定法宝(编号,"普渡")
                             if 境界 and self.参战单位[编号].奇经八脉.智念 and 取随机数()<= self:取指定法宝(编号,"普渡",1)*2 then
                                   local 五行 = {"木","金","火","水"}
                                   local 珠子 = 五行[取随机数(1,4)]
                                   self.参战单位[编号].五行珠[珠子] = 1

                             end
                             if self.参战单位[编号].奇经八脉.顿悟 then
                                  local  五行加成 = 0
                                  for n,v in pairs(self.参战单位[编号].五行珠) do
                                       if self.参战单位[编号].五行珠[n] >0 then
                                          五行加成 = 五行加成 + 1
                                       end
                                  end
                                  self:增加愤怒(编号,五行加成)
                            end
                            if self.参战单位[编号].奇经八脉.无尽 then
                                self.参战单位[编号].伤害 = self.参战单位[编号].伤害 + 6
                            end
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].奇经八脉.缘起 and self:取是否单独门派(编号) then
                            local 判断 = 0
                            for k,v in pairs(self.参战单位) do
                                if v.队伍~=self.参战单位[编号].队伍 and v.法术状态.紧箍咒 then
                                    判断 = 判断+8
                                end
                            end
                            if 取随机数()<=判断 then
                                返回.次数 = 1
                            end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[编号].奇经八脉.法咒 then
                            local 几率 = 15
                            if 数据.次数 == 1 and self.参战单位[编号].法术状态.莲心剑意 then
                                几率 = 40
                            end
                            if 取随机数()<=几率 then
                                基础.结果系数 = 基础.结果系数+0.5
                            end
                        end
                        local 境界 = self:取指定法宝(编号,"金刚杵",1)
                        if 境界 and self.参战单位[编号].门派 == "普陀山"
                            and self.参战单位[编号].类型=="角色" then
                            基础.结果系数= 基础.结果系数 + 境界*0.025
                        end
                        if self.参战单位[编号].神器技能 and self.参战单位[编号].神器技能.名称=="璇华" then
                                基础.结果系数= 基础.结果系数+self.参战单位[编号].神器技能.等级*0.1
                        end
                        if self:取五行克制("土",self.参战单位[目标].防御五行)  then
                             基础.结果系数=基础.结果系数+0.5
                        end
                        if self.参战单位[编号].符石技能.行云流水 then
                            基础.结果伤害= 基础.结果伤害 +self.参战单位[编号].符石技能.行云流水
                        end
                        if self.参战单位[编号].奇经八脉.秘术 then
                            self.参战单位[目标].奇经八脉秘术前置 = 1
                        end
            end,
        },---巨岩破-----
  苍茫树={
            类型 = "固伤",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"苍茫树")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self:取玩家战斗() then
                        return 1
                    end
                    return math.floor(等级/40)+2
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if  self.参战单位[编号].奇经特效.五行珠 then
                             self.参战单位[编号].五行珠.木 = 1
                             local 境界 = self:取指定法宝(编号,"普渡")
                             if 境界 and self.参战单位[编号].奇经八脉.智念 and 取随机数()<= self:取指定法宝(编号,"普渡",1)*2 then
                                   local 五行 = {"水","金","火","土"}
                                   local 珠子 = 五行[取随机数(1,4)]
                                   self.参战单位[编号].五行珠[珠子] = 1
                             end
                             if self.参战单位[编号].奇经八脉.顿悟 then
                                  local  五行加成 = 0
                                  for n,v in pairs(self.参战单位[编号].五行珠) do
                                       if self.参战单位[编号].五行珠[n] >0 then
                                          五行加成 = 五行加成 + 1
                                       end
                                  end
                                  self:增加愤怒(编号,五行加成)
                            end
                            if self.参战单位[编号].奇经八脉.无尽 then
                                self.参战单位[编号].伤害 = self.参战单位[编号].伤害 + 6
                            end
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].奇经八脉.缘起 and self:取是否单独门派(编号) then
                            local 判断 = 0
                            for k,v in pairs(self.参战单位) do
                                if v.队伍~=self.参战单位[编号].队伍 and v.法术状态.紧箍咒 then
                                    判断 = 判断+8
                                end
                            end
                            if 取随机数()<=判断 then
                                返回.次数 = 1
                            end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[编号].奇经八脉.法咒 then
                            local 几率 = 15
                            if 数据.次数 == 1 and self.参战单位[编号].法术状态.莲心剑意 then
                                几率 = 40
                            end
                            if 取随机数()<=几率 then
                                基础.结果系数 = 基础.结果系数+0.5
                            end
                        end
                        local 境界 = self:取指定法宝(编号,"金刚杵",1)
                        if 境界 and self.参战单位[编号].门派 == "普陀山"
                            and self.参战单位[编号].类型=="角色" then
                            基础.结果系数= 基础.结果系数 + 境界*0.025
                        end
                        if self.参战单位[编号].神器技能 and self.参战单位[编号].神器技能.名称=="璇华" then
                                基础.结果系数= 基础.结果系数+self.参战单位[编号].神器技能.等级*0.1
                        end
                        if self:取五行克制("木",self.参战单位[目标].防御五行)  then
                             基础.结果系数=基础.结果系数+0.5
                        end
                        if self.参战单位[编号].符石技能.行云流水 then
                            基础.结果伤害= 基础.结果伤害 +self.参战单位[编号].符石技能.行云流水
                        end
                        if self.参战单位[编号].奇经八脉.秘术 then
                            self.参战单位[目标].奇经八脉秘术前置 = 1
                        end
            end,
        },---苍茫树-----
  地裂火={
            类型 = "固伤",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"地裂火")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self:取玩家战斗() then
                        return 1
                    end
                    return math.floor(等级/40)+2
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if  self.参战单位[编号].奇经特效.五行珠 then
                             self.参战单位[编号].五行珠.火 = 1
                             local 境界 = self:取指定法宝(编号,"普渡")
                             if 境界 and self.参战单位[编号].奇经八脉.智念 and 取随机数()<= self:取指定法宝(编号,"普渡",1)*2 then
                                   local 五行 = {"木","金","水","土"}
                                   local 珠子 = 五行[取随机数(1,4)]
                                   self.参战单位[编号].五行珠[珠子] = 1
                             end
                             if self.参战单位[编号].奇经八脉.顿悟 then
                                  local  五行加成 = 0
                                  for n,v in pairs(self.参战单位[编号].五行珠) do
                                       if self.参战单位[编号].五行珠[n] >0 then
                                          五行加成 = 五行加成 + 1
                                       end
                                  end
                                  self:增加愤怒(编号,五行加成)
                            end
                            if self.参战单位[编号].奇经八脉.无尽 then
                                self.参战单位[编号].伤害 = self.参战单位[编号].伤害 + 6
                            end
                        end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].奇经八脉.缘起 and self:取是否单独门派(编号) then
                            local 判断 = 0
                            for k,v in pairs(self.参战单位) do
                                if v.队伍~=self.参战单位[编号].队伍 and v.法术状态.紧箍咒 then
                                    判断 = 判断+8
                                end
                            end
                            if 取随机数()<=判断 then
                                返回.次数 = 1
                            end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[编号].奇经八脉.法咒 then
                            local 几率 = 15
                            if 数据.次数 == 1 and self.参战单位[编号].法术状态.莲心剑意 then
                                几率 = 40
                            end
                            if 取随机数()<=几率 then
                                基础.结果系数 = 基础.结果系数+0.5
                            end
                        end
                        local 境界 = self:取指定法宝(编号,"金刚杵",1)
                        if 境界 and self.参战单位[编号].门派 == "普陀山"
                            and self.参战单位[编号].类型=="角色" then
                            基础.结果系数= 基础.结果系数 + 境界*0.025
                        end
                        if self.参战单位[编号].神器技能 and self.参战单位[编号].神器技能.名称=="璇华" then
                                基础.结果系数= 基础.结果系数+self.参战单位[编号].神器技能.等级*0.1
                        end
                        if self:取五行克制("火",self.参战单位[目标].防御五行)  then
                             基础.结果系数=基础.结果系数+0.5
                        end
                        if self.参战单位[编号].符石技能.行云流水 then
                            基础.结果伤害= 基础.结果伤害 +self.参战单位[编号].符石技能.行云流水
                        end
                        if self.参战单位[编号].奇经八脉.秘术 then
                            self.参战单位[目标].奇经八脉秘术前置 = 1
                        end
            end,
        },---地裂火-----
  夺命咒={
            类型 = "固伤",
            门派 = "无底洞",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,20,数量,"夺命咒")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self:取玩家战斗() then
                        return 1
                    end
                    return math.floor(等级/40)+2
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].神话词条.烛照九幽
                           and 取随机数()<=self.参战单位[编号].神话词条.烛照九幽*12 then
                            返回.次数=1
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                    if self.参战单位[编号].符石技能.销魂噬骨 then
                       基础.结果伤害= 基础.结果伤害 +self.参战单位[编号].符石技能.销魂噬骨
                    end
                    local 回合 =true
                    local 几率 = 25
                    if self.参战单位[编号].奇经八脉.聚魂 then
                        几率 = 13
                    end
                     if self.参战单位[编号].奇经特效.裂魂 and self.参战单位[编号].奇经八脉.余咒 and
                        self.参战单位[目标].类型=="角色" and 取随机数()<=几率 then
                        self.参战单位[目标].魂魄离体 = 1
                        if self.参战单位[编号].奇经八脉.魂守 then
                           self.参战单位[目标].魂魄离体 = 2
                        end
                        if self.参战单位[编号].奇经八脉.踏魄 then
                           self.参战单位[目标].奇经八脉踏魄 = 1
                        end
                        回合 =false
                    end
                    if self.参战单位[目标].魂魄离体 and 回合 then
                        if self.参战单位[目标].魂魄离体==2 then
                            基础.结果系数 =基础.结果系数  + 0.15
                        end
                        if self.参战单位[编号].奇经八脉.羽裂 then
                           基础.结果系数  =基础.结果系数  + 0.15
                        end
                       self.参战单位[目标].魂魄离体 = nil
                       self.参战单位[目标].奇经八脉踏魄 = nil
                    end
                    if self.参战单位[编号].奇经八脉.弥愤 or self.参战单位[编号].奇经八脉.魂守 or self.参战单位[编号].奇经八脉.刺骨 then
                        基础.结果系数 = 基础.结果系数 + 1
                    end
                    if self.参战单位[编号].奇经八脉.深刻 and self.参战单位[目标].类型=="角色" then
                       self.参战单位[编号].奇经八脉深刻追魂刺=1
                    end
                    if self.参战单位[编号].奇经八脉深刻夺命咒 then
                        基础.结果伤害 = 基础.结果伤害 +70
                    end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                       self.参战单位[编号].奇经八脉深刻夺命咒 =nil
            end,
        },---夺命咒-----
  追魂刺={
            类型 = "固伤",
            门派 = "无底洞",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    if self.参战单位[编号].愤怒<20 and not self.参战单位[编号].奇经八脉.弥愤 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/该技能需20点愤怒才可释放")
                        return false
                    end
                    if self:魔法消耗(编号,50,数量,"追魂刺") then
                        if not self.参战单位[编号].奇经八脉.弥愤 then
                            self:愤怒消耗(编号,10,"追魂刺")
                        end
                        return true
                    else
                        return false
                    end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        local 回合 =true
                        if self.参战单位[编号].奇经特效.裂魂 then
                            local 几率 = 100
                            if self.参战单位[编号].奇经八脉.聚魂 then
                                几率 = 50
                            end
                            if self.参战单位[目标].类型=="角色" and 取随机数()<=几率 then
                                self.参战单位[目标].魂魄离体 = 1
                                if self.参战单位[编号].奇经八脉.魂守 then
                                    self.参战单位[目标].魂魄离体 = 2
                                end
                                if self.参战单位[编号].奇经八脉.踏魄 then
                                    self.参战单位[目标].奇经八脉踏魄 = 1
                                end
                                回合 =false
                            else
                                基础.结果系数 = 基础.结果系数 + 0.1
                            end
                        end
                        if self.参战单位[目标].魂魄离体 and 回合 then
                            基础.结果系数 = 基础.结果系数 + 0.1
                            if self.参战单位[目标].魂魄离体 == 2 then
                                基础.结果系数 = 基础.结果系数 + 0.05
                            end
                            if self.参战单位[编号].奇经八脉.羽裂 then
                                基础.结果系数 = 基础.结果系数 + 0.05
                            end
                            self.参战单位[目标].魂魄离体 = nil
                            self.参战单位[目标].奇经八脉踏魄 = nil
                        end
                        if self.参战单位[编号].奇经八脉.弥愤 or self.参战单位[编号].奇经八脉.魂守 then
                            基础.结果系数 = 基础.结果系数 + 1
                        end
                        if self.参战单位[编号].奇经八脉.刺骨 then
                            if self.参战单位[目标].类型~="角色" then
                                基础.结果系数 = 基础.结果系数 + 1
                            else
                                基础.结果系数 = 基础.结果系数 + 1.12
                            end
                        end
                        if self.参战单位[编号].奇经八脉.分魄 then
                            基础.结果系数 = 基础.结果系数 + 0.1
                        end
                        if self.参战单位[编号].奇经八脉.鬼袭 and self.参战单位[目标].类型~="角色" then
                            基础.结果系数 = 基础.结果系数 + 0.5
                        end
                        if self.参战单位[编号].奇经八脉.深刻 and self.参战单位[目标].类型=="角色" then
                            self.参战单位[编号].奇经八脉深刻夺命咒=1
                        end
                        if self.参战单位[编号].奇经八脉深刻追魂刺 then
                            基础.结果伤害 = 基础.结果伤害 + 70
                        end
                        if self.参战单位[编号].奇经八脉.纠缠 and 取随机数()<=50 then
                            self:增加愤怒(编号,4)
                        end
            end,
            死亡处理 = function(self,编号,目标)
                        if self.参战单位[编号].奇经八脉.牵动 and self.参战单位[目标].类型=="角色" then
                            self.参战单位[目标].魂魄离体 = 1
                            if self.参战单位[编号].奇经八脉.魂守 then
                                self.参战单位[目标].魂魄离体 = 2
                            end
                            if self.参战单位[编号].奇经八脉.踏魄 then
                                self.参战单位[目标].奇经八脉踏魄 = 1
                            end
                        end
                        return 0
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                       self.参战单位[编号].奇经八脉深刻追魂刺 = nil
            end,
        },---追魂刺-----
-------------------恢复技能
  归元咒={
            类型 = "恢复",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.目标=编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  local 魔法=self.参战单位[编号].等级*2+(self.参战单位[编号].法伤*0.1)
                  return self:魔法消耗(编号,魔法,数量,"归元咒")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.目标=编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 基础.初始伤害 + math.floor(等级*2 + self.参战单位[编号].法伤*0.1)
                        if self.参战单位[编号].奇经八脉.吐纳 and self.参战单位[编号].魔法>=self.参战单位[编号].最大气血*0.125 then
                          基础.结果伤害 = 基础.结果伤害 + self.参战单位[编号].最大气血*0.5
                          基础.扣除魔法 = 0.125
                       end
            end,
        },---归元咒--完成
  乾天罡气={
            类型 = "恢复",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  if self.参战单位[编号].气血 < self.参战单位[编号].最大气血*0.2 then
                        return false
                  end
                  return true
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.目标=编号
            end,


            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        local 气血= math.floor(等级*2+self.参战单位[编号].法伤*0.1)
                        local 魔法=math.floor(气血 * 0.5)
                         if self.参战单位[编号].奇经八脉.吐纳 and self.参战单位[编号].气血>=self.参战单位[编号].最大气血*0.5 then
                            local 现有气血 = self.参战单位[编号].气血
                            local  扣除气血 = math.floor(现有气血 - self.参战单位[编号].最大气血*0.5)
                             if   气血 <= 扣除气血 then
                                 气血 = 扣除气血
                                 魔法 =math.floor(魔法 + 扣除气血*0.25)
                              else
                                 气血=扣除气血
                                 魔法=math.floor(扣除气血*0.5)
                              end
                         end
                         基础.增加魔法=魔法
                         self.参战单位[编号].气血 = self.参战单位[编号].气血-气血
                         self.战斗流程[数据.流程].扣除气血 = 气血
            end,
        },---乾天罡气--完成
  推拿={
            类型 = "恢复",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,40,1,"推拿")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0024 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        if self.参战单位[编号].奇经八脉.仁心 then
                             基础.结果系数 = 基础.结果系数 + 0.8
                             self.参战单位[编号].奇经八脉仁心 = 1
                        end
                        基础.造成伤势={比例=1}
            end,
        },---推拿--完成
  活血={
            类型 = "恢复",
            门派 = "化生寺",
            冷却 = function(self,编号)
                    if self.参战单位[编号].奇经八脉.化瘀 then
                          return {开始=0,使用=8}
                    end
                    return {开始=0,使用=0}
            end,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,70,1,"活血")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0024 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        if self.参战单位[编号].奇经八脉.妙手 then
                           基础.结果系数 = 基础.结果系数 + 0.25
                        end
                        if self.参战单位[编号].奇经八脉.化瘀 then
                           基础.结果系数 = 基础.结果系数 + 1.2
                        end
                        if self.参战单位[编号].奇经八脉.仁心 then
                           基础.结果系数 = 基础.结果系数 + 0.8
                           self.参战单位[编号].奇经八脉仁心 = 1
                        end
                        if self.参战单位[编号].奇经特效.佛眷 and not self.参战单位[编号].奇经八脉.仁心 and not self.参战单位[编号].奇经八脉.化瘀 then
                          self.参战单位[目标].佛眷加成 = 3
                        end
                          基础.造成伤势={比例=1}
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        self.参战单位[编号].聚气加成=nil
                       if self.参战单位[编号].奇经八脉.仁心 then
                          self.参战单位[编号].奇经八脉仁心 = 1
                       end
                       if self.参战单位[编号].奇经八脉.佛显 then
                          if self.参战单位[编号].奇经八脉佛显 == nil then
                             self.参战单位[编号].奇经八脉佛显 = 0
                          end
                          self.参战单位[编号].奇经八脉佛显 = self.参战单位[编号].奇经八脉佛显 + 1
                          if self.参战单位[编号].奇经八脉佛显>=3 then
                             self.参战单位[编号].奇经八脉佛显 = nil
                             self.参战单位[编号].奇经八脉佛显加成 = 1
                          end
                       end
            end,
        },---活血--完成
  复苏={
            类型 = "恢复",
            门派 = "盘丝洞",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,60,数量,"复苏")
            end,
            添加状态= function(self,目标,编号,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/30)+2
                      状态.等级=等级
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环4
                        基础.取消状态=self:取门派封印法术("天宫")
                        基础.添加状态={名称="复苏"}
            end,
        },---复苏--完成
  推气过宫={--------------------恢复例子
            类型 = "恢复",
            门派 = "化生寺",
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/40)+2
                    if self.参战单位[编号].奇经八脉.虔诚 and 取随机数()<=50 then
                       数量 = 数量 + 1
                    end
                    return 数量
            end,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,100,1,"推气过宫")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0021 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        if self.参战单位[编号].奇经八脉.天照 then
                            self.参战单位[目标].奇经八脉天照 = 1
                        end
                        if self.参战单位[编号].门派=="化生寺" and self.参战单位[编号].神话词条 and self.参战单位[编号].神话词条.十方光明 then
                                if  取随机数()<=self.参战单位[编号].神话词条.十方光明*12 then
                                    基础.固定结果 = self.参战单位[目标].最大气血
                                else
                                    基础.结果系数 = 基础.结果系数 + self.参战单位[编号].神话词条.十方光明*0.15
                                end
                        end
                        if self.参战单位[编号].奇经八脉.佛佑 and not self.参战单位[编号].奇经八脉佛佑 then
                            基础.添加状态={
                              名称 = "金刚护体",
                              回合 = 3
                            }
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                          self.参战单位[编号].聚气加成=nil
                          self.参战单位[编号].奇经八脉仁心 = nil
                          self.参战单位[编号].奇经八脉佛显加成=nil
                          if self.参战单位[编号].奇经八脉.化瘀 then
                               self.参战单位[编号].活血 = nil
                          end
                          if self.参战单位[编号].奇经八脉.佛佑 then
                              self.参战单位[编号].奇经八脉佛佑 =1
                          end
            end,
            连击处理 = function(self,编号,等级,返回) -------循环结束后
                        if self.参战单位[编号].门派=="化生寺"
                           and self.参战单位[编号].神话词条.万佛朝宗
                           and 取随机数()<=self.参战单位[编号].神话词条.万佛朝宗*18 then
                            返回.次数=1
                        end
            end,
        },---推气过宫--完成
  救死扶伤={
            类型 = "恢复",
            门派 = "化生寺",
            冷却 = function(self,编号)
                    if self.参战单位[编号].奇经八脉.心韧 then
                        return {开始=4,使用=8}
                    end
                    return {开始=0,使用=0}
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,100,1,"救死扶伤")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0024 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        if self.参战单位[编号].奇经八脉.天照 then
                            self.参战单位[目标].奇经八脉天照 = 1
                        end
                        if self.参战单位[编号].奇经八脉.心韧 then
                            基础.结果系数 = 基础.结果系数 + 1
                        end
                        基础.造成伤势={比例=1}

            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                         self.参战单位[编号].奇经八脉仁心 = nil
                         self.参战单位[编号].奇经八脉佛显加成=nil
            end,
        },--救死扶伤
  解毒={
            类型 = "恢复",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,40,数量,"解毒")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.取消状态 = {"尸腐毒","毒","暗器毒","雾杀"}
            end,
        },--解毒
  舍身取义={
            类型 = "恢复",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,500,数量,"舍身取义")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.初始伤害 = 1
                         基础.固定结果=self.参战单位[目标].最大气血
            end,
        },--舍身取义
  妙悟={
            类型 = "恢复",
            门派 = "化生寺",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=2}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"妙悟")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0024 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
            end,
        },--妙悟
  百毒不侵={
            类型 = "恢复",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,30,数量,"百毒不侵")
            end,
            添加状态= function(self,目标,编号,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/30)+2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.取消状态 = {"尸腐毒","毒","暗器毒","雾杀"}
                         基础.添加状态 = {目标=目标}
            end,
        },--百毒不侵
  寡欲令={
            类型 = "恢复",
            门派 = "阴曹地府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"寡欲令")
            end,
            添加状态= function(self,目标,编号,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/30)+2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                      基础.取消状态=self:取门派封印法术("盘丝洞")
                      基础.添加状态={名称="寡欲令"}
            end,
        },--百毒不侵
  宁心={
            类型 = "恢复",
            门派 = "天宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,30,数量,"宁心")
            end,
            添加状态= function(self,目标,编号,等级,境界,状态)  ---名称 目标 编号
                       状态.回合=math.floor(等级/30)+2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.取消状态=self:取门派封印法术("女儿村")
                         基础.添加状态={名称="宁心"}
            end,
        },--宁心
  驱魔={
            类型 = "恢复",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,45,数量,"驱魔")
            end,
            添加状态= function(self,目标,编号,等级,境界,状态)  ---名称 目标 编号
                       状态.回合=math.floor(等级/30)+2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.取消状态=self:取门派封印法术("方寸山")
                         基础.添加状态={名称="驱魔"}
            end,
        },--驱魔
  驱尸={
            类型 = "恢复",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,40,数量,"驱尸")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.取消状态 = {"尸腐毒","毒","暗器毒","雾杀"}
            end,
        },--驱尸
  三花聚顶={
            类型 = "恢复",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    if self.参战单位[编号].气血<self.参战单位[编号].最大气血*0.2 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用三花聚顶")
                            return false
                    end
                    return true
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        前置.目标=编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         local 气血= math.floor(等级*2+self.参战单位[编号].法伤*0.1)
                         魔法 = 气血*0.5
                         self:增加魔法(编号,魔法)
                         self.参战单位[编号].气血=self.参战单位[编号].气血-气血
                         self.战斗流程[数据.流程].扣除气血=气血
            end,
        },--三花聚顶
  清风望月={
            类型 = "恢复",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=4}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,40,"清风望月")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.取消状态={}
                        基础.添加状态={名称="疯狂",目标=编号}
                        for i,v in ipairs(self.技能数据.封印) do
                            if self.参战单位[目标].法术状态[v] and v~=基础.取消状态[1] and #基础.取消状态<2 then
                                table.insert(基础.取消状态, v)
                            end
                        end
                        基础.无需状态 = 1
            end,
        },--清风望月
  解封={
            类型 = "恢复",
            门派 = "龙宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,60,数量,"解封")
            end,

            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.取消状态=self:取门派封印法术("女儿村")
            end,
        },--解封
  清心={
            类型 = "恢复",
            门派 = "龙宫",
            目标 = function(self,编号,目标)
                        return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                        return self:魔法消耗(编号,30,数量,"清心")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.取消状态={"尸腐毒","毒","暗器毒","雾杀"}
            end,
        },--清心
  星月之惠={
            类型 = "恢复",
            门派 = "神木林",
            目标 = function(self,编号,目标)
                        return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                        return self:魔法消耗(编号,50,数量,"星月之惠")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.初始系数 = 1 + 0.0024 * 等级^2/等级
                         基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                         基础.造成伤势={比例=1}
            end,
        },--星月之惠
  滋养={
            类型 = "恢复",
            门派 = "神木林",
            奇经特效=1,
            目标 = function(self,编号,目标)
                        return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                        return self:魔法消耗(编号,50,数量,"滋养")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.初始系数 = 1 + 0.0024 * 等级^2/等级
                         基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                         基础.造成伤势={比例=1}
                          if self.参战单位[编号].奇经八脉.补血 and not self.参战单位[编号].奇经八脉补血 and 数据.次数==1 then
                             self.参战单位[编号].奇经八脉补血前置 = 目标
                          end
            end,
            循环结束 = function(self,编号,目标,伤害,等级,数据,类型)-----循环尾部
                            if self.参战单位[编号].奇经八脉.反哺 then
                                 self:增加气血(编号,math.floor(伤害*0.1))
                                 self.战斗流程[数据.流程].增加气血=math.floor(伤害*0.1)
                            end
            end,
        },--滋养
  自在心法={
            类型 = "恢复",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                        return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                        return self:魔法消耗(编号,30,1,"自在心法")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        self.参战单位[编号].八脉道衍 = 0
                        if self.参战单位[编号].奇经八脉.道衍 and self:取是否单独门派(编号) then
                            for k,v in pairs(self.参战单位) do
                                if v.队伍==self.参战单位[编号].队伍 then
                                    if v.法术状态.普渡众生 then
                                      self.参战单位[编号].八脉道衍 = self.参战单位[编号].八脉道衍 + 1
                                    end
                                else
                                    if self.参战单位[编号].经脉流派 =="五行咒师" and self.参战单位[编号].法术状态.莲心剑意 and v.法术状态.紧箍咒 then
                                        self.参战单位[编号].八脉道衍 = self.参战单位[编号].八脉道衍 + 1
                                    end
                                end
                            end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[目标].法术状态.普渡众生 then
                            基础.初始伤害 =self.参战单位[目标].法术状态.普渡众生.等级
                            local 回合 = self.参战单位[目标].法术状态.普渡众生.回合
                            if 回合>4 then
                                回合=4
                            end
                            if self.参战单位[编号].八脉道衍>0 then
                                基础.结果系数 = 基础.结果系数 + self.参战单位[编号].八脉道衍*0.06
                            end
                            基础.造成伤势={比例=1}
                            基础.取消状态="普渡众生"
                        end
                        if self.参战单位[编号].八脉道衍 > 0 then
                            local 添加 = DeepCopy(self.计算属性)
                            添加.初始伤害 = math.floor(等级*4+self.参战单位[编号].法伤*0.1)
                            战斗技能.普渡众生.基础计算(self,编号,目标,等级,数据,添加,"治疗")
                            local 结果=self:取基础治疗计算(编号,目标,名称,等级,添加)
                            数据.添加状态={名称="普渡众生",境界=结果.气血}
                            if self.参战单位[编号].经脉流派=="莲台仙子" then
                                self.参战单位[编号].八脉道衍 = self.参战单位[编号].八脉道衍 * 2
                            end
                            if self.参战单位[编号].八脉道衍>=8 then self.参战单位[编号].八脉道衍 = 8 end
                            数据.添加状态.回合 = self.参战单位[编号].八脉道衍
                            self.参战单位[编号].自在心法 = 数据.添加状态.回合 + 1
                        end

            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        self.参战单位[编号].八脉道衍 = nil
            end,
        },--自在心法
  无穷妙道={
            类型 = "恢复",
            门派 = "凌波城",
            目标 = function(self,编号,目标)
                        return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,60,数量,"无穷妙道")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.取消状态=self:取门派封印法术("无底洞")
            end,
        },--无穷妙道
  地涌金莲={
            类型 = "恢复",
            门派 = "无底洞",
            目标 = function(self,编号,目标)
                    return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if self.参战单位[编号].奇经特效.金莲  then
                       local 加成 = 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("地冥妙法")
                       if 加成>=45 and 加成<105 then
                          数量 = 数量 + 1
                       elseif 加成>=105 then
                              数量 = 数量 + 2
                       end
                    end
                    if  self.参战单位[编号].奇经八脉陷阱加成 then
                         数量= 数量 + 1
                         self.参战单位[编号].奇经八脉陷阱加成 = nil
                    end
                    if  self.参战单位[编号].燃血术加成 and self.参战单位[编号].奇经八脉.华光 then
                         数量= 数量 + 1
                    end
                    if 数量>=7 then 数量 = 7 end
                    if self.参战单位[编号].门派=="无底洞" and self.参战单位[编号].神话词条 and self.参战单位[编号].神话词条.藕断丝连
                        and 取随机数()<=self.参战单位[编号].神话词条.藕断丝连*12 then
                          数量 = 数量 + self.参战单位[编号].神话词条.藕断丝连
                    end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"地涌金莲")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        self.参战单位[编号].燃血术加成 = nil
                        self.参战单位[编号].焕生咒加成 = nil
                        基础.初始系数 = 1 + 0.0016 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        基础.造成伤势={比例=1}
                        if self.参战单位[编号].奇经八脉.涌泉 and 数据.次数==1 then
                           基础.初始伤害 = 基础.初始伤害 +  玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("地冥妙法") * 6
                        end
                        if self.参战单位[编号].奇经八脉.疗愈   and self:取装备五行(编号,4)~="无" then
                             local 玩家五行 = self:取装备五行(编号,4)
                             local 队友衣服 = self:取装备五行(目标,4)
                             if 玩家五行 == 队友衣服 then
                                基础.初始系数 = 基础.初始系数+0.08
                             end
                        end
            end,
            循环结束 = function(self,编号,目标,伤害,等级,数据,类型)-----循环尾部
                        local 添加值 = 0
                        if self.参战单位[编号].燃血术加成 then
                            if self.参战单位[编号].奇经八脉.血潮 then
                                添加值 = 添加值 + 伤害 * 2
                            else
                                添加值 = 添加值 + 伤害
                            end
                        end
                        if self.参战单位[编号].奇经八脉.风墙 and 取随机数()<=30 then
                             添加值 = 添加值 + math.floor(伤害 * 0.5)
                        end
                        if self.参战单位[目标].神器技能 and self.参战单位[目标].神器技能.名称=="情思悠悠" then
                             添加值 = 添加值 + math.floor(self.参战单位[目标].神器技能.等级*0.1*伤害)
                        end
                        if 添加值>0 then
                            数据.添加状态={名称="护盾",等级=添加值}
                        end
            end,
        },--地涌金莲
  焕生咒={
            类型 = "恢复",
            门派 = "无底洞",
            奇经特效=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,100,数量,"焕生咒")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                        self.参战单位[编号].焕生咒加成 = 0
                        for k,v in pairs(self.参战单位) do
                            if v.队伍 == v.队伍 and v.气血==v.最大气血 then
                                self.参战单位[编号].焕生咒加成 = self.参战单位[编号].焕生咒加成 + 60
                                v.气血 = v.气血 - 30
                            end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0019 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1 + self.参战单位[编号].焕生咒加成)
                        基础.造成伤势={比例=1}


            end,
            循环结束 = function(self,编号,目标,伤害,等级,数据,类型)-----循环尾部
                        if self.参战单位[编号].燃血术加成 then
                            if self.参战单位[编号].奇经八脉.血潮 then
                                table.insert(数据.添加状态 , {名称="护盾",等级=伤害*2})
                            else
                                table.insert(数据.添加状态 , {名称="护盾",等级=伤害})
                            end
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                         self.参战单位[编号].燃血术加成 = nil
                         self.参战单位[编号].焕生咒加成 = nil
            end,
        },--焕生咒
  绝处逢生={
            类型 = "恢复",
            门派 = "无底洞",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                    return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,100,数量,"绝处逢生")
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=5}
            end,
            添加状态= function(self,目标,编号,等级,境界,状态)  ---名称 目标 编号
                       状态.回合=4
                       状态.类型=2
                       状态.速度=math.floor(self.参战单位[编号].速度*0.1)
            end,
            解除状态 = function(self,编号,目标,名称,数据)
                        数据.不可解除 = 1
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                       前置.目标=编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 =1
                        基础.固定结果 = math.floor((self.参战单位[目标].最大气血-self.参战单位[目标].气血)*0.5)
                        基础.造成伤势={比例=1}
                        基础.添加状态={名称="绝处逢生",目标=编号}

            end,
        },--绝处逢生
   百草古树长青={
            类型 = "恢复",
            门派 = "神木林",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self:神木灵药判断(self.参战单位[编号],{红=1,蓝=1,蓝=1}) then
                        return false
                    end
                    return self:魔法消耗(编号,100,数量,"百草古树长青")
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=10}
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0027 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1) + math.floor(玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("万灵诸念") *8)
                        if self.参战单位[编号].奇经八脉.补血 and not self.参战单位[编号].奇经八脉补血 and 数据.次数==1 then
                             self.参战单位[编号].奇经八脉补血前置 = 目标
                        end
            end,
            循环结束 = function(self,编号,目标,伤害,等级,数据,类型)-----循环尾部
                        数据.添加状态={名称="护盾",等级=伤害}
                        if self.参战单位[编号].奇经八脉.反哺 then
                            self:增加气血(编号,math.floor(伤害*0.1))
                            self.战斗流程[数据.流程].增加气血=math.floor(伤害*0.1)
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                                self:神木消耗灵药(self.参战单位[编号],{红=1,蓝=1,蓝=1})
            end,
        },---百草古树长青
   百草回春龙沙={
            类型 = "恢复",
            门派 = "神木林",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self:神木灵药判断(self.参战单位[编号],{红=1,蓝=1,蓝=1}) then
                        return false
                    end
                    return self:魔法消耗(编号,100,数量,"百草回春龙沙")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=10}
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.解除状态= {"摧心","瘴气","黄泉之息","轰鸣","破甲术","停陷术","凝滞术",
                                        "河东狮吼","锢魂术","放下屠刀","腾雷","冰川怒","威慑","夺魄令",
                                        "煞气诀","锋芒毕露","诱袭","反间之计","一笑倾城","百万神兵","错乱",
                                        "镇妖","莲步轻舞","如花解语","魔音摄魂"}
                        if self.参战单位[编号].奇经八脉.补血 and not self.参战单位[编号].奇经八脉补血 and 数据.次数==1 then
                             self.参战单位[编号].奇经八脉补血前置 = 目标
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                                self:神木消耗灵药(self.参战单位[编号],{红=1,蓝=1,蓝=1})
            end,
        },---百草回春龙沙
  百草十香={
            类型 = "恢复",
            门派 = "神木林",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self:神木灵药判断(self.参战单位[编号],{红=1}) then
                        return false
                    end
                    return self:魔法消耗(编号,50,数量,"百草十香")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.解除状态= {"反间之计","疯狂","催眠符"}
                        if self.参战单位[编号].奇经八脉.补血 and not self.参战单位[编号].奇经八脉补血 and 数据.次数==1 then
                             self.参战单位[编号].奇经八脉补血前置 = 目标
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                                self:神木消耗灵药(self.参战单位[编号],{红=1})
            end,
        },---百草十香
  百草定神={
            类型 = "恢复",
            门派 = "神木林",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self:神木灵药判断(self.参战单位[编号],{蓝=1}) then
                        return false
                    end
                    return self:魔法消耗(编号,50,数量,"百草定神")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.解除状态= {"催化","雷浪穿云","画地为牢","顺势而为","落花成泥","狂怒","重创","爪印"}
                        if self.参战单位[编号].奇经八脉.补血 and not self.参战单位[编号].奇经八脉补血 and 数据.次数==1 then
                             self.参战单位[编号].奇经八脉补血前置 = 目标
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                                self:神木消耗灵药(self.参战单位[编号],{蓝=1})
            end,
        },---百草定神
  百草红雪={
            类型 = "恢复",
            门派 = "神木林",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self:神木灵药判断(self.参战单位[编号],{黄=1}) then
                        return false
                    end
                    return self:魔法消耗(编号,50,数量,"百草红雪")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.解除状态= {"毒","暗器毒","尸腐毒 ","尸腐毒","雾杀"}
                        if self.参战单位[编号].奇经八脉.补血 and not self.参战单位[编号].奇经八脉补血 and 数据.次数==1 then
                             self.参战单位[编号].奇经八脉补血前置 = 目标
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                                self:神木消耗灵药(self.参战单位[编号],{黄=1})
            end,
        },---百草红雪
----------------------------复活技能
   百草神木复苏={
            类型 = "复活",
            门派 = "神木林",
            奇经特效=1,
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self:神木灵药判断(self.参战单位[编号],{红=5,蓝=5,蓝=5}) then
                        return false
                    end
                    return self:魔法消耗(编号,300,数量,"百草神木复苏")
            end,
            前置流程 = function(self,编号,等级,前置,类型)  ---------循环开始前
                       前置.目标组={}
                        for k,v in pairs(self.参战单位) do
                           if self:取是否复活(编号,k,"百草神木复苏") then
                              table.insert(前置.目标组,k)
                           end
                        end
                        前置.目标数 = #前置.目标组
                        if 前置.目标组[1] then
                          前置.目标 = 前置.目标组[1]
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0024 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        基础.造成伤势={比例=1}
                        if self.参战单位[编号].奇经八脉.补血 and not self.参战单位[编号].奇经八脉补血 and 数据.次数==1 then
                             self.参战单位[编号].奇经八脉补血前置 = 目标
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                             self:神木消耗灵药(self.参战单位[编号],{红=5,蓝=5,蓝=5})
            end,
        },---百草神木复苏
   百草复苏={
            类型 = "复活",
            门派 = "神木林",
            奇经特效=1,
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self:神木灵药判断(self.参战单位[编号],{红=1,蓝=1,蓝=1}) then
                        return false
                    end
                    return self:魔法消耗(编号,150,数量,"百草复苏")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0027 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        基础.造成伤势={比例=1}
                        if self.参战单位[编号].奇经八脉.补血 and not self.参战单位[编号].奇经八脉补血 and 数据.次数==1 then
                             self.参战单位[编号].奇经八脉补血前置 = 目标
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                                self:神木消耗灵药(self.参战单位[编号],{红=1,蓝=1,蓝=1})
            end,
        },---百草复苏
  我佛慈悲={
            类型 = "复活",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,150,数量,"我佛慈悲")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0024 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        if self.参战单位[编号].奇经八脉.佛性 then
                          基础.结果系数 = 基础.结果系数 + 1.2
                        end
                        基础.造成伤势={比例=1}

            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                          self.参战单位[编号].聚气加成=nil
            end,
        },--我佛慈悲
   还阳术={
            类型 = "复活",
            门派 = "阴曹地府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,150,数量,"还阳术")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0019 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        if 基础.初始伤害>self.参战单位[目标].等级*20 then
                            基础.初始伤害=self.参战单位[目标].等级*20+100
                        end
                        基础.造成伤势={比例=1}
                        if not self.参战单位[目标].还阳术1 then
                            self.参战单位[目标].防御=math.floor(self.参战单位[目标].防御*0.9)
                            self.参战单位[目标].伤害=math.floor(self.参战单位[目标].伤害*1.1)
                            self.参战单位[目标].还阳术1=true
                        end
            end,
        },--还阳术
  杨柳甘露={
            类型 = "复活",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                        return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                        return self:魔法消耗(编号,150,1,"杨柳甘露")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0021 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        基础.造成伤势={比例=1,类型=2}
                        if self.参战单位[编号].奇经八脉.莲动 and not self.参战单位[编号].奇经八脉莲动 then
                              基础.结果系数 = 基础.结果系数  + 2
                              self.参战单位[编号].奇经八脉莲动 = 1
                        end
                        if self.参战单位[编号].奇经八脉.甘露 and 取随机数()<=50 then
                            local 添加 = DeepCopy(self.计算属性)
                            添加.初始伤害 = math.floor(等级*4+self.参战单位[编号].法伤*0.1)
                            战斗技能.普渡众生.基础计算(self,编号,目标,等级,数据,添加,"治疗")
                            local 结果=self:取基础治疗计算(编号,目标,名称,等级,添加)
                            基础.添加状态={名称="普渡众生",境界=结果.气血,回合=5}
                        end
            end,
        },--杨柳甘露
  莲花心音={
            类型 = "复活",
            门派 = "普陀山",
            奇经八脉=1,
            无效类型="角色",
            目标 = function(self,编号,目标)
                        return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                     return self:魔法消耗(编号,60,数量,"莲花心音")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = math.floor(self.参战单位[编号].最大气血*0.6)
                        基础.造成伤势={比例=1,类型=2}
                        基础.增加魔法=math.floor(self.参战单位[目标].最大魔法*0.48)
            end,
        },--莲花心音
  由己渡人={
            类型 = "复活",
            门派 = "无底洞",
            奇经特效=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    if self.参战单位[编号].气血< self.参战单位[编号].最大气血*0.1 then
                        return false
                    end
                    return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.结尾 = math.floor(self.参战单位[编号].气血*0.1)
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0021 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1) + 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("地冥妙法") *6
                        基础.造成伤势={比例=2,类型=2}
            end,
        },--由己渡人
  还魂咒={
            类型 = "复活",
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,150,数量,"还魂咒")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0011 * 等级^2/等级
                        基础.初始伤害 = 基础.初始伤害 + math.floor(self.参战单位[编号].法伤*0.1)
                        基础.造成伤势={比例=1}
            end,
        },--还魂咒
------------------增益技能
  后发制人={
            类型 = "增益",
            门派 = "大唐官府",
            敌方 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            特效 = function(类型) ---技能人数
                   if 类型=="增益" then
                        return "后发制人"
                   else
                        return "横扫千军"
                   end
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  if self.参战单位[编号].气血<self.参战单位[编号].最大气血*0.1 and self.参战单位[编号].类型=="角色" then
                      self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用后发制人")
                      return false
                  end
                  return  true
            end,
            添加状态= function(self,目标,编号,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=2
                      状态.防御=math.floor(等级*3.5)
                      状态.法防=math.floor(等级*0.4)
                      状态.类型=2

            end,
            解除状态 = function(self,编号,目标,名称,数据)
                        数据.不可解除 = 1
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if 类型 =="伤害" then
                            前置.目标组={self.参战单位[编号].法术状态.后发制人.目标}
                            前置.目标数 = 1
                            if not self.参战单位[编号].奇经八脉.勇武 and self.参战单位[编号].类型=="角色"  then
                                前置.结尾=math.floor(self.参战单位[编号].气血*0.05)
                            end
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if 类型=="伤害" then
                           基础.初始系数 = 1 + 0.0024 * 等级^2/等级
                           if self.参战单位[编号].奇经八脉.勇武  then
                               基础.结果伤害 = 基础.结果伤害 + math.floor(self.参战单位[目标].防御*0.4)
                               self.参战单位[目标].奇经八脉勇武加成=编号
                           end
                           if self.参战单位[编号].奇经八脉.目空 then
                              基础.防御系数 = 基础.防御系数 - 0.1
                           end
                       else
                            self:添加状态("后发制人",编号,编号,等级)
                            self.参战单位[编号].法术状态.后发制人.目标=目标
                            self.战斗流程[数据.流程].挨打方[数据.挨打].挨打方=编号
                            基础.无需状态=1
                       end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                      if 类型=="伤害" then
                          返回.取消状态="后发制人"
                          if self.参战单位[编号].奇经八脉.勇武 then
                                local 恢复气血=math.floor(self.参战单位[编号].最大气血*0.15)
                                self:增加气血(编号,恢复气血)
                                if self.战斗流程[前置.流程].增加气血 then
                                    self.战斗流程[前置.流程].增加气血 = self.战斗流程[前置.流程].增加气血 + 恢复气血
                                else
                                   self.战斗流程[前置.流程].增加气血 = 恢复气血
                                end
                                self:增加愤怒(编号,10)
                          end
                      end
            end,
        },------后发制人--完成
  安神诀={
            类型 = "增益",
            门派 = "大唐官府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"安神诀")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/30)+3
                      状态.法伤=math.floor(等级*2.5)
                      状态.类型=2
                      if self.参战单位[编号].奇经八脉.安神 then
                          状态.奇经八脉安神 = 1
                      end
            end,
        },---安神诀--完成
  杀气诀={
            类型 = "增益",
            门派 = "大唐官府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,40,数量,"杀气诀")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/30)+3
                      状态.伤害=等级*2
                      状态.类型=2
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.风刃 then
                            返回.添加状态={名称="风魂",等级=10}
                        end
            end,
        },---杀气诀--完成
  凝神术={
            类型 = "增益",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,1,"凝神术")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=10
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
            end,
        },---凝神术--完成
  分身术={
            类型 = "增益",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            冷却 = function(self,编号)
                  local 开始,使用 = 0,0
                  if self.参战单位[编号].奇经八脉.幻变 then
                      使用 = 8
                  end
                  return {开始=开始,使用=使用}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,80,数量,"分身术")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=3
                      if self.参战单位[编号].奇经八脉.化身 then
                        状态.回合=状态.回合+1
                      end

            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
            end,
        },---分身术--完成
  钟馗论道={
            类型 = "增益",
            门派 = "方寸山",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            冷却 = function(self,编号)
                  return {开始=4,使用=8}
            end,
            消耗 = function(self,编号,数量) --技能消耗
              if self.参战单位[编号].气血<self.参战单位[编号].最大气血*0.5 then
                  self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用#R钟馗论道")
                  return false
              end
                  return self:魔法消耗(编号,80,1,"钟馗论道")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                    状态.回合=6
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.目标 = 编号
            end,
        },---钟馗论道--完成
----------------------------------------
  五雷挪移={
            类型 = "增益",
            门派 = "方寸山",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                  if self.参战单位[编号].符咒<5 then
                      self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前符咒不足，无法使用#R五雷挪移")
                      return false
                  end
                  return self:魔法消耗(编号,50,1,"五雷挪移")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=11
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.目标 = 编号
            end,
        },---五雷挪移--完成
  佛法无边={
            类型 = "增益",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                   if self.参战单位[编号].奇经八脉.自在 then
                      return true
                   end
                  return self:魔法消耗(编号,150,1,"佛法无边")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/30)+3
                      状态.法连=50
                      状态.类型=2
                      if  self.参战单位[编号].奇经八脉.慧定 then
                        状态.法连 = 状态.法连 + 25
                        状态.回合 = 状态.回合 -1
                      end

            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                    if self.参战单位[编号].奇经八脉.慧定 then
                      前置.目标 = 编号
                    end
            end,
        },---佛法无边--完成
  达摩护体={
            类型 = "增益",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --

                  return self:魔法消耗(编号,30,数量,"达摩护体")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.最大气血= self.参战单位[目标].等级*3.5+self.参战单位[目标].法伤*0.2
                      状态.回合 = math.floor(等级/30)+3
                      状态.类型 = 2

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.初始伤害 = math.floor(self.参战单位[目标].等级*2.5+self.参战单位[目标].法伤*0.2)
                         基础.造成伤势 ={比例=1}
                          local 聚气几率 = 30
                          if self.参战单位[编号].奇经八脉.磅礴 then
                              聚气几率 = 60
                          end
                          if self.参战单位[编号].奇经特效.聚气 and 取随机数()<=聚气几率 then
                             self.参战单位[编号].聚气加成 = 1
                          end
            end,
        },---达摩护体--完成
  金刚护法={
            类型 = "增益",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self.战斗开始==false or self.回合进程=="加载回合" then return 3 end
                    local 数量 = math.floor(等级/25)+1
                    if 数量>7 then 数量 = 7 end
                    if self.参战单位[编号].奇经八脉.映法 and 取随机数()<=50 then
                        数量 = 10
                    end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗 --

                  return self:魔法消耗(编号,40,数量,"金刚护法")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.伤害 = 等级*2.5
                      状态.回合 = math.floor(等级/30)+3
                      状态.类型 = 2
                      if self.参战单位[编号].奇经八脉.佛屠 then
                        状态.伤害 = 状态.伤害 + 玩家数据[self.参战单位[编号].玩家id].经脉:武器伤害处理(9)
                      end
                      if self.参战单位[编号].奇经八脉.流刚 then
                        状态.伤害 = 状态.伤害*1.18
                      end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                          local 聚气几率 = 30
                          if self.参战单位[编号].奇经八脉.磅礴 then
                              聚气几率 = 60
                          end
                          if self.参战单位[编号].奇经特效.聚气 and 取随机数()<=聚气几率 then
                             self.参战单位[编号].聚气加成 = 1
                          end
            end,
        },---金刚护法
  韦陀护法={
            类型 = "增益",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/25)+1
                    if 数量>7 then 数量 = 7 end
                    if self.参战单位[编号].奇经八脉.无碍 then
                        数量 = 1
                    end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗 --

                  return self:魔法消耗(编号,30,数量,"韦陀护法")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号

                      状态.法伤 = 等级*1.5
                      状态.回合 = math.floor(等级/30)+3
                      状态.类型 = 2
                      if self.参战单位[编号].奇经八脉.无碍 then
                        状态.法伤 = 状态.法伤*2
                      end
                      if self.参战单位[编号].奇经八脉.感念 and self.参战单位[编号].门派=="化生寺" then
                         状态.回合=2
                         状态.法伤 = 状态.法伤 *2.5
                      end

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                          local 聚气几率 = 30
                          if self.参战单位[编号].奇经八脉.磅礴 then
                              聚气几率 = 60
                          end
                          if self.参战单位[编号].奇经特效.聚气 and 取随机数()<=聚气几率 then
                             self.参战单位[编号].聚气加成 = 1
                          end
            end,
        },---韦陀护法
  金刚护体={
            类型 = "增益",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/25)+1
                    if 数量>7 then 数量 = 7 end
                    if self.参战单位[编号].奇经八脉.映法 and 取随机数()<=50 then
                        数量 = 10
                    end
                    return 数量
            end,

            消耗 = function(self,编号,数量) --技能消耗 --

                  return self:魔法消耗(编号,30,数量,"金刚护体")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号

                      状态.防御 = 等级*2
                      状态.回合 = math.floor(等级/30)+3
                      状态.类型 = 2
                      if self.参战单位[编号].奇经八脉.流刚 then
                        状态.防御 = 状态.防御*1.18
                      end

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                          local 聚气几率 = 30
                          if self.参战单位[编号].奇经八脉.磅礴 then
                              聚气几率 = 60
                          end
                          if self.参战单位[编号].奇经特效.聚气 and 取随机数()<=聚气几率 then
                             self.参战单位[编号].聚气加成 = 1
                          end
            end,
        },---金刚护体
  一苇渡江={
            类型 = "增益",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/25)+1
                    if 数量>7 then 数量 = 7 end
                    if self.参战单位[编号].奇经八脉.映法 and 取随机数()<=50 then
                        数量 = 10
                    end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗 --

                  return self:魔法消耗(编号,30,数量,"一苇渡江")
            end,

            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.速度 = 等级*2.5
                      状态.回合 = math.floor(等级/30)+3
                      状态.类型 = 2
                      if self.参战单位[编号].奇经八脉.流刚 then
                        状态.速度 = 状态.速度*1.18
                      end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                          local 聚气几率 = 30
                          if self.参战单位[编号].奇经八脉.磅礴 then
                              聚气几率 = 60
                          end
                          if self.参战单位[编号].奇经特效.聚气 and 取随机数()<=聚气几率 then
                             self.参战单位[编号].聚气加成 = 1
                          end
            end,
        },---一苇渡江
  诸天看护={
            类型 = "增益",
            门派 = "化生寺",
            奇经八脉=1,
            冷却 = function(self,编号)
                  return {开始=0,使用=8}
            end,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self.参战单位[编号].愤怒<10 then
                         self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前愤怒不足，无法使用诸天看护")
                       return false
                    end
                    if self:魔法消耗(编号,100,1,"诸天看护") then
                          self:愤怒消耗(编号,10,"诸天看护")
                          return true
                     else
                        return false
                     end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合 =999
                      状态.等级 = 等级
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       local 加成 = 0.015
                        if self.参战单位[目标].法术状态.诸天看护~=nil then
                          加成 = self.参战单位[目标].法术状态.诸天看护.等级
                        end
                        基础.取消状态={}
                        if self.参战单位[目标].法术状态.金刚护法 and self.参战单位[目标].法术状态.金刚护法.编号==编号 then
                          table.insert(基础.取消状态,"金刚护法")
                          加成 = 加成 + 0.1
                        end
                        if self.参战单位[目标].法术状态.金刚护体 and self.参战单位[目标].法术状态.金刚护体.编号==编号 then
                          table.insert(基础.取消状态,"金刚护体")
                          加成 = 加成 + 0.1
                        end
                        if  self.参战单位[目标].法术状态.一苇渡江 and self.参战单位[目标].法术状态.一苇渡江.编号==编号 then
                          table.insert(基础.取消状态,"一苇渡江")
                          加成 = 加成 + 0.1
                        end
                        if  加成>=0.12 then
                            加成=0.12
                        end
                        基础.添加状态 = {目标=目标,等级=加成}
            end,
        },---诸天看护
  渡劫金身={
            类型 = "增益",
            门派 = "化生寺",
            奇经八脉=1,
            冷却 = function(self,编号)
                  return {开始=0,使用=4}
            end,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                  return self:愤怒消耗(编号,10,"渡劫金身")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合 =3
            end,
        },---渡劫金身
  红袖添香={
            类型 = "增益",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,

            消耗 = function(self,编号,数量) --技能消耗 --
                  return self:魔法消耗(编号,30,数量,"红袖添香")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合 = math.floor(等级/30)+3
                      状态.速度 = 等级*2
                      状态.类型 = 2
            end,
        },---红袖添香
  楚楚可怜={
            类型 = "增益",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                  return self:魔法消耗(编号,30,1,"楚楚可怜")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合 = math.floor(等级/30)+3
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.目标 = 编号
            end,
        },--楚楚可怜
  幽冥鬼眼={
            类型 = "增益",
            门派 = "阴曹地府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                  return self:魔法消耗(编号,20,数量,"幽冥鬼眼")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self.参战单位[编号].奇经八脉.通暝 then
                        return 1
                    end
                    return math.floor(等级/40)+2
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合 = math.floor(等级/30)+3
                      状态.抵抗封印等级= 100
                      状态.类型=2
                      if self.参战单位[编号].奇经八脉.幽冥 then
                         状态.回合 = 状态.回合 + 1
                      end
                      if self.参战单位[编号].奇经八脉.通暝 then
                          for i=1,#self.参战单位 do
                            if self.参战单位[i].队伍~=self.参战单位[编号].队伍 and self.参战单位[i].法术状态.尸腐毒~=nil then
                               状态.回合 = 状态.回合 + 1
                            end
                          end
                      end
                      if self.参战单位[编号].奇经八脉.冥视 then
                         状态.抵抗封印等级 = 状态.抵抗封印等级 + 20
                      end
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      if self.参战单位[编号].奇经八脉.通暝 then
                        前置.目标 = 编号
                      end
            end,
        },--幽冥鬼眼
  修罗隐身={
            类型 = "增益",
            门派 = "阴曹地府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self.参战单位[编号].类型~="角色" then
                      return true
                    end
                    if 昼夜参数== 1 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/修罗隐身只能白天使用！")
                        return false
                     end
                  return self:魔法消耗(编号,150,数量,"修罗隐身")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                          状态.回合 =math.floor(等级/30)+3
                          if 境界 and self.参战单位[目标].隐身 and self.参战单位[目标].隐身==境界 then
                            状态.回合 = 境界
                          end
            end,
        },--修罗隐身
  魍魉追魂={
            类型 = "增益",
            门派 = "阴曹地府",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                  return self:魔法消耗(编号,100,数量,"魍魉追魂")
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=4}
            end,
            技能流程 = function(self,编号,目标,境界)  ---------循环开始前
                        if self.参战单位[目标].气血>0 then
                            self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/当前目标未死亡，无法使用")
                            return
                        elseif self.参战单位[目标].队伍~=self.参战单位[编号].队伍 then
                                self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/只能对队友使用")
                                return
                        end
                        if self:魔法消耗(编号,100,1,"魍魉追魂") then
                            self.参战单位[目标].魍魉追魂加成 = true
                            self.执行等待=self.执行等待+5
                            local 流程 = #self.战斗流程+1
                            self.战斗流程[流程] = {流程=27,攻击方=编号,
                                              挨打方={
                                                  {挨打方=目标,特效={"魍魉追魂"}}
                                                  },
                                              提示={允许=true,
                                                  类型="法术",
                                                  名称="魍魉追魂"
                                                  }
                                            }
                        end
            end,
        },--魍魉追魂
  火甲术={
            类型 = "增益",
            门派 = "魔王寨",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                  return self:魔法消耗(编号,60,数量,"火甲术")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+1
            end,
        },--火甲术
  牛劲={
            类型 = "增益",
            门派 = "魔王寨",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                  return self:魔法消耗(编号,20,1,"牛劲")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+3
                        状态.法伤=等级*3
                        状态.类型=2
                        if self.参战单位[编号].奇经八脉.充沛 then
                           状态.法伤 = 状态.法伤 *1.2
                           状态.感知=true
                        end
                        if self.参战单位[编号].奇经八脉.炙烤 then
                            状态.回合 = 状态.回合 - 3
                            状态.炙烤 = true
                        end
            end,
        },--牛劲
  无敌牛虱={
            类型 = "增益",
            门派 = "魔王寨",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=0}
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    -- local 牛虱存在=0
                    -- for n=1,#self.参战单位 do
                    --     if self.参战单位[n].模型=="牛虱" and self.参战单位[n].名称=="牛虱" then
                    --       牛虱存在=牛虱存在+2
                    --     end
                    -- end
                    -- if  牛虱存在<=1 or self:取玩家战斗() then
                        return self:魔法消耗(编号,150,1,"无敌牛虱")
                    -- else
                    --     self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/只能存在一个相同的#G/宠物")
                    --     return false
                    -- end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                      self:执行怪物召唤(编号,6,self.参战单位[编号].队伍,1)
                      self.参战单位[编号].无敌牛虱 = 10
                      基础.无需状态 = 1
            end,
        },--无敌牛虱
  无敌牛妖={
            类型 = "增益",
            门派 = "魔王寨",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=0}
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    -- local 牛幺存在=0
                    -- for n=1,#self.参战单位 do
                    --     if self.参战单位[n].模型=="牛幺" and self.参战单位[n].名称=="牛幺" then
                    --       牛幺存在=牛幺存在+2
                    --     end
                    -- end
                    -- if  牛幺存在<=1 or self:取玩家战斗() then
                        return self:魔法消耗(编号,150,1,"无敌牛妖")
                    -- else
                    --     self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/只能存在一个相同的#G/宠物")
                    --     return false
                    -- end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       self:执行怪物召唤(编号,7,self.参战单位[编号].队伍,1)
                       self.参战单位[编号].无敌牛妖 = 10
                       基础.无需状态 = 1
            end,
        },--无敌牛妖
  魔王回首={
            类型 = "增益",
            门派 = "魔王寨",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                   return self:魔法消耗(编号,30,1,"魔王回首")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/30)+3
            end,
        },--魔王回首
  变身={
            类型 = "增益",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                   return self:魔法消耗(编号,30,1,"变身")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合 = math.floor(等级/20) + 4
                        状态.伤害 = math.floor(等级*2.5)
                        状态.类型 = 2
                        if self.参战单位[编号].奇经八脉.宁息 then
                          状态.回合 = 状态.回合 + 1
                          状态.宁息 = true
                        end
                        if self.参战单位[编号].奇经八脉.狂躁 then
                           状态.回合 = 状态.回合 - 3
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.添加状态={}
                         基础.添加状态[1]={名称="变身"}
                         if self.参战单位[编号].奇经八脉.狂躁 then
                            基础.添加状态[2]={名称="狂怒"}
                         end
            end,
        },--变身
  天魔解体={
            类型 = "增益",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                   if self.参战单位[编号].气血<=self.参战单位[编号].最大气血*0.1 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用天魔解体")
                     return false
                   end
                    return self:魔法消耗(编号,100,1,"天魔解体")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
                        前置.结尾=math.floor(self.参战单位[编号].最大气血*0.1)
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                       状态.类型=2
                       状态.回合=math.floor(等级/30)+2
                       状态.伤害=math.floor(self.参战单位[目标].伤害*0.15)
            end,
        },--天魔解体
  定心术={
            类型 = "增益",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,40,数量,"定心术")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+3
                        状态.法伤=等级*2
                        状态.类型=2
            end,
        },--定心术
  魔息术={
            类型 = "增益",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self.参战单位[编号].气血< 50 then
                         self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用魔息术")
                        return false
                    end
                    return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.结尾 = 50
                        前置.目标 = 编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                          基础.增加魔法=math.floor(等级/2)
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+1
                        状态.等级=等级
                        if self.参战单位[编号].奇经八脉.魔息 then
                            状态.魔息 = true
                        end
            end,
        },--魔息术
  极度疯狂={
            类型 = "增益",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,30,数量,"极度疯狂")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+1
            end,
        },--极度疯狂
  狂怒={
            类型 = "增益",
            门派 = "狮驼岭",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,30,数量,"狂怒")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合 = math.floor(等级/20)+2
                        if self.参战单位[目标].法术状态.变身 then
                            状态.回合 = self.参战单位[目标].法术状态.变身.回合
                        end
                        状态.伤害 = 等级*2
                        状态.类型 = 2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.添加状态={名称="狂怒"}
                        if self.参战单位[目标].奇经八脉.狂化 and self.参战单位[目标].经脉流派 =="狂怒斗兽" then
                             --基础.添加状态.回合 = math.floor(等级/20)+2
                             if self.参战单位[目标].法术状态.变身 then
                                 self.参战单位[目标].法术状态.变身.回合 = self.参战单位[目标].法术状态.变身.回合+1
                             end
                        end
            end,
        },--狂怒
  盘丝阵={
            类型 = "增益",
            门派 = "盘丝洞",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,40,数量,"盘丝阵")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+3
                        状态.防御=等级*2
                        状态.类型=2
            end,
        },--盘丝阵
  幻镜术={
            类型 = "增益",
            门派 = "盘丝洞",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,50,数量,"幻镜术")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+1
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
            end,
        },
  天神护体={
            类型 = "增益",
            门派 = "天宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,50,数量,"天神护体")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+3
                        状态.法伤=等级*2.5
                        状态.类型=2
                        if self.参战单位[编号].奇经八脉.神律 then
                           状态.法伤 = 0
                           local 加成 = 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("云霄步") or self.参战单位[编号].等级
                           状态.速度 = 加成 * 0.3
                        end
                        if self.参战单位[编号].奇经八脉.神尊 then
                           状态.法伤 = 0
                           状态.防御=等级*2.5
                        end
            end,
        },
  天神护法={
            类型 = "增益",
            门派 = "天宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,30,数量,"天神护法")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+3
                        状态.防御=等级*2
                        状态.类型=2
            end,
        },
  金刚镯={
            类型 = "增益",
            门派 = "天宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,50,数量,"金刚镯")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/25)+3
                        状态.法伤=等级*2.5
                        状态.类型=2
                        if self.参战单位[编号].奇经八脉.套索 then
                           状态.回合 = 状态.回合 + 1
                           self.参战单位[目标].法术状态[名称].套索=true
                        end
            end,
        },
  霹雳弦惊={
            类型 = "增益",
            门派 = "天宫",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,70,1,"霹雳弦惊")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                          状态.回合=7
                          if self.参战单位[编号].奇经八脉.激越 then
                                状态.激越 = true
                                状态.回合 = 状态.回合 - 2
                          end
                          if self.参战单位[编号].奇经八脉.气势 and not self.参战单位[编号].奇经八脉气势 then
                                状态.回合 = 状态.回合 + math.floor(状态.回合/2)
                                self.参战单位[编号].奇经八脉气势 = 1
                          end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if  self.参战单位[编号].法术状态 and  self.参战单位[编号].法术状态.雷怒霆激 then
                             基础.取消状态="雷怒霆激"
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.啸傲 then
                           if self.参战单位[编号].奇经八脉啸傲 ==nil then
                              self.参战单位[编号].奇经八脉啸傲 = 0
                           end
                           self.参战单位[编号].奇经八脉啸傲 = self.参战单位[编号].奇经八脉啸傲 + 1
                           if self.参战单位[编号].奇经八脉啸傲>=20 then
                              self.参战单位[编号].奇经八脉啸傲 = 20
                           end
                        end
            end,
        },
  雷怒霆激={
            类型 = "增益",
            门派 = "天宫",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,70,1,"雷怒霆激")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                          状态.回合=7
                          if self.参战单位[编号].奇经八脉.激越 then
                                状态.激越 = true
                                状态.回合 = 状态.回合 - 2
                          end
                          if self.参战单位[编号].奇经八脉.气势 and not self.参战单位[编号].奇经八脉气势1 then
                                状态.回合 = 状态.回合 + math.floor(状态.回合/2)
                                self.参战单位[编号].奇经八脉气势1 = 1
                          end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if  self.参战单位[编号].法术状态 and  self.参战单位[编号].法术状态.霹雳弦惊 then
                             基础.取消状态="霹雳弦惊"
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.啸傲 then
                           if self.参战单位[编号].奇经八脉啸傲 ==nil then
                              self.参战单位[编号].奇经八脉啸傲 = 0
                           end
                           self.参战单位[编号].奇经八脉啸傲 = self.参战单位[编号].奇经八脉啸傲 + 1
                           if self.参战单位[编号].奇经八脉啸傲>=20 then
                              self.参战单位[编号].奇经八脉啸傲 = 20
                           end
                        end
            end,
        },
  知己知彼={
            类型 = "增益",
            门派 = "天宫",
            敌方 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,80,1,"知己知彼")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                       状态.回合=4
                       状态.伤害=self.参战单位[编号].等级*2
                       状态.防御=self.参战单位[编号].等级*2
                       状态.法伤=self.参战单位[编号].等级*2
                       状态.法防=self.参战单位[编号].等级*2
                       状态.封印命中等级= self.参战单位[编号].等级*2
                       状态.抵抗封印等级= self.参战单位[编号].等级*2
                       状态.类型=2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        local 获取名称 = self.参战单位[目标].名称
                        local 获取气血值 = self.参战单位[目标].气血 or 0
                        local 获取最大气血值 = self.参战单位[目标].最大气血 or 0
                        local 获取魔法值 = self.参战单位[目标].魔法 or 0
                        local 获取最大魔法值 = self.参战单位[目标].最大魔法 or 0
                        local 获取目标愤怒 = self.参战单位[目标].愤怒 or 0
                        self:添加聊天提示(self.参战单位[编号].玩家id,编号,{内容=format("#Y/使用技能#R/[知己知彼]#Y/获取到对方信息如下\n #Y/名称:[%s] \n #Y/气血值:[%s/%s] \n #Y/魔法值:[%s/%s] \n #Y/愤怒:[%s]",获取名称,获取气血值,获取最大气血值,获取魔法值,获取最大魔法值,获取目标愤怒)})
                        if self.参战单位[编号].奇经八脉.洞察 then
                            基础.添加状态={名称="知己知彼",目标=编号}
                        else
                            基础.无需状态 = 1
                        end
            end,
        },
  电光火石={
            类型 = "增益",
            门派 = "天宫",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=9}
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,140,数量,"电光火石")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.添加状态={}
                        基础.添加状态[1]={名称="霹雳弦惊"}
                        基础.添加状态[2]={名称="雷怒霆激"}
            end,
        },
  天地同寿={
            类型 = "增益",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,50,数量,"天地同寿")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                            状态.回合=math.floor(等级/30)+1
                            状态.防御=math.floor(self.参战单位[目标].防御*0.5)
                            if self.参战单位[编号].奇经八脉.同辉 then
                               状态.回合=状态.回合+2
                               状态.同辉 = true
                            end
            end,
        },
  乾坤妙法={
            类型 = "增益",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self.参战单位[编号].类型=="bb"  then
                          return true
                    elseif self.参战单位[编号].气血<self.参战单位[编号].最大气血*0.5  then
                            self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用乾坤妙法")
                          return false
                    end
                  return self:魔法消耗(编号,50,数量,"乾坤妙法")

            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                         状态.回合=math.floor(等级/30)+1
            end,
        },
  炼气化神={ ----
            类型 = "增益",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return  math.floor(等级/35)+2
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if self.参战单位[编号].气血 < math.floor(等级/2)+10  then
                            self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用炼气化神")
                            前置.结束流程 = 1
                        else
                            if self.参战单位[编号].奇经八脉.行气 and 前置.目标组[1]==编号 then
                                self.参战单位[编号].奇经八脉行气 = 1
                            end
                            前置.结尾 = math.floor(等级/2)
                        end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                            状态.回合 = math.floor(等级/30)+3
                            状态.等级 = 等级
                            if self.参战单位[编号].奇经八脉行气 then
                                状态.回合 = 状态.回合 + 3
                            end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.增加魔法 = math.floor(self.参战单位[编号].法伤*0.05 * (1+ 0.0005 * 等级^2/等级))
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        self.参战单位[编号].奇经八脉行气 = nil
            end,
        },
  生命之泉={ ----
            类型 = "增益",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/25)+1
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,30,数量,"生命之泉")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                            状态.回合=math.floor(等级/30)+3
                            状态.等级 = 境界
                            if self.参战单位[编号].奇经八脉.运转 then
                               状态.回合 = 状态.回合 - 3
                               状态.等级 = math.floor(境界*1.3)
                            end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0006 * 等级^2/等级
                        基础.初始伤害 = math.floor(self.参战单位[编号].法伤*0.1)
                        if self.参战单位[编号].奇经八脉.体恤 and  self.参战单位[目标].气血<=self.参战单位[目标].最大气血*0.3 then
                              基础.结果伤害 = 基础.结果伤害 + 150
                        end
                        基础.无需状态 = 1
            end,
            循环结束 = function(self,编号,目标,伤害,等级,数据,类型)-----循环尾部
                        数据.添加状态={目标=目标,境界=伤害}
            end,
        },
  心随意动={ ----
            类型 = "增益",
            门派 = "五庄观",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,30,数量,"心随意动")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=9
                        if self.参战单位[编号].经脉流派=="清心羽客"  or self.参战单位[编号].经脉流派=="乾坤力士" then
                           local 加成 =  玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("七星遁") * 2.2
                              if self.参战单位[编号].经脉流派=="清心羽客" then
                                 状态.封印命中等级 = 加成
                              elseif self.参战单位[编号].经脉流派=="乾坤力士" then
                                 状态.伤害=加成
                              end
                                 状态.类型=2
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[编号].法术状态.心随意动  then
                             基础.取消状态="心随意动"
                        else
                             基础.添加状态={名称="心随意动"}
                        end
            end,
        },
  神龙摆尾={ ----
            类型 = "增益",
            门派 = "龙宫",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,100,数量,"神龙摆尾")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+3
                        状态.法防 = self.参战单位[目标].法防*0.3
                        状态.防御 = self.参战单位[目标].防御*0.3
                        状态.类型=2
            end,
        },
  逆鳞={ ----
            类型 = "增益",
            门派 = "龙宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,40,数量,"逆鳞")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+3
                        状态.伤害 = 等级*2
                        状态.类型=2
            end,
        },
  乘风破浪={ ----
            类型 = "增益",
            门派 = "龙宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,40,数量,"乘风破浪")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+3
                        状态.速度 = 等级*2
                        状态.类型=2
            end,
        },--乘风破浪
  潜龙在渊={ ----
            类型 = "增益",
            门派 = "龙宫",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,100,数量,"潜龙在渊")
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=8}
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
            end,

            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[目标].潜龙在渊加成 then
                            基础.取消状态={}
                           if self.参战单位[目标].法术状态.龙魂 then
                            table.insert(基础.取消状态, "龙魂")
                            self.参战单位[目标].潜龙在渊加成.龙魂 = self.参战单位[目标].潜龙在渊加成.龙魂+1
                           end
                           if self.参战单位[目标].法术状态.龙骇龙腾 then
                            table.insert(基础.取消状态, "龙骇龙腾")
                            self.参战单位[目标].潜龙在渊加成.龙腾 = self.参战单位[目标].潜龙在渊加成.龙腾+1
                           end
                           if self.参战单位[编号].法术状态.龙骇龙卷 then
                            table.insert(基础.取消状态, "龙骇龙卷")
                            self.参战单位[目标].潜龙在渊加成.龙卷雨击 = self.参战单位[目标].潜龙在渊加成.龙卷雨击+1
                           end
                        end
                        基础.无需状态 = 1
            end,
        },--潜龙在渊
   普渡众生={ ----
            类型 = "增益",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = 1
                    local 境界 = self:取指定法宝(编号,"普渡")
                    if 境界 then
                        local 几率 = math.floor(境界*3)
                        if self.参战单位[编号].奇经八脉.普渡 then
                            几率 = 几率 + 20
                        end
                        if self.参战单位[编号].奇经八脉.度厄 then
                            几率 = 几率 - 10
                        end
                        if 取随机数()<=几率 and self:取指定法宝(编号,"普渡",1)  then
                            if self.参战单位[编号].奇经八脉.度厄 then
                                数量 = 数量 + 2
                            else
                                数量 = 数量 + 1
                            end
                        end
                    end
                    if self.参战单位[编号].门派=="普陀山"
                       and self.参战单位[编号].神话词条.九天玄女
                       and 取随机数()<=self.参战单位[编号].神话词条.九天玄女*15 then
                        数量 = 数量 + self.参战单位[编号].神话词条.九天玄女
                    end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,50,数量,"普渡众生")

            end,
            解除状态 = function(self,编号,目标,名称,数据)
                        if not self.参战单位[目标].奇经八脉雨润 and self.参战单位[数据.编号].奇经八脉.雨润 then
                            self.参战单位[目标].奇经八脉雨润 = math.floor(self.参战单位[目标].法术状态.普渡众生.等级 * self.参战单位[目标].法术状态.普渡众生.回合 * 0.8)
                        end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                            状态.回合=math.floor(等级/30)+3
                            状态.等级=境界

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                            基础.初始系数 = 1 + 0.0009 * 等级^2/等级
                            基础.初始伤害 = math.floor(self.参战单位[编号].法伤*0.05)
                            基础.造成伤势 ={比例=1,类型=2}
                            基础.无需状态 = 1
                            if self.参战单位[编号].奇经八脉.化戈 then
                              基础.结果伤害 = 基础.结果伤害 + 玩家数据[self.参战单位[编号].玩家id].经脉:武器伤害处理(18)
                            end
                            if self.参战单位[编号].奇经八脉.劳心 and self.参战单位[目标].气血<=self.参战单位[目标].最大气血*0.3
                              and 数据.次数==1 then
                              基础.结果系数 = 基础.结果系数+1
                            end
                            if self.参战单位[编号].奇经八脉.玉帛 then
                               基础.结果伤害 = 基础.结果伤害 + 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("护法金刚")
                            end
            end,
            循环结束 = function(self,编号,目标,伤害,等级,数据,类型)-----循环尾部
                        数据.添加状态={目标=目标,境界=伤害}
            end,
        },
   灵动九天={ ----
            类型 = "增益",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self.参战单位[编号].奇经八脉.法华 then
                       return 1
                    end
                    local 数量 = math.floor(等级/40)+2

                    for k,v in pairs(self.参战单位) do
                        if self.参战单位[编号].经脉流派=="莲台仙子" and v.队伍==self.参战单位[编号].队伍 and v.法术状态.普渡众生 then
                            数量 = 数量 + 1
                        elseif self.参战单位[编号].经脉流派=="五行咒师" and v.队伍~=self.参战单位[编号].队伍 and v.法术状态.紧箍咒 then
                                数量 = 数量 + 1
                        end
                    end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,30,数量,"灵动九天")

            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+3
                        状态.法伤=等级*4
                        状态.类型=2
                        if self.参战单位[编号].奇经八脉.灵动 then
                            状态.回合 =状态.回合+2
                            状态.法伤 = 状态.法伤 + 30
                        end
                        if self.参战单位[编号].奇经八脉.法华 then
                            状态.法华 = true
                        end
            end,
        },---灵动九天
   颠倒五行={ ----
            类型 = "增益",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,80,数量,"颠倒五行")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/50)+1
                        if self.参战单位[编号].奇经八脉.五行制化 then
                           状态.五行制化 =true
                           状态.回合 = 状态.回合 + 3
                        end
                        if self.参战单位[编号].奇经八脉.万象 and 目标==编号 then
                           状态.万象 =true
                           状态.回合 = 状态.回合 + 3
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.添加状态={}
                        基础.添加状态[1]={名称="颠倒五行"}
                        if self.参战单位[编号].奇经八脉.清净 then
                            基础.添加状态[2]={名称="清净"}
                        end
            end,
        },---颠倒五行
   波澜不惊={ ----
            类型 = "增益",
            门派 = "普陀山",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,60,1,"波澜不惊")

            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=3
                        状态.等级=0
            end,
        },---波澜不惊
   莲心剑意={ ----
            类型 = "增益",
            门派 = "普陀山",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,30,数量,"莲心剑意")

            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        if self.参战单位[目标].法术状态.莲心剑意 then
                            self:取消状态("莲心剑意",目标)
                            状态.不可添加 = 1
                        else
                            状态.回合=999
                        end
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
            end,
        },---莲心剑意
   炎护={ ----
            类型 = "增益",
            门派 = "神木林",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,30,数量,"炎护")

            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合= math.floor(等级/50)+3
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
            end,
        },---炎护
   蜜润={ ----
            类型 = "增益",
            门派 = "神木林",
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,25,数量,"蜜润")

            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self.参战单位[编号].奇经八脉.滋养  then
                        return 1
                    end
                    return math.floor(等级/35)+1
            end,
            解除状态 = function(self,编号,目标,名称,数据)
                        if self.参战单位[目标].法术状态.蜜润.滋养 and 目标==数据.编号 then
                             local 恢复数额 = 玩家数据[self.参战单位[目标].玩家id].经脉:取师门技能等级("驭灵咒") * self.参战单位[目标].法术状态.蜜润.回合
                             self:增加气血(目标,恢复数额)
                             self.战斗流程[数据.流程].挨打方[数据.挨打].增加气血 = 恢复数额
                        end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合= math.floor(等级/25)+3
                        状态.法伤= math.floor(等级*2.5)
                        状态.类型=2
                        if self.参战单位[编号].奇经八脉.滋养 then
                            状态.滋养 = true
                        end
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if  self.参战单位[编号].奇经八脉.滋养 then
                                前置.目标=编号
                        end
            end,
        },---蜜润
   百草诀={ ----
            类型 = "增益",
            门派 = "神木林",
            奇经特效=1,
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,50,数量,"百草诀")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.无需状态 = 1
                        local 颜色 ={"红","蓝","黄"}
                        local 灵药 = 颜色[取随机数(1,3)]
                        local 数量 = 10
                        if self.参战单位[编号].奇经八脉.残余 then
                            数量 = 8
                        end
                        self.参战单位[编号].灵药[灵药]=self.参战单位[编号].灵药[灵药] + 数量
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/凝聚"..灵药.."色灵药"..数量.."颗,当前"..灵药.."色灵药为:"..self.参战单位[编号].灵药[灵药])
            end,
        },---蜜润
  毒萃={ ----
            类型 = "增益",
            门派 = "神木林",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                     return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if  self.参战单位[编号].风灵<1 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的风灵为#R/"..self.参战单位[编号].风灵.."#Y/点，无法使用毒萃")
                        return false
                    end
                    return self:魔法消耗(编号,300,数量,"毒萃")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合= 5
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
                        self:神木消耗风灵(self.参战单位[编号],1)
                        if self.参战单位[编号].奇经八脉.风魂 then
                            前置.添加状态={名称="护盾",等级=等级*2}
                        end
            end,
        },---毒萃
   不动如山={
            类型 = "增益",
            门派 = "凌波城",
            目标 = function(self,编号,目标)
                     return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,150,数量,"不动如山")

            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合= math.floor(等级/25)+3
                        状态.防御=等级*2
                        状态.法防=math.floor(等级*1.5)
                        状态.类型=2
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
            end,
        },---不动如山
   碎星诀={
            类型 = "增益",
            门派 = "凌波城",
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,30,数量,"碎星诀")

            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                            状态.回合=math.floor(等级/25)+3
                            状态.伤害=等级*2
                            状态.类型=2
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if self.参战单位[编号].奇经八脉.战诀 then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
            end,
        },---碎星诀
   镇魂诀={
            类型 = "增益",
            门派 = "凌波城",
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return true
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合 = math.floor(等级/25)+3
                        状态.必杀 = math.floor(等级/10)+3
                        状态.伤害 = math.floor(等级*1.5)
                        状态.类型 = 2
                        if self.参战单位[编号].奇经八脉.巧变 then
                          状态.回合 = 状态.回合 - 1
                        end
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if self.参战单位[编号].奇经八脉.战诀 then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
            end,
        },---镇魂诀
   真君显灵={
            类型 = "增益",
            门派 = "凌波城",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                     return 编号
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=8}
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self.参战单位[编号].战意<1 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的战意为#R/"..self.参战单位[编号].战意.."#Y/点，无法使用真君显灵")
                        return false
                    end
                   return self:魔法消耗(编号,100,数量,"真君显灵")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合 = 4
                        状态.类型 = 2
                        if self.参战单位[编号].奇经八脉.妙得 then
                            状态.物理暴击等级 = math.floor(self.参战单位[目标].伤害 * 等级)
                        else
                            状态.伤害=math.floor(self.参战单位[目标].伤害 * 等级)
                        end
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.目标=编号
                      self.参战单位[编号].真君加成 = 0.15 * self.参战单位[编号].战意
                      if self.参战单位[编号].超级战意>=1 then
                         self.参战单位[编号].真君加成 = self.参战单位[编号].真君加成 * 2
                      end
                      self.参战单位[编号].战意 = 1
                      self:凌波消耗战意(self.参战单位[编号],1)
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.添加状态={目标=目标,等级=self.参战单位[编号].真君加成}
            end,
        },---真君显灵
   耳目一新={
            类型 = "增益",
            门派 = "凌波城",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                     return 编号
            end,
            冷却 = function(self,编号)
                    return {开始=12,使用=24}
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self.参战单位[编号].战意<1 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的战意为#R/"..self.参战单位[编号].战意.."#Y/点，无法使用耳目一新")
                        return false
                    end
                   return self:魔法消耗(编号,300,数量,"耳目一新")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
                        self:凌波消耗战意(self.参战单位[编号],1)
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.取消状态={}
                        基础.添加状态={}
                        local 状态={"智眼","怒眼","天眼"}
                        for i,v in ipairs(状态) do
                            if self.参战单位[编号].法术状态[v] then
                                table.insert(基础.取消状态,v)
                            end
                        end
                        local 次数 = 取随机数(2,3)
                        if 次数==2 then
                            local 相同 = 0
                            for i,v in ipairs(基础.取消状态) do
                                for k,n in ipairs(状态) do
                                    if v==n then
                                        相同 = k
                                        break
                                    end
                                end
                                if 相同~=0 then
                                    break
                                end
                            end
                            if 相同~=0 then
                                 table.remove(状态,相同)
                            end
                            for i=1,2 do
                                table.insert(基础.添加状态,{名称=状态[i]})
                            end
                        else
                            for i,v in ipairs(状态) do
                                if self.参战单位[编号].法术状态[v] then
                                    table.insert(基础.添加状态,{名称=v})
                                end
                            end
                        end
            end,
        },---耳目一新
   天眼神通={
            类型 = "增益",
            门派 = "凌波城",
            奇经特效=1,
            目标 = function(self,编号,目标)
                     return 编号
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=8}
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self.参战单位[编号].战意<1 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前可使用的战意为#R/"..self.参战单位[编号].战意.."#Y/点，无法使用天眼神通")
                        return false
                    end
                   return self:魔法消耗(编号,300,数量,"天眼神通")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标=编号
                        self:凌波消耗战意(self.参战单位[编号],1)
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        local 状态={"智眼","怒眼","天眼"}
                        基础.添加状态={}
                        local 次数 = 取随机数(1,3)
                        if self.参战单位[编号].奇经八脉.盛势 and 取随机数()<=50 then
                            次数= 取随机数(2,3)
                        end
                        if self.参战单位[编号].奇经八脉.盛势 and 取随机数()<=80 then
                            次数= 3
                        end
                        for i=1,次数 do
                            if #状态>0 then
                                local 添加 = 取随机数(1,#状态)
                                table.insert(基础.添加状态,{名称=状态[添加]})
                                table.remove(状态,添加)
                            end
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.蓄势 and 取随机数()<=50 then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
            end,
        },---天眼神通
   移魂化骨={
            类型 = "增益",
            门派 = "无底洞",
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self.参战单位[编号].类型=="bb"  then
                          return true
                    elseif self.参战单位[编号].气血<self.参战单位[编号].最大气血*0.3  then
                            self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/你当前气血不足，无法使用移魂化骨")
                          return false
                    end
                    return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                       状态.回合=math.floor(等级/20)+1
                       状态.等级=等级
            end,
        },---移魂化骨
   明光宝烛={
            类型 = "增益",
            门派 = "无底洞",
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,100,数量,"明光宝烛")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            解除状态 = function(self,编号,目标,名称,数据)
                       if self.参战单位[目标].法术状态.明光宝烛.救人  then
                            local 数额 = self.参战单位[目标].等级*self.参战单位[目标].法术状态.明光宝烛.回合
                            self:添加状态组处理(数据.编号,目标,{名称="护盾",等级=数额},"明光宝烛",self.参战单位[数据.编号].等级,数据.流程,数据.挨打)
                       end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/30)+3
                        状态.防御=等级*2
                        状态.类型=2
                        if self.参战单位[编号].奇经八脉.精进 then
                          状态.防御 = 状态.防御*1.5
                        end
                        if self.参战单位[编号].奇经八脉.救人 then
                           状态.防御 = math.floor(状态.防御*2.6)
                           状态.回合 = 状态.回合 - 1
                           状态.救人=true
                        end
            end,
        },---明光宝烛
   金身舍利={
            类型 = "增益",
            门派 = "无底洞",
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,100,数量,"金身舍利")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return math.floor(等级/40)+2
            end,
            解除状态 = function(self,编号,目标,名称,数据)
                       if self.参战单位[目标].法术状态.金身舍利.救人  then
                            local 数额 = self.参战单位[目标].等级*self.参战单位[目标].法术状态.金身舍利.回合
                            self:添加状态组处理(数据.编号,目标,{名称="护盾",等级=数额},"金身舍利",self.参战单位[数据.编号].等级,数据.流程,数据.挨打)

                       end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                            状态.回合=math.floor(等级/30)+3
                            状态.法防=等级*4
                            状态.类型=2
                            if self.参战单位[编号].奇经八脉.精进 then
                              状态.法防 = math.floor(状态.法防*1.5)
                            end
                            if self.参战单位[编号].奇经八脉.精进 then
                               状态.法防 = math.floor(状态.法防*1.5)
                            end
                            if self.参战单位[编号].奇经八脉.救人 then
                               状态.法防 = math.floor(状态.法防*2.6)
                               状态.回合 = 状态.回合 - 1
                               状态.救人=true
                            end
            end,
        },---金身舍利
   燃血术={
            类型 = "增益",
            门派 = "无底洞",
            奇经特效=1,
            目标 = function(self,编号,目标)
                     return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    if self.参战单位[编号].气血<self.参战单位[编号].最大气血*0.5 and not self.参战单位[编号].奇经八脉.盛怒 then
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/当前气血不足，无法使用")
                        return  false
                    end
                    return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                            前置.目标 = 编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                            self.参战单位[编号].燃血术加成 = 1
                            if self.参战单位[编号].奇经八脉.盛怒 then
                                  self:增加愤怒(编号,20)
                            else
                                  基础.减少气血 = math.floor(self.参战单位[编号].最大气血*0.1)
                                  if self.参战单位[编号].奇经八脉.血潮 then
                                     基础.减少气血 = 基础.减少气血 *2
                                     self.参战单位[编号].燃血术加成 = 2
                                  end
                            end
                            if self.参战单位[编号].奇经八脉.夺血 then
                                 self.参战单位[编号].固定伤害=  self.参战单位[编号].固定伤害 + 8
                            end
                            基础.无需状态 = 1
            end,
        },---燃血术
   同舟共济={
            类型 = "增益",
            门派 = "无底洞",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                     return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,200,数量,"同舟共济")
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=4}
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                            状态.回合=1
                            状态.等级=0
            end,
        },---同舟共济
   无畏布施={
            类型 = "增益",
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,100,数量,"无畏布施")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                            状态.回合=3
                            状态.类型=2
                            状态.伤害=math.floor(self.参战单位[目标].伤害*0.2)
                            状态.防御=math.floor(self.参战单位[目标].防御*0.2)
                            状态.法防=math.floor(self.参战单位[目标].法防*0.2)
            end,
        },---无畏布施
   北冥之渊={
            类型 = "增益",
            目标 = function(self,编号,目标)
                     return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,100,数量,"北冥之渊")
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=15}
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                            状态.回合=3
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标组={}
                        for k,v in pairs(self.参战单位) do
                            if v.队伍==self.参战单位[编号].队伍 and self:取目标状态(编号,k,2) and v.类型~="角色" then
                                table.insert(前置.目标组, k)
                            end
                        end
                        前置.目标数=#前置.目标组
            end,
        },---北冥之渊
   法术防御={
            类型 = "增益",
            目标 = function(self,编号,目标)
                     return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                    return self:魔法消耗(编号,50,数量,"法术防御")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                            状态.回合=5
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                         前置.目标=编号

            end,
        },---法术防御
----------------减益技能
  尸腐毒={
            类型 = "减益",
            门派 = "阴曹地府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量)
                  return self:魔法消耗(编号,50,数量,"尸腐毒")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 境界 = self:取指定法宝(编号,"九幽")
                    if 境界 and 取随机数()<=math.floor(境界*3) and self:取指定法宝(编号,"九幽",1) then
                        return 2
                    end
                    return 1
            end,
             添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.等级=等级
                      状态.回合=math.floor(等级/20)+3

            end,
            解除状态 = function(self,编号,目标,名称,数据)
                        if self.参战单位[数据.编号].奇经八脉.入骨 then
                            local 气血 = self.参战单位[编号].气血*0.05
                            self.战斗流程[数据.流程].扣除气血=气血
                            self.战斗流程[数据.流程].死亡=self:减少气血(编号,气血,目标,"尸腐毒")
                        end
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      if self.参战单位[前置.目标].法术状态[名称] then
                          前置.结束流程 = 1
                          return
                      elseif self.参战单位[前置.目标].鬼魂 or self.参战单位[前置.目标].精神 or self.参战单位[前置.目标].信仰 then
                          self:添加提示(self.参战单位[编号].玩家id,编号,"对方可能有鬼魂.精神.信仰,免疫负面状态,技能使用失败")
                          前置.结束流程 = 1
                          return
                      end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.减少气血 =math.floor(等级*4+self.参战单位[编号].伤害*0.1)
                        基础.造成伤势={比例=1}
                        if self.参战单位[目标].法术状态.百毒不侵 then
                            基础.无需状态 = 1
                        else
                            基础.添加状态 = {编号=编号}
                        end
                        local 境界 = self:取指定法宝(编号,"九幽",1)
                        if 境界 and 境界>=0 then
                            local 友方 = self:取友方目标组(编号,编号,10,"尸腐毒")
                            if #友方 == 0 then return end
                            self.战斗流程[数据.流程].受益方 = {}
                            for i,v in ipairs(友方) do
                                local 当前 = DeepCopy(self.计算属性)
                                当前.初始伤害 = math.floor(self.参战单位[v].气血*0.006+基础.减少气血*0.006*境界)
                                local 结果=self:取基础治疗计算(编号,v,"尸腐毒",等级,当前)
                                if self.参战单位[编号].奇经八脉.幽光 then
                                    结果.气血= 结果.气血 + 120
                                end
                                self:增加气血(v,结果.气血)
                                self.战斗流程[数据.流程].受益方[i]={受益方=v,伤害=结果.气血}
                            end
                        end
            end,
        },--尸腐毒
  魂飞魄散={
            类型 = "减益",
            门派 = "阴曹地府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                  return self:魔法消耗(编号,40,数量,"魂飞魄散")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                          基础.取消状态={}
                          local 状态 = self:随机对方增益状态(目标)
                          if 状态~=nil then
                              table.insert(基础.取消状态,状态)
                          else
                              self:随机取消经脉增益(目标)
                          end
                          if self.参战单位[编号].奇经八脉.魂飞 then
                                基础.添加状态={名称="锢魂术",回合=3}

                          end
                          if self.参战单位[编号].奇经八脉.扼命 and self:取封印状态(目标) then
                              for i=1,3 do
                                 local 状态 = self:随机对方增益状态(目标)
                                  if 状态 then
                                      table.insert(基础.取消状态,状态)
                                  else
                                       self:随机取消经脉增益(目标)
                                  end
                              end
                          end
                          基础.无需状态 = 1
            end,
        },--魂飞魄散
  噬毒={
            类型 = "减益",
            门派 = "阴曹地府",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=8}
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                  return self:魔法消耗(编号,50,数量,"噬毒")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[目标].法术状态.尸腐毒 then
                            基础.减少气血 = self.参战单位[编号].等级 * 10
                            基础.取消状态 = "尸腐毒"
                            self.参战单位[编号].噬毒六道加成 = 1
                            self.参战单位[编号].噬毒百爪加成 = 1
                        else
                            if 取随机数()<=50 then
                                self.参战单位[编号].噬毒六道加成 = 1
                            else
                                self.参战单位[编号].噬毒百爪加成 = 1
                            end
                        end
                        基础.无需状态 = 1
            end,
        },--噬毒
  勾魂={
            类型 = "减益",
            门派 = "盘丝洞",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    if self.参战单位[编号].奇经八脉.绝媚 then
                        return {开始=0,使用=8}
                    end
                    return {开始=0,使用=0}
            end,
            消耗 = function(self,编号,数量)
                  return self:魔法消耗(编号,40,数量,"勾魂")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.减少气血 =math.floor(等级*4+self.参战单位[编号].速度*0.1)
                        if self.参战单位[编号].奇经八脉.绝媚 then
                           基础.减少气血 = math.floor(基础.减少气血 * 1.9)
                        end

                        local 当前 = DeepCopy(self.计算属性)
                        当前.初始伤害 = math.floor(self.参战单位[编号].气血*0.006+基础.减少气血*0.006*等级)
                        local 结果=self:取基础治疗计算(编号,编号,"勾魂",等级,当前)
                        self:增加气血(编号,结果.气血)
                        self.战斗流程[数据.流程].增加气血=结果.气血
                        基础.无需状态 = 1
            end,
        },--勾魂
  摄魄={
            类型 = "减益",
            门派 = "盘丝洞",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    if self.参战单位[编号].奇经八脉.绝媚 then
                        return {开始=0,使用=8}
                    end
                    return {开始=0,使用=0}
            end,
            消耗 = function(self,编号,数量)
                  return self:魔法消耗(编号,35,数量,"摄魄")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        local 魔法=math.floor(等级*2+(self.参战单位[编号].速度*0.1))
                        if self.参战单位[编号].奇经八脉.绝媚 then
                           魔法 = math.floor(魔法 * 1.9)
                        end
                        if self.参战单位[编号].魔法 < 魔法 then
                            魔法 = math.floor(魔法-self.参战单位[编号].魔法)
                        end
                        self:减少魔法(目标,魔法)
                        self:增加魔法(编号,魔法)
                        基础.无需状态 = 1
            end,
        },--摄魄
  姐妹同心={
            类型 = "减益",
            门派 = "盘丝洞",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量)
                  return self:魔法消耗(编号,50,数量,"姐妹同心")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        local 魔法=math.floor(等级*3+(self.参战单位[编号].敏捷*0.1))
                        if self.参战单位[编号].奇经八脉.怜心 then
                            if self:取是否单独门派(编号) then
                                魔法 = math.floor(魔法 * 1.2)
                            else
                                 魔法 = math.floor(魔法 * 1.1)
                            end
                        end
                        if self.参战单位[编号].奇经八脉.魔瘴 and self.参战单位[目标].法术状态.瘴气 then
                              魔法 = math.floor(魔法 * 1.12)
                        end
                        if self.参战单位[编号].魔法 < 魔法 then
                            魔法 = math.floor(魔法-self.参战单位[编号].魔法)
                        end
                        self:减少魔法(目标,魔法)
                        if self.参战单位[目标].魔法<=0 then
                            if self.参战单位[编号].奇经八脉.倾情 then
                              self.参战单位[编号].奇经八脉倾情 = 1
                            end
                        end
                        基础.无需状态 = 1
            end,
        },--姐妹同心
  偷龙转凤={
            类型 = "减益",
            门派 = "盘丝洞",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=5}
            end,
            消耗 = function(self,编号,数量)
                  return self:魔法消耗(编号,500,数量,"偷龙转凤")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.减少气血 = math.floor(self.参战单位[目标].气血*0.1)
                        self:增加气血(编号,基础.减少气血)
                        self.战斗流程[数据.流程].增加气血=基础.减少气血
                        基础.无需状态 = 1
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        local 目标组 = self:取友方目标组(编号,编号,10,"偷龙转凤")
                        for k,v in pairs(目标组) do
                            self.参战单位[v].奇经八脉偷龙转凤 = 4
                        end
            end,
        },--偷龙转凤

  画地为牢={
            类型 = "减益",
            门派 = "天宫",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    return {开始=0,使用=5}
            end,
            消耗 = function(self,编号,数量)
                  return self:魔法消耗(编号,50,数量,"画地为牢")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=6
            end,
        },--画地为牢
  雷浪穿云={
            类型 = "减益",
            门派 = "龙宫",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量)
                  return self:魔法消耗(编号,60,1,"雷浪穿云")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=6
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.添加状态={目标=目标}
            end,
        },--雷浪穿云
  雾杀={
            类型 = "减益",
            门派 = "神木林",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量)
                  return self:魔法消耗(编号,50,数量,"雾杀")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=math.floor(等级/20)+3
                        状态.等级=境界
                        local 法宝 = self:取指定法宝(编号,"月影")
                        if self.参战单位[编号].奇经八脉.灵木 and 法宝 and  取随机数()<= 法宝*2 and self:取指定法宝(编号,"月影",1) then
                            状态.灵木 = true
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[目标].法术状态.百毒不侵 then
                            基础.无需状态 = 1
                        else
                            基础.减少气血 = math.floor(等级*2+self.参战单位[编号].法伤*0.2)
                            基础.添加状态={目标=目标,境界=基础.减少气血}
                        end
            end,
        },--雾杀
  催化={
            类型 = "减益",
            门派 = "神木林",
            奇经特效=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量)
                  return self:魔法消耗(编号,100,数量,"催化")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=2
                        if self.参战单位[目标].法术状态.雾杀 then
                           状态.回合 = self.参战单位[目标].法术状态.雾杀.回合
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.添加状态 = {}
                        if  self.参战单位[编号].风灵>=1 then
                            if self.参战单位[编号].奇经八脉.风魂 then
                                table.insert(基础.添加状态,{名称="护盾",目标=编号,等级=等级*2})
                            end
                            self:神木消耗风灵(self.参战单位[编号],1)
                            if not self.参战单位[编号].催化加成 then
                                    self.参战单位[编号].催化加成 = 0
                            end
                            self.参战单位[编号].催化加成 = self.参战单位[编号].催化加成 + 1
                            if self.参战单位[编号].催化加成>=10 then
                                    self.参战单位[编号].催化加成 = 10
                            end
                        end
                        if self.参战单位[目标].法术状态.雾杀 and self.参战单位[目标].法术状态.雾杀.编号==编号 then
                             table.insert(基础.添加状态,{目标=目标})
                        end
                        if not 基础.添加状态[1] then
                            基础.无需状态 = 1
                        end

            end,
        },--催化
  凋零之歌={
            类型 = "减益",
            门派 = "神木林",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量)
                  return self:魔法消耗(编号,100,数量,"凋零之歌")
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=8}
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                        状态.回合=2
                        状态.等级= 等级
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[编号].风灵> 0 then
                            基础.添加状态={}
                            table.insert(基础.添加状态, {名称="凋零之歌",等级=self.参战单位[编号].风灵})
                            local 额外目标 = self:取单个敌方目标(编号)
                            if 额外目标 and 额外目标~=0 then
                                local 添加等级 = math.floor((3+self.参战单位[编号].风灵*0.5)*self.参战单位[编号].等级)
                                table.insert(基础.添加状态, {名称="雾杀",目标=额外目标,境界=添加等级})
                            end
                            if self.参战单位[编号].奇经八脉.风魂 then
                                table.insert(基础.添加状态,{名称="护盾",目标=编号,等级=等级*2*self.参战单位[编号].风灵})
                            end
                            self:神木消耗风灵(self.参战单位[编号],self.参战单位[编号].风灵)
                        else
                            基础.无需状态 = 1
                        end
            end,
        },--凋零之歌
  摧心术={
            类型 = "减益",
            门派 = "无底洞",
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,100,数量,"摧心术")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 2
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                         状态.回合=math.floor(等级/35)+1
                         状态.速度=math.floor(self.参战单位[目标].速度 * 0.3)
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self:取是否封印(编号,目标,名称,等级) then
                            基础.添加状态={名称="摧心术"}
                        else
                            基础.无需状态=1
                        end
            end,
        },---摧心术--完成
  铁火双扬={
            类型 = "减益",
            门派 = "九黎城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                    if self.参战单位[编号].奇经八脉.擎天 then
                        return {开始=6,使用=12}
                    end
                    return {开始=0,使用=8}
            end,
            人数 = function(self,编号,等级) ---技能人数
                    if self.参战单位[编号].奇经八脉.擎天 then
                        return 3
                    end
                    return 2
            end,
            消耗 = function(self,编号,数量) --技能消耗 --
                  return self:魔法消耗(编号,20,数量,"铁火双扬")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.添加状态={名称="浮空"}
            end,
        },--铁火双扬
----------------封印技能
  反间之计={
            类型 = "封印",
            门派 = "大唐官府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"反间之计")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if (self.参战单位[目标].类型=="角色" and self:取玩家战斗()) or self.参战单位[目标].法术状态.花护 then
                            基础.不可封印 = 1
                       end
            end,

            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/20)+1
            end,
        },---反间之计--完成 ------
    顺势而为={
            类型 = "封印",
            门派 = "方寸山",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=6}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,60,"顺势而为")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       基础.直接封印 = 1
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=3
            end,
        },---顺势而为--完成
    离魂符={
            类型 = "封印",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,数量,"离魂符")
            end,

            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if self.参战单位[目标].法术状态.驱魔 or self.参战单位[目标].法术状态.花护 then
                            基础.不可封印 = 1
                       end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/20)+1
                      状态.速度=等级*2

            end,
        },---离魂符--完成
    失魂符={
            类型 = "封印",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,60,数量,"失魂符")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号

                      状态.回合=math.floor(等级/20)+1
                      状态.防御=等级*2
                      if self.参战单位[编号].奇经八脉.苦缠 then
                        状态.防御 = 状态.防御 * 1.05
                      end
                      if self.参战单位[编号].奇经八脉.灵咒 then
                        状态.防御 = 状态.防御 * 1.05
                      end
            end,
        },---失魂符--完成
    定身符={
            类型 = "封印",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,60,数量,"定身符")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if self.参战单位[目标].法术状态.驱魔 or self.参战单位[目标].法术状态.花护 then
                            基础.不可封印 = 1
                       end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/20)+1
                      状态.法防=等级*2
                      if self.参战单位[编号].奇经八脉.苦缠 then
                        状态.法防 = 状态.法防 * 1.05
                      end
                      if self.参战单位[编号].奇经八脉.灵咒 then
                        状态.法防 = 状态.法防 * 1.05
                      end

            end,
        },---定身符--完成
    催眠符={
            类型 = "封印",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,45,数量,"催眠符")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if self.参战单位[目标].法术状态.驱魔 or self.参战单位[目标].法术状态.花护 then
                            基础.不可封印 = 1
                       end
                       if self.参战单位[编号].奇经八脉.制约 then
                            基础.结果伤害 = -5
                       end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态) ---名称 目标 编号
                      状态.回合=4
            end,
        },---催眠符--完成
    失心符={
            类型 = "封印",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,60,数量,"失心符")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if self.参战单位[目标].法术状态.驱魔 or self.参战单位[目标].法术状态.花护 then
                            基础.不可封印 = 1
                       end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/20)+1
                      状态.法防=等级*2
                      if self.参战单位[编号].奇经八脉.苦缠 then
                        状态.法防=状态.法防*1.05
                      end
                      if self.参战单位[编号].奇经八脉.灵咒 then
                        状态.法防=状态.法防*1.05
                      end
            end,
        },---失心符--完成
    落魄符={
            类型 = "封印",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,40,数量,"落魄符")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if self.参战单位[目标].法术状态.驱魔 or self.参战单位[目标].法术状态.花护 then
                            基础.不可封印 = 1
                       end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/20)+1
            end,
        },---落魄符--完成
    失忆符={
            类型 = "封印",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,数量,"失忆符")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环

                       if self.参战单位[目标].法术状态.驱魔 or self.参战单位[目标].法术状态.花护 then
                            基础.不可封印 = 1
                       end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/20)+1
            end,
        },---失忆符--完成
    追魂符={
            类型 = "封印",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,数量,"追魂符")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if self.参战单位[目标].法术状态.驱魔 or self.参战单位[目标].法术状态.花护 then
                            基础.不可封印 = 1
                       end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)  ---名称 目标 编号
                      状态.回合=math.floor(等级/20)+1
                      状态.防御=等级*2

            end,
        },---追魂符--完成
    碎甲符={
            类型 = "封印",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                  local 开始,使用 = 0,0
                  if self.参战单位[编号].奇经八脉.碎甲 then
                      使用 = 6
                  end
                  return {开始=开始,使用=使用}
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量 = 3 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,数量,"碎甲符")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                      基础.直接封印 = 1
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                      状态.回合=math.floor(等级/20)+1
                      状态.防御=等级*4
                      状态.法伤=等级*4
                      状态.法防=等级*4
                      if self.参战单位[编号].奇经八脉.碎甲 then
                          状态.碎甲加成 = 等级*4
                          状态.碎甲回合 = self.回合数
                      end
            end,
        },---碎甲符--完成
    一笑倾城={
            类型 = "封印",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                  if self.参战单位[编号].奇经八脉.倾国 then
                       return {开始=0,使用=8}
                  end
                   return {开始=0,使用=0}
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量 = 3 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,80,数量,"一笑倾城")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)

                      状态.回合=3
                      if self.参战单位[编号].奇经八脉.嫣然 and 取随机数()<=40 then
                           状态.回合=状态.回合 + 1
                      end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环

                       基础.结果系数 = 0.5
                       if self.参战单位[编号].奇经八脉.嫣然 and 数据.次数==1 then
                         基础.结果伤害 = 基础.结果伤害  + 8
                       end
                       if self.参战单位[编号].奇经八脉.倾国 then
                           基础.结果伤害 = 基础.结果伤害  + 8
                       end
            end,
            封印成功 = function(self,编号,目标,等级,数据,返回)
                    if self.参战单位[编号].奇经八脉.机巧 and not self.参战单位[目标].法术状态.暗器毒 then
                        返回.添加状态={
                              名称 = "暗器毒",
                              等级 = 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("毒经") * 3
                            }
                    end
            end,
        },---一笑倾城--完成
  莲步轻舞={
            类型 = "封印",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"莲步轻舞")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                      状态.回合=math.floor(等级/20)+1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if self.参战单位[目标].法术状态.宁心 or self.参战单位[目标].法术状态.花护 then
                          基础.不可封印 =1
                       end
            end,
            封印成功 = function(self,编号,目标,等级,数据,返回)
                    if self.参战单位[编号].奇经八脉.机巧 and not self.参战单位[目标].法术状态.暗器毒 then
                        返回.添加状态={
                              名称 = "暗器毒",
                              等级 = 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("毒经") * 3
                            }
                    end
            end,
        },---莲步轻舞--完成
  如花解语={
            类型 = "封印",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,35,数量,"如花解语")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                      状态.回合=math.floor(等级/20)+1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if self.参战单位[目标].法术状态.宁心 or self.参战单位[目标].法术状态.花护 then
                          基础.不可封印 =1
                       end
            end,
            封印成功 = function(self,编号,目标,等级,数据,返回)
                    if self.参战单位[编号].奇经八脉.机巧 and not self.参战单位[目标].法术状态.暗器毒 then
                        返回.添加状态={
                              名称 = "暗器毒",
                              等级 = 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("毒经") * 3
                            }
                    end
            end,
        },---如花解语--完成
  似玉生香={
            类型 = "封印",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,数量,"似玉生香")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                      状态.回合=math.floor(等级/20)+1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if self.参战单位[目标].法术状态.宁心 or self.参战单位[目标].法术状态.花护 then
                          基础.不可封印 =1
                       end
            end,
            封印成功 = function(self,编号,目标,等级,数据,返回)
                    if self.参战单位[编号].奇经八脉.机巧 and not self.参战单位[目标].法术状态.暗器毒 then
                        返回.添加状态={
                              名称 = "暗器毒",
                              等级 = 玩家数据[self.参战单位[编号].玩家id].经脉:取师门技能等级("毒经") * 3
                            }
                    end
            end,
        },---似玉生香--完成
  碎玉弄影={
            类型 = "封印",
            门派 = "女儿村",
            奇经八脉 = 1,
            冷却 = function(self,编号)
                   return {开始=0,使用=5}
            end,
            技能流程 = function(self,编号,目标,境界)  ---------循环开始前
                        if self:愤怒消耗(编号,40,"碎玉弄影") then
                            self.参战单位[编号].指令.类型="法术"
                            self.参战单位[编号].指令.参数="似玉生香"
                            for i=1,2 do
                                self:法术攻击处理(编号)
                            end
                        else
                            self:添加提示(self.参战单位[编号].玩家id,编号,"#Y当前愤怒不足")
                        end
            end,
        },---碎玉弄影--完成
  娉婷袅娜={
            类型 = "封印",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,40,数量,"娉婷袅娜")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                      状态.回合=math.floor(等级/20)+1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if self.参战单位[编号].奇经八脉.抑怒  then
                          基础.结果系数 =基础.结果系数 + 0.1
                       end
            end,
        },---娉婷袅娜--完成
  飞花摘叶={
            类型 = "封印",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                if self.参战单位[编号].奇经八脉.飞花 then
                   return {开始=0,使用=8}
                end
                   return {开始=0,使用=0}
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>4 then 数量 = 4 end
                    if self.参战单位[编号].奇经八脉.花殇 then
                       数量 = 数量 + 6
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,60,数量,"飞花摘叶")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                      状态.回合=4
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       local 魔法=等级*2
                       if self.参战单位[编号].奇经八脉.飞花 then
                          魔法 = 魔法 * 2
                       end
                       if self.参战单位[目标].魔法<魔法 then 魔法 = self.参战单位[目标].魔法 end
                       self:减少魔法(目标,魔法)
                       local 恢复目标 =self:取友方目标组(编号,编号,3,"飞花摘叶")
                       for i,v in ipairs(恢复目标) do
                            self:增加魔法(v,math.floor((魔法/#恢复目标)))
                       end
                       基础.结果伤害=基础.结果伤害 + 5
            end,
        },---飞花摘叶--完成
  锢魂术={
            类型 = "封印",
            门派 = "阴曹地府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,数量,"锢魂术")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=6
                        if self.参战单位[编号].奇经八脉.克敌 then
                           状态.回合 = 状态.回合 + 1
                        end
                        if self.参战单位[编号].神器技能~=nil and self.参战单位[编号].神器技能.名称=="亡灵泣语" then
                            local 临时数额 = 1+self.参战单位[编号].神器技能.等级*0.05
                            状态.神器技能亡灵泣语 = 临时数额
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         if self.参战单位[编号].奇经八脉.索魂 then
                         local 增加几率=6+self.回合数*0.1
                         if  增加几率>=12 then 增加几率 = 12 end
                             基础.结果伤害=基础.结果伤害+增加几率
                         end
                         if self.参战单位[编号].奇经八脉.伤魂 and self.参战单位[编号].经脉流派=="勾魂阎罗"
                            and (self.参战单位[目标].法术状态.毒 or self.参战单位[目标].法术状态.暗器毒 or self.参战单位[目标].法术状态.尸腐毒) then
                            基础.结果系数 = 基础.结果系数 + 0.2
                         end
                         if self.参战单位[目标].奇经八脉慈心 then
                            基础.不可封印 = 1
                         end
            end,
        },---锢魂术--完成
  威慑={
            类型 = "封印",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,20,数量,"威慑")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=math.floor(等级/20)+1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       if self.参战单位[目标].法术状态.花护  or self.参战单位[目标].类型=="角色" then
                           基础.不可封印=1
                       end
            end,
        },---威慑--完成
  含情脉脉={
            类型 = "封印",
            门派 = "盘丝洞",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,50,数量,"含情脉脉")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=math.floor(等级/20)+1
                        if self.参战单位[编号].奇经八脉.忘忧 then
                            状态.忘忧 = true
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[编号].奇经八脉.忘川 and self.参战单位[目标].法术状态.瘴气 then
                           基础.结果系数=基础.结果系数 + 0.1
                        end
                        if self.参战单位[目标].法术状态.花护 or self.参战单位[目标].法术状态.寡欲令 then
                            基础.不可封印=1
                        end

                        if self.参战单位[编号].门派=="盘丝洞" and self.参战单位[编号].神话词条 and self.参战单位[编号].神话词条.九尾天狐
                           and 取随机数()<=self.参战单位[编号].神话词条.九尾天狐*16 then
                            基础.直接封印=1
                        end
            end,
            封印成功 = function(self,编号,目标,等级,数据,返回)
                        if self.参战单位[编号].奇经特效.神迷 then
                            self:增加愤怒(编号,4)
                            self:减少愤怒(目标,4)
                        end
            end,
        },---含情脉脉--完成
  瘴气={
            类型 = "封印",
            门派 = "盘丝洞",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,30,数量,"瘴气")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    local 数量 = math.floor(等级/30)+1
                    if 数量>3 then 数量 = 3 end
                    if self.参战单位[编号].奇经八脉.意乱 then
                       数量 = math.floor(等级/20) + 1
                    end
                    if 数量>7 then 数量 = 7 end
                    return 数量
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=4
                        if self.参战单位[编号].奇经八脉.忘川 then
                            状态.回合 = 状态.回合 +3
                        end
                        if self.参战单位[编号].奇经八脉.意乱 then
                            状态.回合 = 状态.回合 -1
                        end
                        if self.参战单位[编号].奇经八脉.绝殇 then
                            状态.绝殇 = self.回合数
                        end
                        if self.参战单位[编号].奇经八脉.迷意 then
                            状态.迷意 = true
                        end
                        if self.参战单位[编号].奇经八脉.连绵 then
                            状态.回合 = 状态.回合 +4
                        end
            end,
            解除状态 = function(self,编号,目标,名称,数据)
                         if self.参战单位[目标].法术状态.瘴气.绝殇
                            and self.回合数 ==self.参战单位[目标].法术状态.瘴气.绝殇
                            and (名称=="晶清决" or 名称=="玉清诀") then
                            数据.不可解除 = 1
                         end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                            基础.直接封印=1
                            if self.参战单位[编号].奇经八脉.媚态 and self.参战单位[目标].法术状态.寡欲令 then
                                基础.取消状态="寡欲令"
                            end
            end,
        },---瘴气--完成
  魔音摄魂={
            类型 = "封印",
            门派 = "盘丝洞",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,500,数量,"魔音摄魂")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                       状态.回合=4
                        if self.参战单位[编号].奇经八脉.绝殇 then
                            状态.绝殇 = self.回合数
                        end
                        if self.参战单位[编号].奇经八脉.迷意 then
                            状态.迷意 = true
                        end
            end,
            解除状态 = function(self,编号,目标,名称,数据)
                        if self.参战单位[目标].法术状态.瘴气.绝殇
                            and self.回合数 ==self.参战单位[目标].法术状态.瘴气.绝殇
                            and (名称=="晶清决" or 名称=="玉清诀") then
                            数据.不可解除 = 1
                        end
                        if self.回合数 ~=self.参战单位[目标].法术状态.魔音摄魂.绝殇 and self.参战单位[数据.编号].奇经八脉.绵密 then
                            self:添加状态组处理(编号,编号,{名称="瘴气",回合=4},"魔音摄魂",self.参战单位[数据.编号].等级,数据.流程,数据.挨打)
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                            if self.参战单位[目标].法术状态.花护 or self.参战单位[目标].法术状态.寡欲令 then
                                基础.不可封印=1
                            end
                            if self.参战单位[编号].奇经八脉.鼓乐 then
                               基础.结果系数=基础.结果系数 + 0.2
                            end
                            if self.参战单位[编号].奇经八脉.忘川 and  self.参战单位[目标].法术状态.瘴气 then
                               基础.结果系数=基础.结果系数 + 0.1
                            end
            end,
            封印成功 = function(self,编号,目标,等级,数据,返回)
                        if self.参战单位[编号].奇经特效.神迷 then
                            self:增加愤怒(编号,4)
                            self:减少愤怒(目标,4)
                        end
            end,
        },---魔音摄魂--完成
  落花成泥={
            类型 = "封印",
            门派 = "盘丝洞",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,20,"落花成泥")
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=4}
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.直接封印=1
            end,
        },---落花成泥--完成
  镇妖={
            类型 = "封印",
            门派 = "天宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:魔法消耗(编号,45,数量,"镇妖")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=math.floor(等级/20)+1
                        状态.伤害=等级*3
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                         基础.直接封印=1
            end,
        },---镇妖--完成
  错乱={
            类型 = "封印",
            门派 = "天宫",
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,60,数量,"错乱")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=math.floor(等级/20)+1
                        if self.参战单位[编号].奇经八脉.震慑 then
                            状态.震慑 = true
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                          if self.参战单位[目标].法术状态.花护 then
                                基础.不可封印=1
                          end
            end,
        },---错乱--完成
  百万神兵={
            类型 = "封印",
            门派 = "天宫",
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"百万神兵")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                         状态.回合=math.floor(等级/20)+1
            end,
        },---百万神兵--完成
  日月乾坤={
            类型 = "封印",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,35,数量,"日月乾坤")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                         状态.回合=math.floor(等级/20)+1
                         if self.参战单位[编号].奇经八脉.陌宝 then
                            状态.陌宝 = true
                         end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[编号].奇经八脉.乾坤 then
                            基础.初始系数=基础.初始系数+0.05
                        end
                        if self.参战单位[编号].奇经八脉.存神 and 取随机数()<=35 then
                            基础.初始系数=基础.初始系数+1
                        end
                        if self.参战单位[目标].奇经八脉.存思 and self.回合数/3==math.floor(self.回合数/3) then
                              基础.初始伤害 = 基础.初始伤害 + 150
                        end
                        if self.参战单位[编号].奇经八脉.玄机 then
                            if self:取异常数量(self.参战单位[目标].编号)>=1 then
                               基础.初始伤害=基础.初始伤害+5
                            end
                        end
                        if self.参战单位[目标].法术状态.花护  then
                                基础.不可封印=1
                        end
                        if self.参战单位[编号].奇经八脉.归本 and 取随机数()<=60 then
                              local 状态 = self:随机对方增益状态(目标)
                              if 状态 then
                                  基础.取消状态 = 状态
                              else
                                  self:随机取消经脉增益(目标)
                              end
                        end
                        if self.参战单位[目标].神器技能 and self.参战单位[目标].神器技能.名称=="斗转参横"
                            and self.参战单位[目标].法术状态.生命之泉 then
                            local 临时数额 = self.参战单位[目标].神器技能.等级*3
                            基础.初始伤害=基础.初始伤害+临时数额
                        end
                        if self.参战单位[目标].门派=="五庄观" and self.参战单位[目标].神话词条
                            and self.参战单位[目标].神话词条.地仙老祖
                            and 取随机数()<=self.参战单位[目标].神话词条.地仙老祖*15 then
                            基础.初始伤害=基础.初始伤害+self.参战单位[目标].神话词条.地仙老祖*10
                        end
            end,
        },---日月乾坤--完成
  夺魄令={
            类型 = "封印",
            门派 = "无底洞",
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,30,数量,"夺魄令")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=math.floor(等级/20)+1
                        状态.等级=等级
                        if self.参战单位[编号].奇经八脉.陷阱 then
                            状态.陷阱 = 编号
                        end
            end,
            解除状态 = function(self,编号,目标,名称,数据)
                        if self.参战单位[目标].法术状态.夺魄令.陷阱 then
                            self.参战单位[目标].奇经八脉陷阱削弱 =玩家数据[self.参战单位[数据.编号].玩家id].经脉:取师门技能等级("阴风绝章")*1.5
                            self.参战单位[数据.编号].奇经八脉陷阱加成 = 1
                        end
            end,
            --数据(参数)--流程=流程,挨打=挨打,编号=取编号(添加状态的编号)
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[目标].法术状态.花护 then
                                基础.不可封印=1
                        end
                        if self.参战单位[目标].奇经八脉.椎骨 and self.参战单位[目标].燃血术加成 then
                            基础.初始伤害 = 基础.初始伤害 + 120
                        end
                        if self.参战单位[目标].燃血术加成 then
                            基础.结果伤害 = 基础.结果伤害 + 5
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        self.参战单位[编号].燃血术加成 = nil
            end,
        },---夺魄令--完成
  煞气诀={
            类型 = "封印",
            门派 = "无底洞",
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"煞气诀")
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=5}
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                         状态.回合=2
            end,
        },---煞气诀--完成
  惊魂掌={
            类型 = "封印",
            门派 = "无底洞",
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,50,数量,"惊魂掌")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                         状态.回合=math.floor(等级/20)+1
                         状态.类型=2
                        if self.参战单位[编号].奇经八脉.持戒 and self.参战单位[编号].门派=="无底洞" then
                            状态.回合=3
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[目标].奇经八脉.持戒 and  self.参战单位[目标].门派=="无底洞" then
                            基础.结果系数 = 基础.结果系数 + 2
                        end
            end,
        },---惊魂掌--完成
  妖风四起={
            类型 = "封印",
            门派 = "无底洞",
            奇经八脉=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:魔法消耗(编号,100,数量,"妖风四起")
            end,

            冷却 = function(self,编号)
                  return {开始=0,使用=4}
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                         状态.回合=3

            end,
            封印成功 = function(self,编号,目标,等级,数据,返回)
                        self.战斗流程[数据.流程].扣除气血=self.参战单位[编号].气血*0.4
                        self.战斗流程[数据.流程].死亡=self:减少气血(编号,self.参战单位[编号].气血*0.4,目标,"妖风四起")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.减少气血=math.floor(self.参战单位[编号].气血*0.4)
                        if self.参战单位[目标].法术状态.花护 then
                                基础.不可封印=1
                        end
                        if self.参战单位[目标].奇经八脉.椎骨 and  self.参战单位[目标].燃血术加成 then
                            基础.初始伤害 = 基础.初始伤害 + 120
                        end
                        if self.参战单位[目标].燃血术加成 then
                            基础.结果伤害 = 基础.结果伤害 + 5
                        end
                        基础.结果系数=基础.结果系数+0.4
            end,
        },---妖风四起--完成
---------------------------必杀技
  斩龙诀={
            类型 = "法伤",
            门派 = "大唐官府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                 return self:愤怒消耗(编号,150,"斩龙诀")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[目标].门派=="龙宫" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---斩龙诀--完成
  情天恨海={
            类型 = "法伤",
            门派 = "女儿村",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                 return self:愤怒消耗(编号,150,"情天恨海")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[目标].门派=="五庄观" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---情天恨海--完成
  魔兽啸天={
            类型 = "法伤",
            门派 = "狮驼岭",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,150,"魔兽啸天")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].门派=="天宫" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---魔兽啸天--完成
  三星灭魔={
            类型 = "法伤",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"三星灭魔")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[目标].门派=="魔王寨" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---三星灭魔---
  紫气东来={
            类型 = "法伤",
            门派 = "化生寺",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"紫气东来")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[目标].门派=="普陀山" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---紫气东来---
  冤魂不散={
            类型 = "法伤",
            门派 = "阴曹地府",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"冤魂不散")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].门派=="大唐官府" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---冤魂不散---
  踏山裂石={
            类型 = "法伤",
            门派 = "魔王寨",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"踏山裂石")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].门派=="化生寺" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---踏山裂石---
  夺命蛛丝={
            类型 = "法伤",
            门派 = "盘丝洞",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"夺命蛛丝")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].门派=="方寸山" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---夺命蛛丝-----
  天诛地灭={
            类型 = "法伤",
            门派 = "天宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"天诛地灭")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0018 * 等级^2/等级
                        if self.参战单位[目标].门派=="阴曹地府" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---天诛地灭-----
  蝼蚁蚀天={
            类型 = "法伤",
            门派 = "神木林",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"蝼蚁蚀天")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        if self.参战单位[目标].门派=="凌波城" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---蝼蚁蚀天-----
  龙啸九天={
            类型 = "法伤",
            门派 = "龙宫",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"龙啸九天")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0018 * 等级^2/等级
                        if self.参战单位[目标].门派=="盘丝洞" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---龙啸九天-----
  五行错位={
            类型 = "法伤",
            门派 = "普陀山",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"五行错位")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0018 * 等级^2/等级
                        if self.参战单位[目标].门派=="女儿村" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---五行错位-----
  太极生化={
            类型 = "法伤",
            门派 = "五庄观",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"太极生化")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0018 * 等级^2/等级
                        if self.参战单位[目标].门派=="狮驼岭" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---太极生化-----
  万木凋枯={
            类型 = "法伤",
            门派 = "无底洞",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"万木凋枯")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0012 * 等级^2/等级
                        if self.参战单位[目标].门派=="神木林" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---万木凋枯-----
  指地成钢={
            类型 = "法伤",
            门派 = "凌波城",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return self:愤怒消耗(编号,150,"指地成钢")

            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0018 * 等级^2/等级
                        if self.参战单位[目标].门派=="无底洞" then
                            基础.固定结果=self.参战单位[目标].最大气血
                        end
            end,
        },---指地成钢-----
--------------法宝灵宝
  苍白纸人={
            类型 = "增益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=3
                        if self.参战单位[编号].奇经八脉.坚壁 and not self.参战单位[编号].奇经八脉坚壁1 then
                           状态.回合 = 4
                           self.参战单位[编号].奇经八脉坚壁1 = 1
                        end
            end,
        },---苍白纸人-----
  五彩娃娃={
            类型 = "增益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 =  编号

            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=2
            end,
        },---五彩娃娃-----
  混元伞={
            类型 = "增益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 =  编号

            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=3
                        if self.参战单位[编号].奇经八脉.坚壁 and not self.参战单位[编号].奇经八脉坚壁 then
                           状态.回合 = 4
                           self.参战单位[编号].奇经八脉坚壁 = 1
                        end
            end,
        },---混元伞-----
  乾坤玄火塔={
            类型 = "增益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=5
                        local 愤怒=math.floor(150*(math.floor(境界/5)*0.02+0.02))
                        self:增加愤怒(编号,愤怒)
            end,
        },---乾坤玄火塔-----
  聚妖铃={
            类型 = "增益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    local 存在=0
                    for n=1,#self.参战单位 do
                        if self.参战单位[n].模型=="牛头" and self.参战单位[n].名称=="牛头" then
                          存在=存在+2
                        end
                    end
                    if  存在<=1 or self:取玩家战斗() then
                        return true
                    else
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/只能存在一个相同的#G/宠物")
                        return false
                    end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       self:执行怪物召唤(编号,11,self.参战单位[编号].队伍,1)
                       基础.无需状态 = 1
            end,
        },---聚妖铃-----
  万鬼幡={
            类型 = "增益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    local 存在=0
                    for n=1,#self.参战单位 do
                        if self.参战单位[n].模型=="野鬼" and self.参战单位[n].名称=="野鬼" then
                          存在=存在+2
                        end
                    end
                    if  存在<=1 or self:取玩家战斗() then
                        return true
                    else
                        self:添加提示(self.参战单位[编号].玩家id,编号,"#Y/只能存在一个相同的#G/宠物")
                        return false
                    end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                       self:执行怪物召唤(编号,12,self.参战单位[编号].队伍,1)
                       基础.无需状态 = 1
            end,
        },---万鬼幡-----
  干将莫邪={
            类型 = "增益",
            法宝=1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 =  编号
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=4
                        状态.类型=2
                        伤害= math.floor(境界*20)
                        if self.参战单位[编号].奇经八脉.干将 then
                          状态.伤害 = 状态.伤害*1.3
                        end
                        if self.参战单位[编号].奇经八脉.神凝 and not self.参战单位[编号].奇经八脉.干将 then
                          状态.封印命中等级 = 300
                        end

                        if self.参战单位[编号].奇经八脉.奋战 then
                          状态.回合 = 状态.回合 + 2
                          状态.伤害 = 0
                          状态.连击 = 40
                        end
            end,
        },---干将莫邪-----
  鬼泣={
            类型 = "减益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前 ---不确定
                        if self.参战单位[前置.目标].类型 =="角色" then
                            self:添加提示(self.参战单位[编号].玩家id,编号,"该法宝不能对角色使用?")
                            前置.结束流程 = 1
                        end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        if self.参战单位[目标].类型 =="角色" then
                            状态.不可添加 = 1
                        else
                            状态.回合=2
                        end
            end,
        },---鬼泣-----
  摄魂={
            类型 = "减益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            冷却 = function(self,编号)
                    if self.参战单位[编号].奇经八脉.拘魄 then
                        return {开始=0,使用=10}
                    end
                    return {开始=0,使用=0}
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=3
                        if self.参战单位[编号].奇经八脉.拘魄 then
                           状态.拘魄 =true
                        end
                        if self.参战单位[编号].奇经八脉.聚魂 and self.参战单位[编号].门派=="阴曹地府" then
                           状态.聚魂 =true
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[编号].奇经八脉.入魂 then
                             self.参战单位[编号].奇经八脉入魂=2
                        end
            end,
        },---摄魂-----
  断线木偶={
            类型 = "减益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=3
            end,
        },---断线木偶-----
  无魂傀儡={
            类型 = "减益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=2
            end,
        },---无魂傀儡-----
  缚妖索={
            类型 = "减益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗

                    return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=math.floor(境界/3)
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前 ---不确定
                        if self.参战单位[前置.目标].类型 ~="角色" then
                            self:添加提示(self.参战单位[编号].玩家id,编号,"该法宝只能对角色使用?")
                            前置.结束流程 = 1
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[目标].类型 ~="角色" or 取随机数() >= 60 then
                           基础.无需状态 = 1

                        end
            end,
        },---缚妖索-----
  捆仙绳={
            类型 = "减益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=math.floor(境界/3)
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前 ---不确定
                        if self.参战单位[前置.目标].类型 ~="角色" then
                            self:添加提示(self.参战单位[编号].玩家id,编号,"该法宝只能对角色使用?")
                            前置.结束流程 = 1
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[目标].类型 ~="角色" or 取随机数() >= 60 then
                           基础.无需状态 = 1
                        end
            end,
        },---捆仙绳-----
  惊魂铃={
            类型 = "减益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前 ---不确定
                        if self.参战单位[前置.目标].类型 =="角色" then
                            self:添加提示(self.参战单位[编号].玩家id,编号,"该法宝不能对角色使用?")
                            前置.结束流程 = 1
                        end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        if self.参战单位[目标].类型 =="角色" then
                            状态.不可添加 = 1
                        else
                            状态.回合=2
                        end
            end,
        },---惊魂铃-----
  七杀={
            类型 = "减益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=3
                        状态.防御=math.floor(境界*20)
            end,

        },---七杀-----
  发瘟匣={
            类型 = "减益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        if 取随机数()<= math.floor(境界*2.5) then
                            状态.回合=3
                        else
                            状态.不可添加=1
                        end
            end,
        },---发瘟匣-----
  无尘扇={
            类型 = "减益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=3
            end,
        },---无尘扇-----
 无字经={
            类型 = "减益",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        if 取随机数()<= math.floor(境界*3) then
                            状态.回合=3
                        else
                            状态.不可添加=1
                        end
            end,
        },---无尘扇-----

  清心咒={
            类型 = "恢复",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.取消状态 = self.技能数据.法宝异常
            end,

        },---无尘扇-----
  七宝玲珑灯={
            类型 = "恢复",
            法宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if 取随机数()<= math.floor(等级*2) then
                            基础.取消状态 = self.技能数据.法宝异常
                        end
            end,
        },---无尘扇-----
  飞剑={
            类型 = "法宝",
            角色 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                self.参战单位[编号].伤害=self.参战单位[编号].伤害+math.floor(境界*3.3)
            end,
        },---飞剑-----
  拭剑石={
            类型 = "法宝",
            角色 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                self.参战单位[编号].伤害=self.参战单位[编号].伤害+境界*10
                self.参战单位[编号].固定伤害=self.参战单位[编号].固定伤害+境界*10
            end,
        },---拭剑石-----
  风袋={
            类型 = "法宝",
            角色 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                  self.参战单位[编号].速度=self.参战单位[编号].速度+math.floor(境界*3)+10
            end,
        },---风袋-----
  五火神焰印={
            类型 = "法宝",
            角色 = 1,
            门派 = "魔王寨",
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                      self.参战单位[编号].法暴 = self.参战单位[编号].法暴 + math.floor(境界*0.5+3)
                      if self.参战单位[编号].奇经八脉.神焰 then
                        self.参战单位[编号].法暴 = self.参战单位[编号].法暴 + 6
                      end
                      if self.参战单位[编号].奇经八脉.焰星 and self:取装备五行(编号,3)=="火" then
                         self.参战单位[编号].法暴 = self.参战单位[编号].法暴 + 5
                      end
                      if self.参战单位[编号].奇经八脉.焰星 and self:取装备五行(编号,4)=="火" then
                         self.参战单位[编号].法暴 = self.参战单位[编号].法暴 + 5
                      end
            end,
        },---五火神焰印-----
  附灵玉={
            类型 = "法宝",
            角色 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                        self.参战单位[编号].法伤=self.参战单位[编号].法伤+math.floor(境界*3)+10
                        self.参战单位[编号].法防=self.参战单位[编号].法防+math.floor(境界*3*0.7)+7
            end,
        },---五火神焰印-----
  月影={
            类型 = "法宝",
            角色 = 1,
            门派 = "神木林",
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                        self.参战单位[编号].法连 = self.参战单位[编号].法连 + math.floor(境界*0.5+3)
                        if self.参战单位[编号].奇经八脉.月影 then
                            self.参战单位[编号].法连 = self.参战单位[编号].法连 +  6
                        end
            end,
        },---月影-----
  流影云笛={
            类型 = "法宝",
            角色 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                self.参战单位[编号].法伤 = self.参战单位[编号].法伤 + math.floor(境界*8)
            end,
        },---流影云笛-----
  蟠龙玉璧={
            类型 = "法宝",
            角色 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                self.参战单位[编号].防御 = self.参战单位[编号].防御 + math.floor(境界*20)+100
                self.参战单位[编号].法防 = self.参战单位[编号].法防 + math.floor(境界*20)+100
            end,
        },---蟠龙玉璧-----
  落星飞鸿={
            类型 = "法宝",
            角色 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                self.参战单位[编号].伤害 = self.参战单位[编号].伤害 + math.floor(境界*12)

            end,
        },---落星飞鸿-----
  归元圣印={
            类型 = "法宝",
            角色 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                self.参战单位[编号].治疗能力 = self.参战单位[编号].治疗能力 + math.floor(境界*20)
            end,
        },---归元圣印-----
  碧玉葫芦={
            类型 = "法宝",
            角色 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                self.参战单位[编号].治疗能力 = self.参战单位[编号].治疗能力 + math.floor(境界*10)
            end,
        },---碧玉葫芦-----
  嗜血幡={
            类型 = "法宝",
            角色 = 1,
            被动 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                self.参战单位[编号].必杀 = self.参战单位[编号].必杀 + math.floor(境界*0.5)
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.技能提示  = true
            end,
        },---嗜血幡-----
  定风珠={
            类型 = "法宝",
            角色 = 1,
            门派 = "五庄观",
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                    self.参战单位[编号].封印命中等级 = self.参战单位[编号].封印命中等级 + math.floor(境界*10)
            end,
        },---定风珠-----
  天师符={
            类型 = "法宝",
            角色 = 1,
            门派 = "方寸山",
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                    self.参战单位[编号].封印命中等级 = self.参战单位[编号].封印命中等级 + math.floor(境界*10)
            end,
        },---天师符-----
  雷兽={
            类型 = "法宝",
            角色 = 1,
            门派 = "天宫",
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                    self.参战单位[编号].封印命中等级 = self.参战单位[编号].封印命中等级 + math.floor(境界*10)
            end,
        },---雷兽-----
  幽灵珠={
            类型 = "法宝",
            角色 = 1,
            门派 = "无底洞",
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                    self.参战单位[编号].封印命中等级 = self.参战单位[编号].封印命中等级 + math.floor(境界*10)
            end,
        },---幽灵珠-----
  迷魂灯={
            类型 = "法宝",
            角色 = 1,
            门派 = "盘丝洞",
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                    self.参战单位[编号].封印命中等级 = self.参战单位[编号].封印命中等级 + math.floor(境界*10)
            end,
        },---迷魂灯-----
  织女扇={
            类型 = "法宝",
            角色 = 1,
            门派 = "女儿村",
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                    self.参战单位[编号].封印命中等级 = self.参战单位[编号].封印命中等级 + math.floor(境界*10)
            end,
        },---织女扇-----
  九黎战鼓={
            类型 = "法宝",
            宝宝 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                self.参战单位[编号].伤害 = self.参战单位[编号].伤害 + math.floor(境界*5)
            end,
        },---九黎战鼓-----
  盘龙壁={
            类型 = "法宝",
            宝宝 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                self.参战单位[编号].防御 = self.参战单位[编号].防御 + math.floor(境界*5)
            end,
        },---盘龙壁-----
  神行飞剑={
            类型 = "法宝",
            宝宝 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                self.参战单位[编号].速度 = self.参战单位[编号].速度 + math.floor(境界*2)
            end,
        },---神行飞剑-----
  汇灵盏={
            类型 = "法宝",
            宝宝 = 1,
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                    self.参战单位[编号].法伤 = self.参战单位[编号].法伤+math.floor(境界*2)+10
                    self.参战单位[编号].法防 = self.参战单位[编号].法防+math.floor(境界*2*0.7)+7
            end,
        },---汇灵盏-----
  兽王令={
            类型 = "法宝",
            宝宝 = 1,
            门派 = "狮驼岭",
            加载法宝 = function(self,编号,境界,五行,主人) -------技能连击处理
                        self.参战单位[编号].伤害 = self.参战单位[编号].伤害+math.floor(境界*5)
                        self.参战单位[编号].防御 = self.参战单位[编号].防御+math.floor(境界*3)
                        self.参战单位[编号].速度 = self.参战单位[编号].速度+math.floor(境界*2)
                        self.参战单位[编号].法伤 = self.参战单位[编号].法伤+math.floor(境界*3)
                        self.参战单位[编号].法防 = self.参战单位[编号].法防+math.floor(境界*3*0.7)
            end,
        },---汇灵盏-----
-------灵宝
  断穹巨剑={
            类型 = "物伤",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        if 境界==1 then
                            基础.初始系数 = 1.1
                        elseif 境界==3 then
                                基础.初始系数 = 1.8
                        elseif 境界==7 then
                                基础.初始系数 = 3
                        end
                        local 当前 = self.参战单位[编号].溅射
                        self.参战单位[编号].溅射 = 0.25 * (基础.初始系数 - 1)
                        self:物理同时多个攻击(编号, nil, 等级, {目标 = 目标, 人数 = 3})
                        self.参战单位[编号].溅射 = 当前

            end,
        },---断穹巨剑-----
  静心禅珠={
            类型 = "恢复",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            人数 = function(self,编号,等级) ---技能人数
                     return 10
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if 境界==1 then
                            倍数=0.08
                        elseif 境界==3 then
                                倍数=0.16
                        elseif 境界==7 then
                                倍数=0.32
                        end
                        基础.初始伤害 = 1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*倍数)
            end,
        },---静心禅珠-----
  宁心道符={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=6
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                       基础.添加状态={目标=目标,境界 = 1}
                       if 境界==1 then
                            基础.添加状态.境界 = 9
                        elseif 境界==3 then
                                基础.添加状态.境界 = 18
                        elseif 境界==7 then
                                基础.添加状态.境界 = 36
                        end
            end,
        },---宁心道符-----
  相思寒针={
            类型 = "减益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        if 境界==1 then
                            状态.回合 = 2
                        elseif 境界==3 then
                                状态.回合 = 4
                        elseif 境界==7 then
                                状态.回合 = 8
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                       基础.添加状态={目标=目标,境界=30}
            end,
        },---相思寒针-----
  风舞心经={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 3
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前 ---不确定
                        前置.目标 = 编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        基础.添加状态={目标=目标,境界=1}
                        if 境界==1 then
                            基础.添加状态.境界 = 2
                        elseif 境界==3 then
                                基础.添加状态.境界 = 8
                        elseif 境界==7 then
                                基础.添加状态.境界 = 15
                        end
                        self.参战单位[编号].风灵 = 基础.添加状态.境界
            end,
        },---风舞心经-----

  青狮獠牙={
            类型 = "减益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前 ---不确定
                        前置.目标组={}
                        for k,v in pairs(self.参战单位) do
                            if v.队伍~=self.参战单位[编号].队伍 and v.类型=="角色" then
                                table.insert(前置.目标组, k)
                            end
                        end
                        前置.目标数=#前置.目标组
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if 境界 == 1 then
                            倍数=2
                        elseif 境界 == 3 then
                            倍数=8
                        elseif 境界 == 7 then
                            倍数=20
                        end
                        if not self.参战单位[目标].灵宝青狮獠牙 then
                            self.参战单位[目标].灵宝青狮獠牙=倍数
                        else
                            self.参战单位[目标].灵宝青狮獠牙 = self.参战单位[目标].灵宝青狮獠牙 + 倍数
                        end
                        if self.参战单位[目标].灵宝青狮獠牙>=80 then
                            self.参战单位[目标].灵宝青狮獠牙 = 80
                        end
                        if self.参战单位[目标].召唤兽 and self.参战单位[self.参战单位[目标].召唤兽] then
                            if not self.参战单位[self.参战单位[目标].召唤兽].原最大气血 then
                                self.参战单位[self.参战单位[目标].召唤兽].原最大气血 = self.参战单位[self.参战单位[目标].召唤兽].最大气血
                            end
                            self.参战单位[self.参战单位[目标].召唤兽].最大气血 = qz(self.参战单位[self.参战单位[目标].召唤兽].原最大气血*(1-self.参战单位[目标].灵宝青狮獠牙/100))
                            if self.参战单位[self.参战单位[目标].召唤兽].气血 > self.参战单位[self.参战单位[目标].召唤兽].最大气血 then
                                self.参战单位[self.参战单位[目标].召唤兽].气血 = self.参战单位[self.参战单位[目标].召唤兽].最大气血
                            end
                        end
                        基础.无需状态 = 1
            end,
        },---青狮獠牙-----
  冥火炼炉={
            类型 = "减益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        基础.取消状态 = "冥火炼炉"
                        基础.添加状态={目标=目标,境界=0.001}
                        if 境界==1 then
                            基础.添加状态.境界 = 0.005
                        elseif 境界==3 then
                                基础.添加状态.境界 = 0.02
                        elseif 境界==7 then
                                基础.添加状态.境界 = 0.06
                        end
            end,
        },---冥火炼炉-----
  缚仙蛛丝={
            类型 = "减益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if 消耗 == 1 then
                            倍数=1
                        elseif 消耗 == 3 then
                            倍数=5
                        elseif 消耗 == 7 then
                            倍数=20
                        end
                        self.参战单位[目标].灵宝缚仙蛛丝 = {}
                        while #self.参战单位[目标].灵宝缚仙蛛丝 < 倍数 do
                            local 随机 = 取随机数(1, 100)
                            local 相同 = false
                            for _, v in ipairs(self.参战单位[目标].灵宝缚仙蛛丝) do
                                if v == 随机 then
                                    相同 = true
                                    break
                                end
                            end
                            if not 相同 then
                              table.insert(self.参战单位[目标].灵宝缚仙蛛丝, 随机)
                            end
                        end
                        table.sort(self.参战单位[目标].灵宝缚仙蛛丝,function(a,b) return a<b end )
                        基础.无需状态 = 1
            end,
        },---冥火炼炉-----
  煞魂冥灯={
            类型 = "减益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if 消耗 == 1 then
                            倍数=0.03
                        elseif 消耗 == 3 then
                            倍数=0.1
                        elseif 消耗 == 7 then
                            倍数=0.3
                        end
                        if not self.参战单位[目标].原最大气血 then self.参战单位[目标].原最大气血 = self.参战单位[目标].最大气血 end
                        self.参战单位[目标].最大气血 = math.floor(self.参战单位[目标].原最大气血 * (1-倍数))
                        if self.参战单位[目标].气血上限 > self.参战单位[目标].最大气血 then
                            基础.造成伤势 = {数额=self.参战单位[目标].气血上限-self.参战单位[目标].最大气血}
                        end
                        if self.参战单位[目标].气血 > self.参战单位[目标].最大气血 then
                            基础.减少气血 =  math.floor(self.参战单位[目标].气血 -self.参战单位[目标].最大气血)
                        end
                        基础.无需状态 = 1
            end,
        },---煞魂冥灯-----
  九霄龙锥={
            类型 = "减益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        基础.取消状态 = "九霄龙锥"
                        基础.添加状态={目标=目标,境界=0.001}
                        if 境界==1 then
                            基础.添加状态.境界 = 0.03
                        elseif 境界==3 then
                                基础.添加状态.境界 = 0.1
                        elseif 境界==7 then
                                基础.添加状态.境界 = 0.3
                        end
            end,

        },---九霄龙锥-----
  化怨清莲={
            类型 = "减益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        基础.取消状态 = "化怨清莲"
                        基础.添加状态={目标=目标,境界=0.001}
                        if 境界==1 then
                            基础.添加状态.境界 = .05
                        elseif 境界==3 then
                                基础.添加状态.境界 = 0.15
                        elseif 境界==7 then
                                基础.添加状态.境界 = 0.4
                        end
            end,
        },---化怨清莲-----
  真阳令旗={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            人数 = function(self,编号,等级,境界) ---技能人数
                     if 境界==1 then
                         return 1
                    elseif 境界==3 then
                            return 5
                    elseif 境界==7 then
                            return 10
                    end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if self.参战单位[目标].类型 == "角色" then
                            if 境界 == 1 then
                              倍数=0.02
                            elseif 境界 == 3 then
                              倍数=0.08
                            elseif 境界 == 7 then
                              倍数=0.16
                            end
                        else
                            if 境界 == 1 then
                                倍数=0.02
                            elseif 境界 == 3 then
                                倍数=0.05
                            elseif 境界 == 7 then
                                倍数=0.1
                            end
                        end
                        if not  self.参战单位[目标].灵宝真阳令旗 then
                            self.参战单位[目标].灵宝真阳令旗=倍数
                        else
                            self.参战单位[目标].灵宝真阳令旗=self.参战单位[目标].灵宝真阳令旗 + 倍数
                        end
                        基础.无需状态 = 1
            end,
        },---真阳令旗-----
  天雷音鼓={
            类型 = "法伤",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return self:取单个敌方目标(编号)
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            技能流程 = function(self,编号,目标,境界)  ---------循环开始前
                          local 倍数 = 0
                          if 境界 == 1 then
                            倍数=2
                          elseif 境界 == 3 then
                            倍数=8
                          elseif 境界 == 7 then
                            倍数=20
                          end
                          for i=1,倍数 do
                              self:法攻技能计算(编号,"天雷音鼓",self.参战单位[编号].等级,nil,1,境界)
                          end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                            基础.固定结果 = 等级 * 4
                            if not self.参战单位[目标].灵宝天雷音鼓 then
                                self.参战单位[目标].灵宝天雷音鼓 = 0.005
                            else
                                 self.参战单位[目标].灵宝天雷音鼓 = self.参战单位[目标].灵宝天雷音鼓 + 0.005
                            end
            end,
        },---天雷音鼓-----
  寒霜盾戟={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前 ---不确定
                        前置.目标 = 编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if 境界 == 1 then
                            倍数=0.02
                        elseif 境界 == 3 then
                                倍数=0.08
                        elseif 境界 == 7 then
                                倍数=0.2
                        end
                        if self.参战单位[目标].灵宝寒霜盾戟 then
                            self.参战单位[目标].灵宝寒霜盾戟 = self.参战单位[目标].灵宝寒霜盾戟 + 倍数
                        else
                            self.参战单位[目标].灵宝寒霜盾戟 = 倍数
                        end
                        基础.无需状态 = 1
            end,
        },---寒霜盾戟-----
  乾坤金卷={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if self.参战单位[目标].类型 == "角色" then
                            if 境界 == 1 then
                                倍数=0.01
                            elseif 境界 == 3 then
                                倍数=0.04
                            elseif 境界 == 7 then
                                倍数=0.12
                            end
                        else
                            if 境界 == 1 then
                                倍数=0.005
                            elseif 境界 == 3 then
                                倍数=0.02
                            elseif 境界 == 7 then
                                倍数=0.06
                            end
                        end
                        if not self.参战单位[目标].灵宝乾坤金卷 then
                            self.参战单位[目标].灵宝乾坤金卷 = 倍数
                        else
                            self.参战单位[目标].灵宝乾坤金卷 = self.参战单位[目标].灵宝乾坤金卷 + 倍数
                        end
                        基础.无需状态 = 1
            end,
        },---乾坤金卷-----
  乾坤火卷={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if self.参战单位[目标].类型 == "角色" then
                            if 境界 == 1 then
                                倍数=0.01
                            elseif 境界 == 3 then
                                倍数=0.04
                            elseif 境界 == 7 then
                                倍数=0.12
                            end
                        else
                            if 境界 == 1 then
                                倍数=0.005
                            elseif 境界 == 3 then
                                倍数=0.02
                            elseif 境界 == 7 then
                                倍数=0.06
                            end
                        end
                        if not self.参战单位[目标].灵宝乾坤火卷 then
                            self.参战单位[目标].灵宝乾坤火卷 = 倍数
                        else
                            self.参战单位[目标].灵宝乾坤火卷 = self.参战单位[目标].灵宝乾坤火卷 + 倍数
                        end
                        基础.无需状态 = 1
            end,
        },---乾坤火卷-----
  乾坤水卷={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if self.参战单位[目标].类型 == "角色" then
                            if 境界 == 1 then
                                倍数=0.01
                            elseif 境界 == 3 then
                                倍数=0.04
                            elseif 境界 == 7 then
                                倍数=0.12
                            end
                        else
                            if 境界 == 1 then
                                倍数=0.005
                            elseif 境界 == 3 then
                                倍数=0.02
                            elseif 境界 == 7 then
                                倍数=0.06
                            end
                        end
                        if not self.参战单位[目标].灵宝乾坤水卷 then
                            self.参战单位[目标].灵宝乾坤水卷 = 倍数
                        else
                            self.参战单位[目标].灵宝乾坤水卷 = self.参战单位[目标].灵宝乾坤水卷 + 倍数
                        end
                        基础.无需状态 = 1
            end,
        },---乾坤水卷-----
  乾坤木卷={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if self.参战单位[目标].类型 == "角色" then
                            if 境界 == 1 then
                                倍数=0.01
                            elseif 境界 == 3 then
                                倍数=0.04
                            elseif 境界 == 7 then
                                倍数=0.12
                            end
                        else
                            if 境界 == 1 then
                                倍数=0.005
                            elseif 境界 == 3 then
                                倍数=0.02
                            elseif 境界 == 7 then
                                倍数=0.06
                            end
                        end
                        if not self.参战单位[目标].灵宝乾坤木卷 then
                            self.参战单位[目标].灵宝乾坤木卷 = 倍数
                        else
                            self.参战单位[目标].灵宝乾坤木卷 = self.参战单位[目标].灵宝乾坤木卷 + 倍数
                        end
                        基础.无需状态 = 1
            end,
        },---乾坤木卷-----
  乾坤土卷={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if self.参战单位[目标].类型 == "角色" then
                            if 境界 == 1 then
                                倍数=0.02
                            elseif 境界 == 3 then
                                倍数=0.08
                            elseif 境界 == 7 then
                                倍数=0.24
                            end
                        else
                            if 境界 == 1 then
                                倍数=0.01
                            elseif 境界 == 3 then
                                倍数=0.04
                            elseif 境界 == 7 then
                                倍数=0.12
                            end
                        end
                        self.参战单位[目标].灵宝乾坤土卷 = 倍数
                        基础.无需状态 = 1
            end,
        },---乾坤木卷-----
  赤炎战笛={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 2
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        基础.取消状态 = "赤炎战笛"
                        基础.添加状态={目标=目标,境界=0.001}
                        if 境界==1 then
                            基础.添加状态.境界 = 0.05
                        elseif 境界==3 then
                                基础.添加状态.境界 = 0.15
                        elseif 境界==7 then
                                基础.添加状态.境界 = 0.4
                        end
            end,
        },---赤炎战笛-----
  护体灵盾={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环

                        基础.添加状态={名称="护盾",回合=2,等级=math.floor(self.参战单位[目标].最大气血*0.1),境界=境界}
            end,
        },---赤炎战笛-----
  惊兽云尺={
            类型 = "减益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        if self.参战单位[目标].类型 ~= "角色" then
                             self.参战单位[目标].灵宝惊兽云尺 = 2
                        end
                        基础.无需状态 = 1
            end,
        },---乾坤木卷-----
  锢魂命谱={
            类型 = "灵宝",
            灵宝=1,
            技能流程 = function(self,编号,目标,境界)  ---------循环开始前
                        self.战斗流程[#self.战斗流程+1] = {
                            流程 = 21,
                            攻击方 = 编号,
                            挨打方 = {},
                            提示 = {
                                允许 = true,
                                类型 = "灵宝",
                                名称 = "锢魂命谱"
                            }
                        }
                        local 倍数 = 1
                        if 境界 == 1 then
                            倍数=2
                        elseif 境界 == 3 then
                            倍数=4
                        elseif 境界 == 7 then
                            倍数=8
                        end
                        for k,v in pairs(self.参战单位) do
                            if v.队伍~=self.参战单位[编号].队伍 and v.法术状态.锢魂术 then
                                v.法术状态.锢魂术 = v.法术状态.锢魂术.回合 + 倍数
                                if v.气血>0 then
                                    table.insert(self.战斗流程[#self.战斗流程].挨打方,{挨打方=k,特效={"锢魂术"}})
                                end
                            end
                        end
            end,
        },---乾坤木卷-----
  战神宝典={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        local 倍数 = 0
                        if 境界 == 1 then
                            倍数=0.015
                        elseif 境界 == 3 then
                                倍数=0.05
                        elseif 境界 == 7 then
                                倍数=0.15
                        end
                        if not self.参战单位[目标].灵宝战神宝典 then
                            self.参战单位[目标].灵宝战神宝典=倍数
                        else
                            self.参战单位[目标].灵宝战神宝典=self.参战单位[目标].灵宝战神宝典 + 倍数
                        end
                        基础.无需状态 = 1
            end,
        },---战神宝典-----
 定神仙琴={
            类型 = "增益",
            灵宝=1,
            目标 = function(self,编号,目标)
                    return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前 ---不确定
                        前置.目标=编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型,境界)---开始循环
                        基础.取消状态=self.技能数据.封印
                        基础.无需状态 = 1
            end,
        },---定神仙琴-----
----------------特技
  弱点击破={
            类型 = "物伤",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,50,"弱点击破")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0023 * 等级^2/等级 + 数据.次数 * 0.03
                        基础.防御系数 = 0.5
                        if self.参战单位[编号].奇经八脉.聚力
                           and self.参战单位[编号].人参娃娃
                           and self.参战单位[编号].人参娃娃.回合>0
                           and self.参战单位[编号].人参娃娃.层数>0 then
                              基础.结果系数 = 基础.结果系数 + self.参战单位[编号].人参娃娃.层数 * 0.15
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if  self.参战单位[编号].奇经八脉.炼果 and self.参战单位[编号].人参娃娃 then
                            self.参战单位[编号].人参娃娃.回合 = 3
                            self.参战单位[编号].人参娃娃.层数 = self.参战单位[编号].人参娃娃.层数 +1
                            if self.参战单位[编号].人参娃娃.层数>=3 then
                                self.参战单位[编号].人参娃娃.层数 = 3
                            end
                        end
            end,
        },---弱点击破--完成
  破血狂攻={
            类型 = "物伤",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,80,"破血狂攻")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        if self.参战单位[编号].奇经八脉.煞气 and self.参战单位[编号].经脉流派 == "风云战将"  then
                            self:凌波添加战意(self.参战单位[编号],1)
                        end
                        前置.目标数 = 2
                        前置.重复攻击 = true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0023 * 等级^2/等级 + 数据.次数 * 0.03
                        if self.参战单位[编号].奇经八脉.制怒 and self.参战单位[目标].法术状态.天罗地网 then
                           self:增加愤怒(编号,15)
                        end
                        if self.参战单位[编号].奇经八脉.怒目 then
                             基础.防御系数 = 基础.防御系数 - 0.1
                            for n,v in pairs(self.参战单位[编号].五行珠) do
                                if v >0 then
                                   基础.结果系数 =基础.结果系数 + 0.1
                                end
                            end
                        end
                        if self.参战单位[编号].奇经八脉.馀威 then
                          基础.结果系数 =基础.结果系数 + 0.5
                        end
                        if self.参战单位[编号].奇经八脉.强击 then
                           基础.结果系数 =基础.结果系数 + 0.32
                        end
                        if self.参战单位[编号].奇经八脉.聚力
                            and self.参战单位[编号].人参娃娃
                            and self.参战单位[编号].人参娃娃.回合>0
                            and self.参战单位[编号].人参娃娃.层数>0 then
                            基础.结果系数 =基础.结果系数 + self.参战单位[编号].人参娃娃.层数*0.15
                        end
                        if self.参战单位[编号].奇经八脉.破毒 then
                           if self.参战单位[目标].法术状态.尸腐毒 then
                               基础.结果系数 =基础.结果系数 + 0.12
                           else
                               基础.添加状态={名称="尸腐毒"}
                           end
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.狂血 then
                            返回.添加状态 = {名称="狂怒",回合=4}
                        end
                        if self.参战单位[编号].奇经八脉.怒火 and self.参战单位[编号].门派=="狮驼岭" and self.参战单位[编号].召唤兽 then
                          self.参战单位[self.参战单位[编号].召唤兽].奇经八脉狮驼怒火=1
                        end
                        if  self.参战单位[编号].奇经八脉.炼果 and self.参战单位[编号].人参娃娃 then
                            self.参战单位[编号].人参娃娃.回合 = 3
                            self.参战单位[编号].人参娃娃.层数 = self.参战单位[编号].人参娃娃.层数 +1
                            if self.参战单位[编号].人参娃娃.层数>=3 then
                                self.参战单位[编号].人参娃娃.层数 = 3
                            end
                        end
            end,
        },---破血狂攻--完成
  破碎无双={
            类型 = "物伤",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,80,"破碎无双")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0023 * 等级^2/等级 + 数据.次数 * 0.03
                        基础.扣除魔法 = 1
                        if self.参战单位[编号].奇经八脉.慨叹 then
                            基础.结果系数 =基础.结果系数 + 0.42
                        end
                        if self.参战单位[编号].奇经八脉.强击 then
                            基础.结果系数 =基础.结果系数 + 0.32
                        end
                        if self.参战单位[编号].奇经八脉.聚力
                            and self.参战单位[编号].人参娃娃
                            and self.参战单位[编号].人参娃娃.回合>0
                            and self.参战单位[编号].人参娃娃.层数>0 then
                            基础.结果系数 =基础.结果系数 + self.参战单位[编号].人参娃娃.层数*0.15
                        end
            end,
            结束流程 = function(self,编号,伤害,等级,前置,返回,类型) -------循环结束后
                        if self.参战单位[编号].奇经八脉.狂血 then
                            返回.添加状态 = {名称="狂怒",回合=4}
                        end
                        if self.参战单位[编号].奇经八脉.怒火 and self.参战单位[编号].门派=="狮驼岭" and self.参战单位[编号].召唤兽 then
                          self.参战单位[self.参战单位[编号].召唤兽].奇经八脉狮驼怒火=1
                        end
                        if  self.参战单位[编号].奇经八脉.炼果 and self.参战单位[编号].人参娃娃 then
                            self.参战单位[编号].人参娃娃.回合 = 3
                            self.参战单位[编号].人参娃娃.层数 = self.参战单位[编号].人参娃娃.层数 +1
                            if self.参战单位[编号].人参娃娃.层数>=3 then
                                self.参战单位[编号].人参娃娃.层数 = 3
                            end
                        end
            end,

        },---破碎无双--完成
  冥王暴杀={
            类型 = "法伤",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,60,"冥王暴杀")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0015 * 等级^2/等级
                        基础.结果伤害 = 50
            end,
        },---冥王暴杀--完成
  琴音三叠={
            类型 = "法伤",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,80,"琴音三叠")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标数 = 3
                        前置.重复攻击 = true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 0.4 + 0.0015 * 等级^2/等级  + 数据.次数 * 0.3
                        if self.参战单位[编号].奇经八脉.琴魂 and self.参战单位[编号].法术状态.龙魂 then
                            基础.减免系数= 0.9
                        end
                        if self.参战单位[编号].奇经八脉.穿透 and self.参战单位[目标].类型~="角色" then
                           基础.结果系数=基础.结果系数 + 0.3
                        end
                        if self.参战单位[编号].奇经八脉.抚琴 and self.参战单位[目标].门派~="魔王寨" then
                            if self.参战单位[目标].门派=="魔王寨" then
                                 基础.结果系数=基础.结果系数 + 0.2
                            else
                                 基础.结果系数=基础.结果系数 + 0.15
                            end
                        end
                        if self.参战单位[编号].奇经八脉.仙音 and self.参战单位[目标].法术状态.电芒 then
                            基础.结果系数=基础.结果系数 + 0.16
                        end
            end,
        },---琴音三叠--完成
  心疗术={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,60,"心疗术")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*0.06+400)
            end,
        },---心疗术--完成
  气疗术={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,30,"气疗术")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*0.03+200)
            end,
        },---气疗术--完成
  命归术={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,130,"命归术")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*0.5)
            end,
        },---命归术--完成
  气归术={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,30,"气归术")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*0.25)
            end,
        },---命归术--完成
  命疗术={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,90,"命疗术")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*0.09+600)
            end,
        },---命归术--完成
  四海升平={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,135,"四海升平")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*0.25)
            end,
        },---四海升平--完成
  水清诀={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    local 愤怒 = 50
                    if self.参战单位[编号].奇经八脉.花护 then
                        愤怒 = 愤怒 - 8
                    end
                    if self.参战单位[编号].奇经八脉.噬魂 and self:取是否单独门派(编号) then
                        愤怒 = math.floor(愤怒 * 0.5)
                    end
                    return self:愤怒消耗(编号,愤怒,"水清诀")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.取消状态 = self.技能数据.异常
                        self:解除所有经脉异常(目标)
                        if self.参战单位[编号].奇经八脉.花护 then
                            self.参战单位[目标].奇经八脉花护 = 1
                        end
                        if self.参战单位[目标].奇经八脉.背水 then
                            基础.添加状态={名称="背水",等级=150}
                        end
                        if self.参战单位[编号].奇经八脉.噬魂 and self:取是否单独门派(编号) then
                            self.参战单位[目标].奇经八脉噬魂 = 2
                        end
            end,
        },---水清诀--完成
  玉清诀={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    local 愤怒 = 125
                    if self.参战单位[编号].奇经八脉.花护 then
                        愤怒 = 愤怒 - 8
                    end
                    if self.参战单位[编号].奇经八脉.暗潮 then
                        愤怒 = 愤怒 - 10
                    end
                    return self:愤怒消耗(编号,愤怒,"玉清诀")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.取消状态 = self.技能数据.异常
                        self:解除所有经脉异常(目标)
                        if self.参战单位[编号].奇经八脉.花护 then
                            self.参战单位[目标].奇经八脉花护 = 1
                        end
            end,
        },---玉清诀--完成
  冰清诀={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    local 愤怒 = 100
                    if self.参战单位[编号].奇经八脉.花护 then
                        愤怒 = 愤怒 - 8
                    end
                    if self.参战单位[编号].奇经八脉.噬魂 and self:取是否单独门派(编号) then
                        愤怒 = math.floor(愤怒 * 0.5)
                    end
                    return self:愤怒消耗(编号,愤怒,"冰清诀")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*0.25)
                        基础.取消状态 = self.技能数据.异常
                        self:解除所有经脉异常(目标)
                        if self.参战单位[编号].奇经八脉.花护 then
                            self.参战单位[目标].奇经八脉花护 = 1
                        end
                        if self.参战单位[编号].奇经八脉.噬魂 and self:取是否单独门派(编号) then
                          self.参战单位[目标].奇经八脉噬魂 = 2
                        end

            end,
        },---冰清诀--完成
  晶清诀={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    local 愤怒 = 150
                    if self.参战单位[编号].奇经八脉.花护 then
                        愤怒 = 愤怒 - 8
                    end
                    return self:愤怒消耗(编号,愤怒,"晶清诀")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*0.25)
                        基础.取消状态 = self.技能数据.异常
                        self:解除所有经脉异常(目标)
                        if self.参战单位[编号].奇经八脉.花护 then
                            self.参战单位[目标].奇经八脉花护 = 1
                        end
            end,
        },---晶清诀--完成
  凝气诀={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,60,"凝气诀")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.增加魔法 =math.floor(self.参战单位[目标].最大魔法*0.15+200)
            end,
        },---凝气诀--完成
  凝神诀={
            类型 = "恢复",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,90,"凝神诀")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.增加魔法 = math.floor(self.参战单位[目标].最大魔法*0.15+400)
            end,
        },---凝神诀--完成
  慈航普渡={
            类型 = "复活",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,150,"慈航普渡")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前

                        前置.结尾 = self.参战单位[编号].气血 - 1
                        self.参战单位[编号].魔法 = 1
                        前置.目标组={}
                        for k,v in pairs(self.参战单位) do
                           if self:取是否复活(编号,k,"慈航普渡") then
                              table.insert(前置.目标组,k)
                           end
                        end
                        前置.目标数 = #前置.目标组
                        if 前置.目标组[1] then
                          前置.目标 = 前置.目标组[1]
                        end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 1
                        基础.固定结果 = self.参战单位[目标].最大气血
                        基础.造成伤势 ={数额=基础.固定结果}
            end,
        },---慈航普渡--完成
  起死回生={
            类型 = "复活",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,120,"起死回生")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*0.5)
                        基础.造成伤势 ={数额=基础.固定结果}
            end,
        },---起死回生--完成
  回魂咒={
            类型 = "复活",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,100,"回魂咒")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = 1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*0.1)
                        基础.造成伤势 ={数额=基础.固定结果}
            end,
        },---起死回生--完成


  太极护法={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:愤怒消耗(编号,90,"太极护法")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 7
            end,
        },---太极护法--完成
  罗汉金钟={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    local 愤怒 = 150
                    if  self.参战单位[编号].奇经八脉.静气 then
                      愤怒 = 愤怒 - 15
                    end
                    if self.参战单位[编号].奇经八脉.罗汉 then
                        愤怒 = 愤怒 - 4
                    end
                    return self:愤怒消耗(编号,愤怒,"罗汉金钟")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 4
                        if self.参战单位[编号].奇经八脉.罗汉 then
                           状态.回合 = 状态.回合+1
                        end
            end,
        },---罗汉金钟--完成
  光辉之甲={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,40,"光辉之甲")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.类型 = 2
                        状态.防御 = math.floor(self.参战单位[目标].防御*0.2)
            end,
        },---光辉之甲--完成
  圣灵之甲={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,80,"圣灵之甲")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.类型 = 2
                        状态.防御 = math.floor(self.参战单位[目标].防御*0.1)
                        if self.参战单位[编号].奇经八脉.余韵 and self.参战单位[编号].门派=="天宫" then
                            状态.防御= math.floor(状态.防御*1.5)
                        end
            end,
        },---圣灵之甲--完成
  流云诀={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,40,"流云诀")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.类型 = 2
                        状态.速度 =  math.floor(self.参战单位[目标].速度 * 0.2)
            end,
        },---流云诀--完成
  啸风诀={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,70,"啸风诀")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.类型 = 2
                        状态.速度 =  math.floor(self.参战单位[目标].速度 * 0.1)
                        if self.参战单位[编号].奇经八脉.余韵 and self.参战单位[编号].门派=="天宫" then
                            状态.速度= math.floor(状态.速度*1.5)
                        end
            end,
        },---流云诀--完成
  修罗咒={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,80,"修罗咒")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 3
            end,
        },---修罗咒--完成
  天衣无缝={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,80,"天衣无缝")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 3
            end,
        },---天衣无缝--完成
  野兽之力={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,70,"野兽之力")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.类型=2
                        状态.伤害=math.floor(self.参战单位[目标].伤害*0.2)
            end,
        },---野兽之力--完成
  魔兽之印={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,70,"魔兽之印")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.类型=2
                        状态.伤害=math.floor(self.参战单位[目标].伤害*0.1)
                        if self.参战单位[编号].奇经八脉.余韵 and self.参战单位[编号].门派=="天宫" then
                            状态.伤害= math.floor(状态.伤害*1.5)
                        end
            end,
        },---魔兽之印--完成
  菩提心佑={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,100,"菩提心佑")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 3
            end,
        },---菩提心佑--完成
  身似菩提={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,100,"身似菩提")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 2
            end,
        },---菩提心佑--完成
  先发制人={
            类型 = "增益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,90,"先发制人")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 3
                        状态.类型 = 2
                        状态.速度 = math.floor(self.参战单位[目标].速度*0.2)
            end,
        },---先发制人--完成
  笑里藏刀={
            类型 = "增益",
            特技 = 1,
            敌方 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    if self.参战单位[编号].奇经八脉.傲娇 then
                        return self:愤怒消耗(编号,36,"笑里藏刀")
                    else
                        return self:愤怒消耗(编号,40,"笑里藏刀")
                    end
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        local 数额 = 70
                        if self.参战单位[编号].神器技能 and self.参战单位[编号].神器技能.名称=="泪光盈盈"  then
                            数额 = 数额+self.参战单位[编号].神器技能.等级*6
                        end
                        self:减少愤怒(目标,数额)
                        基础.无需状态 = 1
            end,

        },---笑里藏刀--完成
  绝幻魔音={
            类型 = "增益",
            特技 = 1,
            敌方 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,70,"绝幻魔音")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        前置.全屏动画 = 1
                        self:减少愤怒(目标,20)
                        基础.无需状态 = 1
            end,
        },---绝幻魔音--完成
  放下屠刀={
            类型 = "减益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,30,"放下屠刀")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.伤害 =  math.floor(self.参战单位[目标].伤害*0.2)
            end,
        },---放下屠刀--完成
  河东狮吼={
            类型 = "减益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,100,"河东狮吼")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.伤害 =  math.floor(self.参战单位[目标].伤害*0.1)
                        if self.参战单位[编号].奇经八脉.余韵 and self.参战单位[编号].门派=="天宫" then
                            状态.伤害= math.floor(状态.伤害*1.5)
                        end
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画 = 1
            end,
        },---河东狮吼--完成
  破甲术={
            类型 = "减益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,35,"破甲术")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.防御 =  math.floor(self.参战单位[目标].防御*0.2)
            end,
        },---破甲术--完成
  碎甲术={
            类型 = "减益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,80,"碎甲术")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.防御 =  math.floor(self.参战单位[目标].防御*0.1)
                        if self.参战单位[编号].奇经八脉.余韵 and self.参战单位[编号].门派=="天宫" then
                           状态.防御 =  math.floor(状态.防御*1.5)
                        end
            end,
        },---碎甲术--完成
  凝滞术={
            类型 = "减益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,40,"凝滞术")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.速度 =  math.floor(self.参战单位[目标].速度*0.1)
            end,
        },---凝滞术--完成
  停陷术={
            类型 = "减益",
            特技 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                    return self:愤怒消耗(编号,70,"停陷术")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
                        状态.速度 =  math.floor(self.参战单位[目标].速度*0.05)
                        if self.参战单位[编号].奇经八脉.余韵 and self.参战单位[编号].门派=="天宫" then
                           状态.速度 =  math.floor(状态.速度*1.5)
                        end
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画 = 1
            end,
        },---停陷术--完成
---------------------其他技能
  武神怒击={
            类型 = "物伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,10,数量,"武神怒击")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标数 = 3
                        前置.重复攻击 =true
                        前置.全屏动画 = 1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0017 * 等级^2/等级
                        基础.结果系数 = 基础.结果系数 + 数据.次数*0.1
            end,
        },---武神怒击--完成
  刀光剑影={
            类型 = "法伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,25,数量,"刀光剑影")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画 = 1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 =10
            end,
        },---刀光剑影--完成
  毁灭之光={
            类型 = "法伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,25,数量,"毁灭之光")
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画 = 1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 =10
            end,
        },---毁灭之光--完成
  天外飞剑={
            类型 = "固伤",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 5
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,10,数量,"天外飞剑")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.固定结果 = 1
                        if 取随机数()<=70 then
                            基础.固定结果=math.floor(self.参战单位[目标].气血*0.1)
                        end
            end,
        },---天外飞剑--完成
  峰回路转={
            类型 = "恢复",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,50,数量,"峰回路转")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 =200
            end,
        },---峰回路转--完成
  仙人指路={
            类型 = "恢复",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,20,数量,"仙人指路")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 = math.floor(self.参战单位[目标].最大气血*0.1)
                        基础.取消状态 = self.技能数据.异常
                        self:解除所有经脉异常(目标)
            end,
        },---仙人指路--完成
  盾气={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=6
                        状态.防御=等级*境界
                        状态.类型 = 2
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 = 编号
            end,
        },---盾气--完成
  四面埋伏={
            类型 = "增益",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,20,数量,"四面埋伏")
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=4
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        if self.参战单位[目标].气血>self.参战单位[目标].最大气血*0.4 then
                            基础.无需状态 = 1
                        end
            end,
        },---四面埋伏--完成
  其徐如林={
            类型 = "恢复",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=16}
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,200,1,"其徐如林")
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始伤害 =1
                        基础.固定结果 = math.floor(self.参战单位[目标].最大气血*0.05)
                        基础.取消状态 = self.技能数据.异常
                        self:解除所有经脉异常(目标)
            end,
        },---其徐如林--完成
  其疾如风={
            类型 = "增益",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=16}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,200,1,"其疾如风")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=6
                        状态.类型=2
                        状态.速度 = math.floor(self.参战单位[目标].速度*0.3)
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画 = 1
            end,
        },---其疾如风--完成
  侵掠如火={
            类型 = "增益",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=16}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,200,1,"侵掠如火")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=6
                        状态.类型=2
                        状态.伤害 = math.floor(self.参战单位[目标].伤害*0.3)
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画 = 1
            end,
        },---侵掠如火--完成
  ["不动如山 "]={
            类型 = "增益",
            目标 = function(self,编号,目标)
                  return 目标
            end,
            冷却 = function(self,编号)
                  return {开始=0,使用=16}
            end,
            消耗 = function(self,编号,数量) --技能消耗
                  return self:魔法消耗(编号,200,1,"不动如山 ")
            end,
            人数 = function(self,编号,等级) ---技能人数
                    return 10
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=6
                        状态.类型=2
                        状态.防御 = math.floor(self.参战单位[目标].防御*0.3)
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.全屏动画 = 1
            end,
        },---不动如山 --完成
------------------状态类技能
  炎魂={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                        前置.目标 =  编号
                        self.参战单位[编号].九黎连击=self.参战单位[编号].九黎连击+10
                        if self.参战单位[编号].门派=="九黎城" and  self.参战单位[编号].神话词条.五马分尸
                         and 取随机数()<=self.参战单位[编号].神话词条.五马分尸*8 then
                            self.参战单位[编号].九黎连击 = self.参战单位[编号].九黎连击 + self.参战单位[编号].神话词条.五马分尸
                        end
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=1
                        状态.类型=2
                        if self:取玩家战斗() then
                            状态.伤害=math.floor(取随机数(self.参战单位[目标].防御*0.05,self.参战单位[目标].防御*0.1))
                            if self.参战单位[编号].奇经八脉.魂力 then
                                状态.伤害=状态.伤害*1.6
                            end
                        end
            end,
        },---炎魂-----
  怒哮={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                  前置.目标 =  编号
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=1
            end,
        },---怒哮-----

  浮空={
          类型 = "减益",
          被动 = 1,
          目标 = function(self,编号,目标)
                  return 目标
          end,
          消耗 = function(self,编号,数量) --技能消耗
                   return true
          end,
          添加状态 = function(self,编号,目标,等级,境界,状态)
                状态.回合=1
                if not self.参战单位[编号].取消浮空 then self.参战单位[编号].取消浮空={}end
                table.insert(self.参战单位[编号].取消浮空,目标)
                if self.参战单位[编号].神器技能 and self.参战单位[编号].神器技能.名称=="鸣空"  then
                  local 临时数额 = self.参战单位[编号].神器技能.等级*12
                  if self.参战单位[编号].神器技能鸣空 ==nil then
                     self.参战单位[编号].神器技能鸣空 ={数额=临时数额,层数=1}
                  else
                      self.参战单位[编号].神器技能鸣空.层数=self.参战单位[编号].神器技能鸣空.层数+1
                      if self.参战单位[编号].神器技能鸣空.层数>=6 then
                          self.参战单位[编号].神器技能鸣空.层数 = 6
                      end
                  end
               end
          end,
        },---浮空-----
 清净={
          类型 = "增益",
          被动 = 1,
          目标 = function(self,编号,目标)
                  return 目标
          end,
          消耗 = function(self,编号,数量) --技能消耗
                   return true
          end,
          添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=3
          end,
        },---清净-----
 神焰={
          类型 = "增益",
          被动 = 1,
          目标 = function(self,编号,目标)
                  return 目标
          end,
          消耗 = function(self,编号,数量) --技能消耗
                   return true
          end,
          添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=1
          end,
        },---神焰-----
 冰川怒伤={
          类型 = "增益",
          被动 = 1,
          目标 = function(self,编号,目标)
                  return 目标
          end,
          消耗 = function(self,编号,数量) --技能消耗
                   return true
          end,
          添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=math.floor(等级/20)+1
                        状态.等级=等级
          end,
        },---冰川怒伤-----
 毒={
          类型 = "减益",
          被动 = 1,
          目标 = function(self,编号,目标)
                  return 目标
          end,
          消耗 = function(self,编号,数量) --技能消耗
                   return true
          end,
          添加状态 = function(self,编号,目标,等级,境界,状态)
                        if self.参战单位[目标].法术状态.百毒不侵 then
                            状态.不可添加 = 1
                        else
                            状态.回合=5
                            状态.等级=等级
                            if self.参战单位[编号].低级毒 then
                                状态.等级 =  状态.等级 + 等级 * 0.5
                            elseif self.参战单位[编号].高级毒 then
                                状态.等级 =  状态.等级 + 等级
                            elseif self.参战单位[编号].超级毒 then
                                状态.等级 =  状态.等级 + 等级
                                local 降低 =取随机数(1,4)
                                if 降低==1 then
                                   状态.伤害= math.floor(self.参战单位[目标].伤害*0.1)
                                elseif 降低==2 then
                                   状态.法伤=math.floor(self.参战单位[目标].法伤*0.1)
                                elseif 降低==3 then
                                   状态.防御=math.floor(self.参战单位[目标].防御*0.1)
                                else
                                   状态.法防=math.floor(self.参战单位[目标].法防*0.1)
                                end
                            end
                        end
          end,
        },---冰川怒伤-----
 暗器毒={
          类型 = "减益",
          被动 = 1,
          目标 = function(self,编号,目标)
                  return 目标
          end,
          消耗 = function(self,编号,数量) --技能消耗
                   return true
          end,
          添加状态 = function(self,编号,目标,等级,境界,状态)
                        if self.参战单位[目标].法术状态.百毒不侵 then
                            状态.不可添加 = 1
                        else
                            状态.回合=6
                            状态.等级=等级
                            if self.参战单位[编号].奇经八脉淬芒 then
                               self.参战单位[编号].奇经八脉淬芒.回合 = 4
                               self.参战单位[编号].奇经八脉淬芒.加成 = self.参战单位[编号].奇经八脉淬芒.加成 + 1
                            end
                            if self.参战单位[编号].奇经八脉.天香 then
                                self:增加愤怒(编号,6)
                            end
                        end
          end,
          解除状态 = function(self,编号,目标,名称,数据)
                       if self.参战单位[数据.编号].奇经八脉.毒引  then
                            local 气血 = 600
                            if self.参战单位[编号].气血<600 then
                                气血 = 600 - self.参战单位[编号].气血+1
                            end
                           self.参战单位[编号].气血 = self.参战单位[编号].气血 - 气血
                       end
          end,
        },---冰川怒伤-----
 龙魂={
          类型 = "增益",
          被动 = 1,
          目标 = function(self,编号,目标)
                  return 目标
          end,
          消耗 = function(self,编号,数量) --技能消耗
                   return true
          end,
          添加状态 = function(self,编号,目标,等级,境界,状态)
                          状态.回合=4
                          状态.类型=2
                          if self.参战单位[编号].奇经八脉.凛然 then
                             状态.抵抗封印等级 = 80
                          end
          end,

        },---龙魂-----
 龙骇龙腾={
          类型 = "增益",
          被动 = 1,
          目标 = function(self,编号,目标)
                  return 目标
          end,
          消耗 = function(self,编号,数量) --技能消耗
                   return true
          end,
          添加状态 = function(self,编号,目标,等级,境界,状态)
                          状态.回合=999
                          状态.类型=2
                          if self.参战单位[编号].奇经八脉.凛然 then
                             状态.抵抗封印等级 = 80
                          end
          end,

        },---龙骇龙腾-----
 龙骇龙卷={
          类型 = "增益",
          被动 = 1,
          目标 = function(self,编号,目标)
                  return 目标
          end,
          消耗 = function(self,编号,数量) --技能消耗
                   return true
          end,
          添加状态 = function(self,编号,目标,等级,境界,状态)
                          状态.回合=999
                          状态.类型=2
                          if self.参战单位[编号].奇经八脉.凛然 then
                             状态.抵抗封印等级 = 80
                          end
          end,
        },---龙骇龙腾-----
 护盾={
          类型 = "增益",
          被动 = 1,
          目标 = function(self,编号,目标)
                  return 目标
          end,
          消耗 = function(self,编号,数量) --技能消耗
                   return true
          end,
          添加状态 = function(self,编号,目标,等级,境界,状态)
                        if self.参战单位[目标].法术状态.护盾 and not self.参战单位[目标].法术状态.灵宝护盾 then
                            self.参战单位[目标].法术状态.护盾.回合 = 999
                            if self.参战单位[目标].法术状态.护盾.护盾值 + 等级 < self.参战单位[目标].最大气血 * 2 then
                                self.参战单位[目标].法术状态.护盾.护盾值 = self.参战单位[目标].法术状态.护盾.护盾值 + 等级
                            end
                            状态.不可添加 = 1
                        else
                            状态.回合=999
                            状态.护盾值 = 等级
                            if self.参战单位[编号].奇经八脉.明心 then
                               状态.明心 =true
                            end
                            if 境界 then
                                状态.灵宝护盾 =true
                            end
                        end
          end,
        },---护盾-----
  灵刃={
            类型 = "减益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=4
                        状态.防御 = math.floor(self.参战单位[目标].防御*0.2)
                        状态.法防 = math.floor(self.参战单位[目标].法防*0.2)
            end,
        },---灵刃--完成
  灵断={
            类型 = "减益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=4
                        状态.最大气血 = math.floor(self.参战单位[目标].最大气血*0.05)
            end,
        },---灵断--完成
  电芒={
            类型 = "减益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合=3
                        状态.等级=等级
                        if self.参战单位[编号].奇经八脉.雷波 then
                           状态.雷波 = true
                        end
                        if self.参战单位[编号].奇经八脉.频变 then
                           状态.回合 = 状态.回合 + 1
                        end
            end,
        },---电芒--完成
  御风={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 3
                        状态.类型 = 2
                        状态.速度=等级 * 5
            end,
        },---御风--完成
  浮云神马={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 6
                        状态.类型 = 2
                        状态.速度=math.floor(self.参战单位[目标].速度*0.1)
            end,
        },---浮云神马--完成
  神机步={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 3
                        状态.类型 = 2
                        状态.躲避减少=等级*20
            end,
        },---神机步--完成
  进击必杀={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 5
                        状态.类型 = 2
                        状态.必杀=等级*10
            end,
        },---进击必杀--完成
  进击法暴={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 5
                        状态.类型 = 2
                        状态.法暴=等级*10
            end,
        },---进击法暴--完成

  灵法={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 2
                        状态.类型 = 2
                        状态.法伤=math.floor(self.参战单位[目标].法伤*等级*5/100)
            end,
        },---灵法--完成
  灵法1={
            类型 = "减益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 2
                        状态.防御=math.floor(self.参战单位[目标].防御*0.1)
            end,
        },---灵法1--完成
  怒吼={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 2
                        状态.类型 = 2
                        状态.伤害=math.floor(self.参战单位[目标].伤害*0.2)
            end,
        },---怒吼--完成
  怒吼1={
            类型 = "减益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 2
                        状态.法伤=math.floor(self.参战单位[目标].法伤*0.1)
            end,
        },---怒吼1--完成
  护佑={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 2
                        状态.法伤=math.floor(self.参战单位[目标].法伤*0.1)
                        状态.境界=等级
            end,
        },---怒吼1--完成

  摧心={
            类型 = "减益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 5
                        状态.伤害=math.floor(self.参战单位[目标].伤害*0.3)
                        状态.法伤=math.floor(self.参战单位[目标].法伤*0.3)
                        状态.防御=math.floor(self.参战单位[目标].防御*0.3)
            end,
        },---摧心--完成
  绝殇={
            类型 = "减益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 5
            end,
        },---摧心--完成
  碎甲刃={
            类型 = "减益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 2
                        状态.防御 = math.floor((5+(self.参战单位[目标].力量-self.参战单位[目标].等级)*0.15)*等级)
            end,
        },---碎甲刃--完成
  智眼={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 6
            end,
        },---智眼--完成
  怒眼={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 6
            end,
        },---怒眼--完成
  天眼={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 6
            end,
        },---天眼--完成
  重创={
            类型 = "减益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 3
            end,
        },---天眼--完成
  疯狂={
            类型 = "减益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 3
            end,
        },---疯狂--完成
  夺目={
            类型 = "状态",
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 4
            end,
        },---夺目--完成
  返场={
            类型 = "状态",
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 1
                        if self.参战单位[目标].法术状态.夺目 then
                            状态.回合 = self.参战单位[目标].法术状态.夺目.回合
                        end
            end,
        },---返场--完成
  魔冥={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 5
                        状态.等级 = 等级
            end,
        },---魔冥--完成
  风魂={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 999
            end,
        },---风魂--完成
  爪印={
            类型 = "状态",
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 5
                        if 等级 >= 5 then
                          等级=5
                        end
                        状态.层数 = 等级
            end,
        },---爪印--完成
  背水={
            类型 = "状态",
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 3
            end,
        },---爪印--完成
  轮回={
            类型 = "增益",
            被动 = 1,
            目标 = function(self,编号,目标)
                  return 目标
            end,
            消耗 = function(self,编号,数量) --技能消耗
                   return true
            end,
            添加状态 = function(self,编号,目标,等级,境界,状态)
                        状态.回合 = 6
                        状态.类型 = 2
                        状态.伤害 = 60
                        状态.格挡值 = 60
                        状态.狂暴等级 = 60
                        状态.穿刺等级 = 60
                        状态.物理暴击等级 = 60
                        状态.抵抗封印等级 = 60
            end,
        },---爪印--完成
  -- 不灭={
  --           类型 = "状态",
  --           添加状态 = function(self,编号,目标,等级,境界,状态)
  --                       状态.回合 = 4
  --                       -- 状态.类型 = 2
  --                       -- 状态.法伤=math.floor(self.参战单位[目标].法伤*1.3)
  --                       -- 状态.防御=math.floor(self.参战单位[目标].防御*1.3)
  --           end,
  --       },---不灭--完成
  -- 不灭1={
  --           类型 = "状态",
  --           添加状态 = function(self,编号,目标,等级,境界,状态)
  --                       状态.回合 = 2
  --           end,
  --       },---不灭1--完成
  -- 迷瘴={
  --           类型 = "状态",
  --           添加状态 = function(self,编号,目标,等级,境界,状态)
  --                       状态.回合 = 5
  --                       -- 状态.类型 = 2
  --                       -- 状态.伤害=math.floor(self.参战单位[目标].伤害*1.3)
  --                       -- 状态.法伤=math.floor(self.参战单位[目标].法伤*1.3)
  --                       -- 状态.防御=math.floor(self.参战单位[目标].防御*1.3)
  --                       -- 状态.速度=math.floor(self.参战单位[目标].速度*1.3)
  --           end,
  --       },---迷瘴--完成
  -- 汲魂={
  --           类型 = "状态",
  --           添加状态 = function(self,编号,目标,等级,境界,状态)
  --                       状态.回合 = 2
  --                       状态.等级 = 等级
  --           end,
  --       },---汲魂--完成

------------------普通攻击
  摧枯拉朽={
            类型 = "普攻",
            门派 = "大唐官府",
            奇经八脉=1,
            消耗 = function(self,编号,数量) --技能消耗
                 return self:魔法消耗(编号,300,1,"摧枯拉朽")
            end,
            冷却 = function(self,编号)
                  return {开始=15,使用=30}
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0026 * 等级^2/等级
            end,
        },---摧枯拉朽--完成
  披挂上阵={
            类型 = "普攻",
            门派 = "大唐官府",
            奇经八脉=1,
            消耗 = function(self,编号,数量) --技能消耗
                 return true
            end,
            冷却 = function(self,编号)
                  return {开始=5,使用=10}
            end,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                  前置.目标数 =  3
                  前置.重复攻击 = true
                  前置.技能提示 = 1
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1 + 0.0026 * 等级^2/等级
            end,
        },
  披坚执锐={
            类型 = "普攻",
            门派 = "大唐官府",
            奇经特效 = 1,
            技能流程 = function(self,编号,目标)  ---------循环开始前
                        if #self.参战单位[编号].追加法术>0 then
                            local 额外命令 = {目标=目标,名称=self.参战单位[编号].追加法术[取随机数(1,#self.参战单位[编号].追加法术)].名称}
                            self:法术攻击处理(编号,额外命令)
                            if self.参战单位[编号].奇经八脉.潜心 then
                                self.参战单位[编号].奇经八脉潜心 = 4
                            end
                            if self.参战单位[编号].奇经八脉.怒伤 and not self.参战单位[编号].奇经八脉.昂扬 then
                                self:增加愤怒(编号,10)
                            end

                        end
            end,
        },---披坚执锐--完成
  妙手空空={
            类型 = "普攻",
            技能流程 = function(self,编号,目标)  ---------循环开始前
                        local 等级 =  self:取技能等级(编号,"妙手空空")
                        self:妙手空空计算(编号,"妙手空空", 等级)
            end,
        },---妙手空空--完成
  普通攻击={
            类型 = "普攻",
            被动 = 1,
        },
  连击={
            类型 = "普攻",
            被动 = 1,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.目标数 =  2
                      前置.重复攻击 = true
                      前置.技能提示  = true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.结果系数 = 基础.结果系数 - 0.2 - 数据.次数 * 0.1
                        if self.参战单位[编号].气贯长虹 then
                            基础.结果系数 = 基础.结果系数 + 0.25
                        end
                        if self.参战单位[编号].阴伤 then
                          基础.结果伤害=基础.结果伤害+self.参战单位[编号].阴伤
                        end
            end,
        },
  高级连击={
            类型 = "普攻",
            被动 = 1,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.目标数 =  2
                      前置.重复攻击 = true
                      前置.技能提示  = true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.结果系数 = 基础.结果系数 - 0.2  - 数据.次数 * 0.1
                        if self.参战单位[编号].气贯长虹 then
                            基础.结果系数 = 基础.结果系数 + 0.5
                        end
                        if self.参战单位[编号].阴伤 then
                          基础.结果伤害=基础.结果伤害+self.参战单位[编号].阴伤
                        end
            end,
        },
  超级连击={
            类型 = "普攻",
            被动 = 1,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.目标数 =  2
                      前置.重复攻击 = true
                      前置.技能提示  = true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.结果系数 = 基础.结果系数 - 0.2 - 数据.次数 * 0.1
                        if self.参战单位[编号].气贯长虹 then
                            基础.结果系数 = 基础.结果系数 + 0.5
                        end
                        if self.参战单位[编号].阴伤 then
                          基础.结果伤害=基础.结果伤害+self.参战单位[编号].阴伤
                        end
            end,
        },
  理直气壮={
            类型 = "普攻",
            被动 = 1,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.目标数 =  3
                      前置.重复攻击 = true
                      前置.技能提示  = true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.结果系数 = 基础.结果系数 - 0.2 - 数据.次数 * 0.1
                        if self.参战单位[编号].气贯长虹 then
                            基础.结果系数 = 基础.结果系数 + 0.5
                        end
                        if self.参战单位[编号].阴伤 then
                          基础.结果伤害=基础.结果伤害+self.参战单位[编号].阴伤
                        end
            end,
        },

  苍鸾怒击={
            类型 = "普攻",
            被动 = 1,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.技能提示  = true
            end,
            基础计算 = function(self,编号,目标,等级,数据,基础,类型)---开始循环
                        基础.初始系数 = 1.1
            end,
        },---苍鸾怒击-----
  嗜血追击={
            类型 = "普攻",
            被动 = 1,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.技能提示  = true
            end,
        },---苍鸾怒击-----
  超级敏捷={
            类型 = "普攻",
            被动 = 1,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                      前置.技能提示  = true
            end,
        },---苍鸾怒击-----
  溅射={
            类型 = "普攻",
            被动 = 1,
            前置流程 = function(self,编号,等级,前置,类型) ---------循环开始前
                  前置.目标组 = {}
                  for k,v in pairs(self.参战单位) do
                      if v.队伍~=self.参战单位[编号].队伍 and self:取目标状态(编号,k,1) and k ~= 前置.目标 then
                          table.insert(前置.目标组, k)
                      end
                  end

                  if #前置.目标组 > 前置.目标数 then
                      随机排序(前置.目标组)
                      local 临时组 = 前置.目标组
                      前置.目标组 ={}
                      for i=1,前置.目标数 do
                          前置.目标组[i] = 临时组[i]
                      end
                  end
                  前置.目标数 = #前置.目标组
            end,
        },
--------------其他类型
  兵解符={
            类型 = "其他",
            门派 = "方寸山",
            目标 = function(self,编号,目标)
                  return 编号
            end,
            消耗 = function(self,编号,数量) --技能消耗
                 return true
            end,
            技能流程 = function(self,编号,目标)  ---------循环开始前
                  self:逃跑计算(编号,0)
            end,

        },
--------------
}



















